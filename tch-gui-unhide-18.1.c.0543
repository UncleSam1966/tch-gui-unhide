#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0543 - Release 2020.11.08
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT)   TITLE="$VARIANT";;
  $HOSTNAME)  TITLE="$HOSTNAME";;
  *)          TITLE="$VARIANT-$MAC";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  . /usr/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci get dropbear.lan.enable)" = "1" -a "$(uci get dropbear.lan.PasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci get system.config.export_plaintext)" = "1" -a "$(uci get system.config.export_unsigned)" = "1" -a "$(uci get system.config.import_plaintext)" = "1" -a "$(uci get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts Wt:s:Tryui:c:h:l:f:d: option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   t) case "$(echo ${OPTARG} | tr "GNOPLT" "gnoplt" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "$(echo ${OPTARG} | tr "DSN" "dsn" | sed 's/\(.\)\(.*\)/\1/')" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        *) TITLE="$VARIANT-$MAC";;
      esac;;
   r) RESTORE=y;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t       : Set a light (l), night (n), or Telstra-branded (t) theme"
      echo "                    (Default is current setting, or Telstra if no theme has been applied)"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n       : Set the browser tabs title to $VARIANT-$MAC (s), $VARIANT (d) or $HOSTNAME (n)"
      echo "                    (Default is current setting or $VARIANT-$MAC if not previously applied)"
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) Firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f ! -name '*fon*' | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done

# Do the restore
restore_www

# Always remove Telstra AIR card
if [ -f /www/cards/010_fon.lp ]
then
  rm /www/cards/010_fon.lp
fi

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo H4sIAAAAAAAAA+1X/2/TOBTfz/0rLMNpiWjTjm2tNFakYxoM3WATm/hloMpL3MYisYPtrAy0+9vv2U7aJG0Hk4DT6fKkNs7z+/Lxe/Z7znw+72/9YhoAjUYj+wRqPu14Z3e0NxoN9vZ397cGO4O9p7tbaP9XAzOUK00kQltSCH2f3Pfm/6M0h/xHIjSr+2X74OH5fzoY7bX5/x1UzX8qIpKon78NfjD/+zujPdgAQ8j/7u7+oM3/76A1+dcxTWnPvgRJ9hN8mAQPh8NN+R8Ohk8b+R/uDPa30OAn+P4u/c/z3+tlkmpJuEqIptEBigTiQqMwJnxGkY6ZQlOW0E6n10OnIiQJ+0o0E7wzo1rTLzowf5FICePe9pxe56wXCkm3/U4nMeIoFFxTricxTTIq0RhJ+jlnknoYpIP6LPYLpZQqRWZ0g1LO6vMLtZxt1GiKzlKiw7iLcq4BugYFpSXjs6CcKF6L+cVqcikNXntIQKmOP5CURCZcHu7nSvbBUG8GEcl5zCIaWCXcxQnjdAHEMicKognuFJj8dteZCok+ddENYrwA6tUcdxH2/pg/8cf2H/uQtU7dztWnj2CqAO/d+B3Ko5pDTiCGxlvnG+CZxRp30SU+taO7LjD5gvl2ydQ0gbgQy750Y/QCdk8EPo3EXc1HKBKRy9LLdZJTq/jCDKy5maSUW94rO7JMIc3Ws9wzN7TsLJdZ4tjnbmjZkkaW9w6elpEKLsJYitTJvlm+VvCFREYTBslTE5GZ7VyCvGGKXRdu3hdjaxYSGBVYT9zQmuuwKeKzL8ENMcn/nFOlJynVsYjQeIzw+dnFJTbR4IVjkDOujAqIB3CIJpkAHSJnyvONNSNxhUloUOGP1srFn++Pa1aWKawm2Soup/BHf002Nii4yaXKMkArCsspIw6IK2j+Hjf28xW+PDl+cwwLgS1dw7FG9Ojs9OydE634XyP4+ujs7QUI2pBscjiuAFsRKl2Na6BWxEpH4wqgIkLmmHcRlXKSqhkIMBGIjPJ7Tz7Cc2xDZpQdejM6mEumoWZY5GOMgmBjFGEKP0MW/XrBcmFO0OJfL1guzQn+dXx8fnq+XtLNlaKwAIs5TISisGXrpTjIchW/cSwPH9kuopDKwxB40zxJbpEiNzQKTDAKNr7fyKUttUVDmrMkQdcUFecUzSGG6FbkyMJx/WrOeCTm1gPjUwHmoVLRe328JLCkCGmBYEoxpV0QEDTHKYW6CzAPkA1OkXCwDSNh+omprNVfxxzuTJoDs/2hs+0/Q2jJWTSiIIReoekJNAwqPahThAOSFEo84J7CPYwWD99HVQNg8jBiN7BeotQY22ta71pEtyjPIjCIn1ufxSZNsmYnTDLTebIA0psRHcN2NVdAxVmWUa36bpLxMMkj0NDkWvXSBTSnXQcDvSot0ZhxLxaSfYW2SBKMXCkcY1PjMHJFrQDdvGiWwDfHqsiW8pqZFNliyvdX8DGaRLBaMH+Y0Blk6HkjJ6aX2Wxf0IS6uotAomLmsF9oVmMb6zRx7dqMrh7Z9ydoxzbeBvTXPMu1Mw+5fkFgq16WJaFSsbvV5tzdVAT8Bzs8gQ5umzw6cnV+4TYs32sde9V1UVYe7voI6iZ6bbsFOK30ju6aJrzqt6hS1aQa380k96tZ7pttaAdwUMxThZJlZuqxB986udnJvr2q3XrTnNuMI89H34wAflTJhx+4stMUgwruPfZMsfGh8yfANG26vBw1LBUhdpLuFuQ/WyuQSZF5OGKKQGkz1xotc2pk7z7YErbB7oqaqxtO784+zd9hfxGH5gFopvAlfOxAVfIbx8Aq/ttfLC211FJLLbXUUksttdRSSy211FJLLbXU0o/SP8h/NTQAKAAA | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  CWMP=enabled
else
  CWMP=disabled
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - fon-modal.lp (Telstra Air)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|fon-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ "$RULE" = "cwmpconfmodal" -a "$CWMP" = "disabled" ]
  then
    echo 070@$(date +%H:%M:%S): CWMP is disabled so disabling $f
    uci -q delete web.$RULE
    uci -q set web.card_cwmpconf.hide='1'
    SRV_nginx=$(( $SRV_nginx + 2 ))
    continue
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\&nbsp;</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
do
    sed -e "s,title>.*</title,title>$TITLE</title," -i $f
done
sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp

sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
  -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
  -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
  -e '$ a end' \
  -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
  -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
  -e '/^local mode_active = "default"/d' \
  -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
  -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
  -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
  -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
  -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Add IPv6 address to Internet card if assigned
for f in $(ls /www/cards/snippets/003_internet_* | grep -E '(dhcp|pppoe|static)')
do
  prefix="$(echo $f | grep -o -E '(dhcp|ppp|static)')"
  if [ $prefix = "ppp" ]
  then
    table=content_rpc
  else
    table=cs
  fi
  sed \
    -e '/network.interface.@wan.ipaddr/a \    ip6addr = "rpc.network.interface.@wan6.ip6addr",' \
    -e "/${table}\[\"ipaddr\"\])/a \          format(T' <nobr><strong>%s</strong></nobr>', ${table}[\"ip6addr\"])," \
    -i $f
done

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a end' \
  -e '/getExactContent/a if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix is "' \
  -e '/getExactContent/a end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text),' \
  -e 's/and netmask/<br>Subnet Mask/' \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong>%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 100@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server 
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"],switchDHCP)' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/string.upper/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo 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 | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /usr/tch-gui-unhide.theme
chown nobody:nogroup /usr/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

for l in $(grep -l -r 'current_year); ngx.print(' /www)
do
  echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
  sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2020.11.08\]/" -i $l
done

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
