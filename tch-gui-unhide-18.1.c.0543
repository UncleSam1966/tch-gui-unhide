#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0543 - Release 2020.10.04
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

VARIANT=$(uci get env.var.variant_friendly_name)
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT)   TITLE="$VARIANT";;
  $HOSTNAME)  TITLE="$HOSTNAME";;
  *)          TITLE="$VARIANT-$MAC";;
esac

grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
if [ $? -eq 0 ]; then
  THEME=night
else
  grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=light
  else
    THEME=Telstra
  fi
fi
case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
  "005c32") COLOR=green;;
  "662e91") COLOR=purple;;
  "f36523") COLOR=orange;;
  "008fd5") COLOR=blue;;
  "272c30") COLOR=monochrome;;
  *)        if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
esac
ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
THEME_ONLY=n

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0


RESTORE=n
WRAPPER=n
YES=n
KEEP_LP=n

FILENAME=$(basename $0)

CARDS=""
update_cards() {
  MODAL=""
  case "$2" in
    c) MODAL="contentsharing-modal.lp";;
    m) MODAL="usermgr-modal.lp";;
    n) MODAL="nat-alg-helper-modal.lp";;
    p) MODAL="printersharing-modal.lp";;
    q) MODAL="qos-queue-modal.lp";;
    r) MODAL="relay-modal.lp";;
    s) MODAL="system-modal.lp";;
    x) MODAL="xdsl-low-modal.lp";;
    A) for PARAM in c m n p q r s x; do update_cards $1 $PARAM; done;;
    *) echo "002@$(date +%H:%M:%S): WARNING - Ignored unknown card include/exclude option $2"
  esac
  if [ ! -z "$MODAL" ]; then
    CARDS=${1}${MODAL}$(echo $CARDS | sed -e "s/[IX]$MODAL//")
  fi
}

while getopts Wt:s:Tryun:x:i:c:h:l option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) KEEP_LP=y;;
   t) case "$(echo ${OPTARG} | tr "GNOPLT" "gnoplt" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue;;
        o) THEME=night; COLOR=orange; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome;;
        *) THEME=Telstra; COLOR=blue; KEEP_LP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOP" "bgmop" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "$(echo ${OPTARG} | tr "DSN" "dsn" | sed 's/\(.\)\(.*\)/\1/')" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        *) TITLE="$VARIANT-$MAC";;
      esac;;
   r) RESTORE=y;;
   n) update_cards 'I' $OPTARG;;
   x) update_cards 'X' $OPTARG;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t             : Set a light (l), night (n), or default Telstra (t) theme (Default is current setting, or Telstra if no theme has been applied)"
      echo " -c b|o|g|p|m         : Set the theme highlight colour (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo "                         b=blue o=orange g=green p=purple m=monochrome"
      echo " -i y|n               : Show (y) or hide (n) the card icons (Default is current setting, or n for light theme and y for night theme)"
      echo " -l                   : Keep the Telstra landing page"
      echo " -T                   : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n             : Set the browser tabs title to $VARIANT-$MAC (s), $VARIANT (d) or $HOSTNAME (n) (Default is current setting or $VARIANT-$MAC if not previously applied)"
      echo " -r                   : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -y                   : Bypass confirmation prompt (answers 'y')"
      echo " -x c|m|n|p|q|r|s|x|A : Exclude specific cards (use -x multiple times to specify multiple cards or use -xA for all of the following cards):"
      echo "                         c=Content Sharing m=Management n=NAT Helpers p=Printer Sharing q=QoS r=Relay Setup s=System Extras x=xDSL config A=ALL"
      echo " -n c|m|n|p|q|r|s|x|A : Include specific cards that were previously excluded (use -n multiple times to specify multiple cards or use -nA)"
      echo " -u                   : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U                   : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                        When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE: Theme (-t) and excluded/included cards (-x/-n) do not need to be re-specified when re-running the script: the"
      echo "      state will be 'remembered' between executions (unless you execute with the -r option, which will remove all state information)"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in $(echo cards docroot lua snippets | tr " " "$IFS")
  do
    echo 010@$(date +%H:%M:%S): Restoring /www/$d
    for s in $(find /rom/www/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]
      then
        if [ "$1" = "V" ]
        then
          echo 014@$(date +%H:%M:%S): Restoring $t
        fi
        cp -f -p "$s" "$t"
      fi
    done

    for f in $(find /www/$d -type f | grep -v -E \(/www/docroot/help\|003_lte.lp\))
    do
      if [ ! -f "/rom$f" ]
      then
        if [ "$1" = "V" ]
        then
          echo 019@$(date +%H:%M:%S): Removing $f
        fi
        rm -f "$f"
      fi
    done
  done
}

if [ $RESTORE = y ]
then
  restore_www V
  echo 019@$(date +%H:%M:%S): Removing config entries added to display hidden modals
  for s in $(uci show web | grep normally_hidden | cut -d. -f1,2)
  do
    uci delete $s
  done
  uci -q delete web.gatewaystatusajax
  uci -q delete web.usermgrmodal.roles
  uci add_list web.usermgrmodal.roles='admin'
  uci commit web
  /etc/init.d/nginx restart
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

if [ "$(uci get dropbear.lan.enable)" = "1" -a "$(uci get dropbear.lan.PasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci get system.config.export_plaintext)" = "1" -a "$(uci get system.config.export_unsigned)" = "1" -a "$(uci get system.config.import_plaintext)" = "1" -a "$(uci get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
if [ "$(uci get web.uidefault.upgradefw)" = "1" -a "$(uci get web.uidefault.upgradefw_role)" = "admin" ]; then
  FIX_FW_UPG=n
else
  FIX_FW_UPG=y
fi
echo "$(uci get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi


echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPG = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEP_LP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
if [ ! -z "$CARDS" ]; then
echo "030@$(date +%H:%M:%S):  - Cards:$(echo $CARDS | sed -e 's/-modal.lp//g' -e 's/I/ Include /g' -e 's/X/ Exclude /g')"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]
then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ] 
then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPG = y ] 
then
  echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
  uci set web.uidefault.upgradefw='1'
  uci set web.uidefault.upgradefw_role='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

if [ $FIX_PARENT_BLK = y ]
then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

restore_www

# Always remove Telstra AIR card
if [ -f /www/cards/010_fon.lp ]
then
  rm /www/cards/010_fon.lp
fi

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo H4sIAAAAAAAAA+1W32/bNhD2s/4KQsMWGbAUyY7trV2KFluAPhRDgRTogxMYtETLxChSI+nIaZH+7Tvqh2XLsdMNzYZh/B4skffx+PHueHJRFOe9Z0YImE6n5RPQfZbv0Wg6DCeTaXQx6YVReDEMe2j83MIM1kpjiVBPCqFP8Z6y/0dRQP5jLBP1jFXwlfkfTYbDaBwNIf/ROBza/P8TaPMf/hTN1b3SJAtY/k33MAmeTCbH8n8B172T/9F0POqh8JuqOIL/ef59P5dES8wVw5okL1AiEBcaxSvMU4L0iiq0pIw4ju+jK44XjCAmYszoJ6yp4E5KtCYbHZifRGSYcu+sIIs19WMhyVnfcUo64ukGXZrfeqyIUrC+mgtivQnqmdq+FDLDGsxKS8rToBrXxjWdrwjLiQS7JH+sqSSeC7sGW4Pbr6m5FJv7XVqCNc5EQtiWAiPM3mO9App7Xo7UeXUV/HIEF8JtZN8rJtI5BE0RbuS5v1JlopJsGWrFMJ+TMlbJEUZxmqEpV0Qa99rMB9WwCeV1qQGM5dkCyIDnrmMa1Le3fryunrPwNjCKae4O0NM0yLUm0rCb6Fxfv53DgQ63S6TIFwTL9uU18ILqWHvLi69cXuwup8vmoJgnyKveZ9FtcIfZmqAvEDYXCVmTZsM9Qx8ql3DnMFtVCUOgCU/KLerTVXtUg3aTS1gRbZ0dJPYxZ8Wus+KUs+KEszp4jKYrPc9wDoTPTlMlhi2WS3fgXLXLU0kIh6mH/UKF7qbJYx4+uBUDbWtv193W2qjacVyF4YRjODl69+a3Y54b86Oui6ddfzzt+mPHtUlM3VperLB6E8cw8I7e8zo/O51hzij/HdxXHchzY4aVurxxS6NvjDcuMl3F1yJNGWlMzawkmdBm9nvVTNEEhgm5ozHxa6472LahvmNaYg5tT3tnN87PCb1D1aauyjEfua86kxlmzHzEjeGs/xKhdn3bKoNYEojrL8B7S3BCpAfxKg+PrjbwBVDQH1oJCNwcVRELrs19MnvOF2l9qEXqm4/ApfvDd5tl+OP4ZS2njuVKZ6xMaFfRNc1yRt6ZUvc4ZYOD0p3tX+PbAfpc3QzjrtIEb9u70qWjB/TQh0Kom6pnhAwO4nKoolPns/37/7SKfXqpAvX/hoqiq6L4ayqKR1S0qTU6ugV3Drl+dfg0uTTNaY8Mk//2fxgLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwuLFn8C/+o9xAAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo H4sIAAAAAAAAA+0aa3PbOK6f/Su4ymUiXSzFT7lnx9npNd3tzbQ7vdnM3Icml6El2uZEr5MoO2k2+9sPoChZUuwke02z0zmhjSwCIAkCJADCXq/XR6++MXQARqOR/ASof8r3bn/UH3QGvcFw+KrT7Qy6/Vdk+K0FQ0gTQWNCXsVhKB7ie4z+ncIa7O+GDq7um+2Dp9u/Mxj1bLB/r2M39n8RKNvfD13qJc+/DZ5qf7vX6w67XbB/v98fNvZ/Cdhif5etuMNMn0amxFhe9HVzoIFt295l/0G/a9fsP+p0eq9I53mW+DD8n9vfNKOYiZgGiUcFc8fEDUkQCuIsabBgRCx5QubcY62WaZJ3AZ15jHihQz3+hQoeBq0FE4JdCwsfbuhTHugHazZLuemEMTswWi3JTryITEnM/pPymOkacMC20gxFTPnlknkRi+s8BQFYg8W1FcU8EPqG33JiBnK/Z9RlsX6mncq9m2htMoetzNpExCkziDEhm94H563jRNx47OS8tZdvdtzoJy5fWfLNnIXujWw6YSBgTSy+XXNXLMfdjt2JrskP3I/CWNBATO4IDLPkLjPTQH4EYQBrDwLmgELNbIJblyeRR2/GQGSTu/OWFTCxDuMrOGXEUjzZDDQV4QS1aYKSF8HYYYFg8Y4+Hk/ErQmauuIChI5BC2ZMXZ4mIGl0PYGFfdmG34kad2F1Sehxl+ydvsF/k4i6Lg8W445l94bMf4JsHLFzCnoNqM9undAL4/EenPTTv51O5qBRM+Ff2LhryfF8Gi94AFIKEfqZLPUBhdx3wr1VcoswyjSp2tUZlMCSC0fL22oGRClj9qzh/uRu61TwFoae4JHJAzR/adUem4t7ItKIB/PwdrO6jjUa4fIK2Xqvh/bEg71kLhlfLAWsIPapN6mPrAyRGeE1mEMez4jGuNvyfcQDOdIMzs/VZMViweEcqVF87roem0RhwvGIjukMxkrFrn33/cmdLMP1C8q+Xcy6UDGOfzujztUiDtPAHe/NHDaYU3CnZswicFMEpyLZLiRp7OnaEfcXR7DHZF8rChaaURw3lCL/6/Zgz6pzgoOMh1sOCRIenl9Os1UA7Ltlfpw3F6Iyfw8PkXzrd/bvSxIGi6+SRvX/3yTq2fclWoZgxDDwbh52xLix5Jbaul23H5+xHLt8mLbMVh/n+CiPQMcQZYjj0SSZapvYowHlwJi0vMhKmIioWIJ2MFdLAh5FTCRHGDsj8LSOl7oQLMFtJSrWJCqylqgbqTNaNRgegQjZfIQ8EGR/ggwIguy2aOrEPBIwxF90ba+kIaoZluNx50qfp4GDZ5roEI1vz1sryLnYlP32G6jbDdcWW0EkmZy3mJWA1/4UhxFdyPxCNyQWkhTkOGVzmnpCIu/wAXrM50Z1/dnZ1PcHD+T/z5L7Izyc/3c7w8Golv/bvX6T/78IvFj+/6QUP2P1WZLQBdvJX6UX3SBvEDv6lEgFeyLAfy3a6MraJEygSw2j+EQYpP5Mjpm/KsrcC0NE++CeLdlQBMj+HQhw0AH1ZWXNvBMmIKKNnZxlMamVo1VTUjejCfB9O5ZWpRar23XdeiieqK4qilxCEpX6ASrmtnVrmp+7F62lvGcB5kz7VVCRwkWrhSk+YDQ4R4JBG5MmHxG/KoS4iSSDh/Ee2hBMXAyOqB+4nbVbVAgc85bwIEqFfFMBETKwoKuRO3LXbsF/lKJXkeI9GBYFKMnxU8xZ4Ho3v2ToQpwaPpcK9632mAz9qgz9igz/+LQalObnkWwW8ypybb6vU8KgLoBdFcCuCWA/twDDigAf37wtze9TBxK2GA5pWQrgeVNgn0cWTAvRB1HvUlKB78Clgpo4/BTl0A4Kie2qyvIballvOQ67VxSYE84ywrNqclSR621eNyjJpXCw0DNe3dIFtyI8q2CvK4J9YDQpK8tdOpHE1WU6rRGeTaa73D9BxIG8H62NWSj4OAswl2nMLxGtF/49jAW4sBafE111sRBnQFBjQUuRYZQycZzKcg9kmC3mJazEVfUfLXit+svLFcW7I8h/V/OjYYS2y/yoQ4N3sGmL1UMbTgU0s3IVtk+ZxwTboGQMkSNrbl7das1AwejFERtHDtw4EpHIpwVUlJphDyV+SXm5UBDThTRtnpnreHIM1Ba+fNY+9DZn5IJMYR4tUxykC2kcZNJJJUEXGa70LR3bRPv32utoSukZR/U8XeAa/gVhygPfQEzSswY/v/+iPXHo7h8ZevjUgZlY/vWxgbOIrWvvgCuGSw+Mvw+mydg/geK1C+Mpc/lgl0cn0z6Gb99ku07pH/fP/V2YXOII7aKFWYGfLGCEUgpkQW7neuwMN9Y/Uxbf6LWQ367v3XZt30COxL12ZecX6UNx1UsY5CZuchaiJ9AFPPKjie+XQVjKqBQZz2pOBBkLxpMp6RjV7ae0vw+nZ7/Tc8fFQ2vLVCwf5+i1Peh0jBqybwNuvzeooW1A2p0qEjFGWfNy6WdgYixTrRhR6SG7jqQvtpRzAAnJVZuswLGRiPI4IXrZRgZk2q0y4vPVBaRYpY2Fu2kFKOMe2/A+2/BCam8Fbpv8Lg8r6m8F4UU1pfIkeVq3TG4DpBom0cPEwrXr8F6ijS4MY7/KaxBYIwbTOQ+4YNnRkpNMNTNTg5SpLsTovhC758wHlZ3yYaWGn/MLga1VGJJGLuaweXHkwYILIbUh0UD5mPhuLsOYf8HvEzwN7jhiGbpTDY8l2EqeGDX1vRt4XgzaDF9f7sfsRpTo1asR3HuigmQY9brPnDPPhesAVqE8tgCdntRrQBsF1lR2fKR6PF43kn5mt4upOqzC4ZQcTOHGttjtqLyII1TzybNWtLBQtXRjjN5u6KQ+XLUw3XjnMXxN/n5zRheYEcCGWGpYkQIRdOzEp50JP8aulseChVhO+OGhoUpfmAxNkfaZX1jy+4UzwEwyIgbtqaZBK1lzjBvIjT0dCPpkc+UZZ4yVvGQyg4VdTXJeTMwVWyn/rjHJC4riku/36XaJbt+jF+FMMZUjXI13k98q3moKW3C7WaFvnOsix9+dyxiB6B8AL2uJFT2+P/v4YXp+cEzJMmbzqbanyXzGjJkPtt51wn6U85wfHOLn4fkBnLiDQ1Q7vB8fUWhNNvPAZnsDSSufpQLMLg84uBctoCu5Ae7k/++lMFmpAXyjOf747z96vWGv+f3HS0DF/rWY9lxzPPL7j+7Arv/+Y9i1R0399yXg6fXfpxZ6uUx220U1NftCfbodn5du4/D6plywRJ8Nzpl5m7LkmgaXiMK7DLJjGNa11OH5d3JYCp3zhZUzajIjxsUUXSFdzd8hsbbg4pIymZrOYu4umEpQ84UI5qvqp1bPyNpFZkQ+cMjgsGZSMJV+OCUZf8nkIx9ppN3hVbycR6VeniNCACHwZ+IpzFM+JcpS+F5WWsir6TFX9Q/IGCxoyaWqpqyOYPqvismQf+hlmkFOSCdbajYOPi2LaD9q+FFm3VxlLtvyJpNZUZe6kVeYTB5MYFeyzqOhJHLYKdG1/DslObC8zGTzbvizN3VnwnV+3sPnobwKVYrjoCyP58qCW8/JziCfz4pM+wkGcEhX+clBW8nZlqLgs3eRXe02FsHJjVY1U8ZwnnrKJMj+Z5/aBhpooIEGGmiggQYaaKCBBhpooIEGGmiggQYaaKCBBhpooIEGGmiggQYayOC/0N/qsABQAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 070@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd -a "$(uci get cwmpd.cwmpd_config.state)" = "1" ]
then
  CWMP=enabled
else
  CWMP=disabled
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - fon-modal.lp (Telstra Air)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|fon-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | cut -d. -f2)
  fi
  if [ "$RULE" = "cwmpconfmodal" -a "$CWMP" = "disabled" ]
  then
    echo 070@$(date +%H:%M:%S): CWMP is disabled so disabling $f
    uci -q delete web.$RULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
    continue
  fi
  if [ $CREATE_RULE = y ]
  then
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    echo $CARDS | grep -q "X$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070@$(date +%H:%M:%S): Enabling $MODAL, but disabling card display
      uci add_list web.$RULE.roles='nobody'
    else
      echo 070@$(date +%H:%M:%S): Enabling $MODAL
      uci add_list web.$RULE.roles='admin'
    fi
    SRV_nginx=$(( $SRV_nginx + 4 ))
  else
    echo $CARDS | grep -q "X$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070@$(date +%H:%M:%S): Disabling card display for $MODAL 
      uci -q delete web.$RULE.roles
      uci add_list web.$RULE.roles='nobody'
      SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    echo $CARDS | grep -q "I$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070@$(date +%H:%M:%S): Enabling card display for $MODAL 
      uci -q delete web.$RULE.roles
      uci add_list web.$RULE.roles='admin'
      SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
  fi
done
# These were incorrectly enabled in release 2020.08.08 and earlier
uci -q delete web.mmpbxsipdevicemodal
uci -q delete web.mmpbxstatisticsmodal
uci commit web

# Modify management card to allow it to be suppressed
sed -e 's/^if assistant then/if admin and assistant then/' -i /www/cards/011_usermgr.lp

echo 070@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
sed -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
do
    sed -e "s,title>.*</title,title>$TITLE</title," -i $f
done
sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
 -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
 -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
 -e '$ a end' \
 -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
 -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
 -e '/^local mode_active = "default"/d' \
 -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
 -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
 -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
 -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
 -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
 -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
 -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
 -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
 -e '$ a end' \
 -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status to LAN card 
sed \
 -e '/local dhcpState$/a local dhcp6State_text = ""' \
 -e '/local dhcpState$/a local dhcp6State' \
 -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
 -e '/@lan.dhcpv4/a \    dhcpv4Proto = "uci.network.interface.@lan.proto",' \
 -e '/localdevmask = /d' \
 -e 's/localdevIP = "uci/localdevIP = "rpc/' \
 -e 's/dhcpState/dhcp4State/g' \
 -e 's/DHCP enabled/DHCPv4 enabled/' \
 -e 's/DHCP disabled/DHCPv4 disabled/' \
 -e '/getExactContent/a if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
 -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
 -e '/getExactContent/a \    dhcp6State = "1"' \
 -e '/getExactContent/a else' \
 -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
 -e '/getExactContent/a \    dhcp6State = "0"' \
 -e '/getExactContent/a end' \
 -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text),' \
 -e 's/and netmask is <strong>%s<\/strong>/\(<strong>%s<\/strong>\)/' \
 -e 's/localdevmask/dhcpv4Proto/' \
 -e '/^\\$/d' \
 -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/getExactContent/a \ ' \
 -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
 -e 's/\r//' \
 -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Only show WAN Services card if WAN interface is defined 
sed \
 -e '/uci.firewall.userredirectNumberOfEntries/a \  wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = wan_services_data["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and wan_ifname ~= "" and session:hasAccess/' \
 -i /www/cards/007_wanservices.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 100@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server 
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"],switchDHCP)' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
 -e 's/--  {"mmpbx-service/    {"mmpbx-service/' \
 -e '/mmpbx-contacts/d' \
 -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
 -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
 -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
 -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
sed \
 -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img  href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img  href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/Data Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(find /www/cards -type f -name '*lte.lp')
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i /www/cards/001_gateway.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0b2;"/' -i /www/cards/002_broadband.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i /www/cards/003_internet.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i /www/cards/004_wireless.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i /www/cards/005_LAN.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i /www/cards/006_Devices.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i /www/cards/007_wanservices.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i /www/cards/008_firewall.lp
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i /www/cards/008_telephony.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i /www/cards/009_diagnostics.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i /www/cards/011_usermgr.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i /www/cards/012_contentsharing.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i /www/cards/012_printersharing.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i /www/cards/013_parental.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i /www/cards/015_iproutes.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i /www/cards/015_tod.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i /www/cards/018_relaysetup.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i /www/cards/090_cwmpconf.lp
sed -e 's/xf0ad/xf0ec;"/' -i /www/cards/092_natalghelper.lp
sed -e 's/xf0ad/xf0b1;"/' -i /www/cards/093_xdsl.lp

for f in $(grep -l -r '<head>\\' /www/ 2>/dev/null)
do
  grep -q '<link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>' $f
  if [ $? -ne 0 ]; then 
    echo 160@$(date +%H:%M:%S): Adding the favicon to $f
    sed -e '/<head>/a <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>\\' -i $f
  fi
done
if [ "$THEME" = "telstra" ]; then
  echo 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AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACorECwkAAAAAAAAAAAAICcnERERKCkAAAAAAAAAJCUREREREREmAAAAAAAAEhAREREREREQAAAAAAAAGCERIgUFIxERJAAAAAAAABERER4FBR8RCyAAAAAAABkREREaBQUbHB0AAAAAAAARERERFgUFFxgAAAAAAAAAEBEREREUBQUVAAAAAAAAAA8QERESEwUFAgAAAAAAAAAACgsMDQcFBQ4AAAAAAAAAAAAGAgIHBQUIAgIJAAAAAAAABAUFBQUFBQUFAwAAAAAAAAECAgICAgICAgMAAAAAAAAAAAAAAAAAAAAAAAD//wAA/88AAP4HAAD8BwAA+AcAAPAPAADgDwAA4B8AAMA/AADAPwAA4D8AAP4/AAD4BwAA+AMAAPgHAAD//wAA | base64 -d > /www/docroot/img/favicon.ico
else 
  echo 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 | base64 -d > /www/docroot/img/favicon.ico
fi

echo 160@$(date +%H:%M:%S): Applying $THEME theme with $COLOR highlights and $ICONS card icons
if [ "$THEME" != "Telstra" ]; then
  # Common elements
  sed \
    -e '$ a body{font-family:Roboto,Noto,sans-serif;}' \
    -e '$ a input,button,select,textarea{font-family:Roboto,Noto,sans-serif;}' \
    -e '$ a .bbstats{margin:0px 0px -6px 20px;}' \
    -e '$ a .card{font-family:Roboto,Noto,sans-serif;}' \
    -e '$ a .card_bg>*{z-index:20;}' \
    -e '$ a .copyright{display:none;}' \
    -e '$ a .dw{font-family:Roboto,Noto,sans-serif;}' \
    -e '$ a .header{border-bottom:0px;box-shadow:none;margin-bottom:30px;}' \
    -e '$ a .header img{width:180px;}' \
    -e '$ a .nav-header{text-shadow:none;}' \
    -e '$ a .nav-list>li>a,.nav-list .nav-header{text-shadow:none;}' \
    -e '$ a .smallcard{border:0px;font-family:Roboto,Noto,sans-serif;font-size:14px;font-weight:400;}' \
    -e '$ a .smallcard .header{background-image:none;border-bottom:0px;font-size:20px;font-weight:400;text-shadow:none;}' \
    -i /www/docroot/css/gw.css
  sed \
    -e '$ a body{font-family:Roboto,Noto,sans-serif;background-image:none;}' \
    -e '$ a .navbar+.container{margin-top:130px;}' \
    -e '$ a .navbar-fixed-top .container{background-image:url(/img/logo.gif);background-repeat:no-repeat;background-size:180px;height:75px;margin-top:30px;}' \
    -e '$ a .navbar-fixed-top .navbar-inner{box-shadow:none;}' \
    -e '$ a .navbar-inner{box-shadow:none;}' \
    -e '$ a .navbar-inverse .navbar-inner{background-image:none;border-width:0px;}' \
    -i /www/docroot/css/gw-telstra.css

  # if you change any of these colors or CSS, recheck 001-Variables for default settings
  case "$COLOR" in 
    blue)   RGB_BTN=f36523; RGB_HDR=008fd5; RGB_NAV=008fd5; RGB_SYM=00b9f21f; RGB_GRAD_FROM=00b9f2; RGB_GRAD_TO=008fd5;;
    green)  RGB_BTN=662e91; RGB_HDR=005c32; RGB_NAV=005c32; RGB_SYM=ffec0126; RGB_GRAD_FROM=008a4c; RGB_GRAD_TO=005c32;;
    purple) RGB_BTN=005c32; RGB_HDR=662e91; RGB_NAV=008a4c; RGB_SYM=f365232b; RGB_GRAD_FROM=942977; RGB_GRAD_TO=662e91;;
    orange) RGB_BTN=662e91; RGB_HDR=f36523; RGB_NAV=f36523; RGB_SYM=008a4c3d; RGB_GRAD_FROM=f89406; RGB_GRAD_TO=f36523;;
  esac
fi
sed \
  -e '$ a u{text-decoration:none;}' \
  -e "$ a .card_bg:after{visibility:$ICONS;}" \
  -e '$ a .card_bg.mirror:after{transform:matrix(-1,0,0,1,0,0);}' \
  -e '$ a .header .btn{margin-left:5px;}' \
  -e '$ a .simple-desc{display:block;}' \
  -e '$ a .smallcard .content{font-size:14px;height:125px;}' \
  -e '$ a .smallcard .subinfos{font-size:14px;}' \
  -i /www/docroot/css/gw.css
sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEP_LP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e '/<head>/a <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>\\' \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img src="/img/logo.gif" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
if [ "$THEME" = "light" ]; then
  if [ $COLOR = monochrome ]; then
    RGB_BTN=404040; RGB_HDR=eee; RGB_NAV=404040; RGB_SYM=018ed42b; RGB_GRAD_FROM=404040; RGB_GRAD_TO=404040; RGB_TXT=404040; RGB_HDR_TXT=$RGB_TXT;
  else
    RGB_TXT=fff
    RGB_HDR_TXT=$RGB_HDR
  fi
  sed \
   -e "$ a a{color:#$RGB_NAV;}" \
   -e "$ a body{background-color:#fff;}" \
   -e "$ a .btn{color:#000}" \
   -e "$ a .btn.btn-primary{color:#fff}" \
   -e "$ a .btn-primary,.button:hover,.btn:hover,.smallcard .header .settings,.smallcard .header .settings:hover{background-color:#$RGB_GRAD_TO;background-image:-moz-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-webkit-gradient(linear,00,0100%,from(#$RGB_GRAD_FROM),to(#$RGB_GRAD_TO));background-image:-webkit-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-o-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:linear-gradient(tobottom,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);border-color:#$RGB_GRAD_TO;text-shadow:unset;}" \
   -e "$ a .btn:hover{-webkit-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);-moz-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(0,0,0,1);}" \
   -e "$ a .button:hover:hover,.button:hover:focus,.button:hover:active,.button:hover.active,.button:hover.disabled,.button:hover[disabled],.btn:hover:hover,.btn:hover:focus,.btn:hover:active,.btn:hover.active,.btn:hover.disabled,.btn:hover[disabled],.smallcard .header .settings:hover:hover,.smallcard .header .settings:hover:focus,.smallcard .header .settings:hover:active,.smallcard .header .settings:hover.active,.smallcard .header .settings:hover.disabled,.smallcard .header .settings:hover[disabled]{background-color:#$RGB_GRAD_FROM;color:#fff}" \
   -e "$ a .card_bg:after{color:#$RGB_SYM;}" \
   -e "$ a .modal-backdrop{background-color:#fff;}" \
   -e "$ a .modal-header{color:#$RGB_HDR_TXT;}" \
   -e "$ a .nav-tabs>.active>a, .nav-tabs>.active>a:hover, .nav-tabs>.active>a:focus{background-color:#00B1EB;color:#fff}" \
   -e "$ a .smallcard{background-color:#eee;color:rgba(64,64,64,0.75);}" \
   -e "$ a .smallcard .header{background-color:#$RGB_HDR;color:#$RGB_TXT;}" \
   -e "$ a .smallcard .subinfos{color:rgba(64,64,64,0.75);}" \
   -e "$ a .switchOn{background-color:#00a540;}" \
   -i /www/docroot/css/gw.css
  sed \
   -e "$ a body{background-color:#fff;}" \
   -e "$ a .container>.row{background-color:#dadada;border-color:#dadada;}" \
   -e "$ a .navbar-inverse .navbar-inner{background-color:#fff;}" \
   -e "$ a .networkmap .devicelist{border-color:#094f9c;}" \
   -e "$ a .networkmap .right,.networkmap .left,.networkmap .longleft{background-color:#f89406;color:#fff}" \
   -i /www/docroot/css/gw-telstra.css
  echo 170@$(date +%H:%M:%S): Deploy new and modified light theme images
  echo  | base64 -d | tar -xzf - -C /
if [ -f /www/docroot/landingpage.lp -a $KEEP_LP = n ]
then
  sed \
   -e "$ a @media screen and (max-width: 979px) body.landingpage{background-color:#f8f8f8;background-image:unset;}" \
   -e "$ a body.landingpage{background-color:#f8f8f8;background-image:unset;}" \
   -i /www/docroot/css/gw-telstra.css
fi
elif [ "$THEME" = "Telstra" ]; then
  sed \
    -e '$ a .card_bg:after{z-index:-20;}' \
    -i /www/docroot/css/gw.css
  cp -p /rom/www/docroot/img/logo.gif /www/docroot/img/logo.gif
  echo 175@$(date +%H:%M:%S): Deploy new and modified diagnostics images for Telstra theme
  echo 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 | base64 -d | tar -xzf - -C /
elif [ "$THEME" = "night" ]; then
  if [ $COLOR = monochrome ]; then
    RGB_BTN=272c30; RGB_HDR=272c30; RGB_NAV=0088cc; RGB_SYM=eeeeee0f; RGB_GRAD_FROM=272c30; RGB_GRAD_TO=272c30; RGB_TXT=fff;
  else
    RGB_TXT=$RGB_HDR
  fi
  sed \
   -e "$ a a{color:#$RGB_NAV;}" \
   -e "$ a body{background-color:#353c42;color:#fff}" \
   -e "$ a legend{color:#fff;}" \
   -e "$ a #tod-modal div:nth-child(3){background-color:#353c42;color:#fff;}" \
   -e "$ a .btn{color:#000}" \
   -e "$ a .btn.btn-primary{color:#fff}" \
   -e "$ a .btn-primary,.button:hover,.btn:hover,.smallcard .header .settings,.smallcard .header .settings:hover{background-color:#$RGB_GRAD_TO;background-image:-moz-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-webkit-gradient(linear,00,0100%,from(#$RGB_GRAD_FROM),to(#$RGB_GRAD_TO));background-image:-webkit-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-o-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:linear-gradient(tobottom,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);border-color:#$RGB_GRAD_TO;text-shadow:unset;}" \
   -e "$ a .btn:hover{-webkit-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);-moz-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(0,0,0,1);}" \
   -e "$ a .button:hover:hover,.button:hover:focus,.button:hover:active,.button:hover.active,.button:hover.disabled,.button:hover[disabled],.btn:hover:hover,.btn:hover:focus,.btn:hover:active,.btn:hover.active,.btn:hover.disabled,.btn:hover[disabled],.smallcard .header .settings:hover:hover,.smallcard .header .settings:hover:focus,.smallcard .header .settings:hover:active,.smallcard .header .settings:hover.active,.smallcard .header .settings:hover.disabled,.smallcard .header .settings:hover[disabled]{background-color:#$RGB_GRAD_FROM;color:#fff}" \
   -e "$ a .card{background-color:#272c30;}" \
   -e "$ a .card_bg:after{color:#$RGB_SYM;}" \
   -e "$ a .caret{border-top-color:#fff;}" \
   -e "$ a .dropdown-menu,.dropdown-menu>li>a{background-color:#$RGB_BTN;color:#fff;}" \
   -e "$ a .grey{background:#353c42;}" \
   -e "$ a .header .btn{background-color:#$RGB_BTN;color:#fff;}" \
   -e "$ a .header .btn:hover{background-color:#fff;color:#000;}" \
   -e "$ a .header .btn:hover .caret{border-top-color:#000;}" \
   -e "$ a .loading{background:#000000e0;}" \
   -e "$ a .loading-wrapper{background:#000000e0;}" \
   -e "$ a .login{background-color:#272c30;}" \
   -e "$ a .modal-header{color:#$RGB_TXT;}" \
   -e "$ a .modal-header,.modal-body,.modal-footer{background-color:#272c30;}" \
   -e "$ a .nav-list>.active>a,.nav-list>.active>a:hover,.nav-list>.active>a:focus{background-color:#$RGB_NAV;}" \
   -e "$ a .smallcard{background-color:#272c30;color:rgba(64,64,64,0.75);}" \
   -e "$ a .smallcard .content{background-color:#272c30;color:#fff;}" \
   -e "$ a .smallcard .header{background-color:#$RGB_HDR;}" \
   -e "$ a .smallcard .subinfos{color:#bec5cb;}" \
   -e "$ a .switchOn{background-color:#00a540;}" \
   -e "$ a .table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th {background-color:#353c42;}" \
   -i /www/docroot/css/gw.css
  sed \
   -e "$ a body{background-color:#353c42;color:#fff;}" \
   -e "$ a legend{color:#fff;}" \
   -e "$ a .btn{background-color:#005c32;background-image:none;color:#fff;text-shadow:none;}" \
   -e "$ a .btn-primary:hover,.btn-primary:focus,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled]{background-color:#005c32;color:#fff}" \
   -e "$ a .btn:hover .caret{border-top-color:#000;}" \
   -e "$ a .caret{border-top-color:#fff;}" \
   -e "$ a .container>.row{background-color:#272c30;border-color:#272330;}" \
   -e "$ a .menubar .menu-item a .menu-icon.selected,.menubar .menu-item a:hover .menu-icon{background-color:#3d8dbb;}" \
   -e "$ a .menubar .menu-item a{color:#0088cc;}" \
   -e "$ a .navbar-inverse .navbar-inner{background-color:#353c42;color:#fff;}" \
   -e "$ a .networkmap .devicelist{border-color:#024b96;}" \
   -e "$ a .networkmap .right,.networkmap .left,.networkmap .longleft{background-color:#fff;color:#000}" \
   -e "$ a .table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th {background-color:#353c42;}" \
   -i /www/docroot/css/gw-telstra.css
  echo 180@$(date +%H:%M:%S): Deploy new and modified night theme images
  echo  | base64 -d | tar -xzf - -C /
if [ -f /www/docroot/landingpage.lp ]; then
  if [ $KEEP_LP = y ]; then
    grep ^body /www/docroot/css/gw-telstra.css | grep gradient | sed -e 's/^body{/body.landingpage{/' >> /www/docroot/css/gw-telstra.css
  else
    sed \
      -e "$ a @media screen and (max-width: 979px) body.landingpage{background-color:#353c42;background-image:unset;}" \
      -e "$ a body.landingpage{background-color:#353c42;background-image:unset;}" \
      -e "$ a body.landingpage#detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
      -i /www/docroot/css/gw-telstra.css
  fi
fi
fi

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  SRV_transformer=0
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-)
    . $s
  done

  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    echo 190@$(date +%H:%M:%S): Restarting transformer...
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
[ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
[ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
[ $SRV_system -gt 0 ] && /etc/init.d/system reload
[ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart

echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp to bypass the"
echo "++      Telstra Basic web GUI..."
echo
