# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

VARIANT=$(uci get env.var.variant_friendly_name)
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /rom/www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT)   TITLE="$VARIANT";;
  $HOSTNAME)  TITLE="$HOSTNAME";;
  *)          TITLE="$VARIANT-$MAC";;
esac

grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
if [ $? -eq 0 ]; then
  THEME=night
else
  THEME=light
fi
case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
  "005c32") COLOR=green;;
  "662e91") COLOR=purple;;
  "f36523") COLOR=orange;;
  "008fd5") COLOR=blue;;
  *)        if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
esac
ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
THEME_ONLY=n

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0


