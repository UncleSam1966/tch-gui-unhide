echo [$SCRIPT]: Adding theme controls to System Extras
sed \
  -e '/ngx.print(html)/i tinsert(html, ui_helper.createSimpleLight(nil, T"Theme Enabled", { light = { class = "green" } }) )' \
  -i /www/cards/091_system.lp
sed \
  -e '/getExactContent(env)/a \local current_theme = content_helper.readfile("/tmp/tch-gui-unhide-theme","line")' \
  -e '/getExactContent(env)/a \local theme_settings = {}' \
  -e '/getExactContent(env)/a \for k, v in string.gmatch(current_theme, "(%w+)=(%w+)") do' \
  -e '/getExactContent(env)/a \  theme_settings[k] = string.untaint(v)' \
  -e '/getExactContent(env)/a \end' \
  -e '/getExactContent(env)/a \local theme_names = {' \
  -e '/getExactContent(env)/a \    {"light", T"Light"},' \
  -e '/getExactContent(env)/a \    {"night", T"Night"},' \
  -e '/getExactContent(env)/a \    {"telstra", T"Telstra Branding"},' \
  -e '/getExactContent(env)/a \}' \
  -e '/getExactContent(env)/a \local theme_colours = {' \
  -e '/getExactContent(env)/a \    {"blue", T"Blue"},' \
  -e '/getExactContent(env)/a \    {"green", T"Green"},' \
  -e '/getExactContent(env)/a \    {"orange", T"Orange"},' \
  -e '/getExactContent(env)/a \    {"purple", T"Purple"},' \
  -e '/getExactContent(env)/a \    {"red", T"Red"},' \
  -e '/getExactContent(env)/a \    {"monochrome", T"Monochrome"},' \
  -e '/getExactContent(env)/a \}' \
  -e '/getExactContent(env)/a \local card_icons_options = {' \
  -e '/getExactContent(env)/a \    {"visible", T"Visible"},' \
  -e '/getExactContent(env)/a \    {"hidden", T"Hidden"},' \
  -e '/getExactContent(env)/a \}' \
  -e '/SAVE/a \    local theme_name = string.untaint(vars["theme_name"])' \
  -e '/SAVE/a \    local theme_colour = string.untaint(vars["theme_colour"])' \
  -e '/SAVE/a \    local card_icons = string.untaint(vars["card_icons"])' \
  -e '/SAVE/a \    if theme_name ~= theme_settings["THEME"] or theme_colour ~= theme_settings["COLOR"] or card_icons ~= theme_settings["ICONS"] then' \
  -e '/SAVE/a \      theme_settings["THEME"] = theme_name' \
  -e '/SAVE/a \      theme_settings["COLOR"] = theme_colour' \
  -e '/SAVE/a \      theme_settings["ICONS"] = card_icons' \
  -e '/SAVE/a \      local file, err_msg = io.open("/tmp/tch-gui-unhide-theme", "w")' \
  -e '/SAVE/a \      if file then' \
  -e '/SAVE/a \        file:write("THEME=" .. theme_settings["THEME"] .. "; COLOR=" .. theme_settings["COLOR"] .. "; ICONS=" .. theme_settings["ICONS"] .. "; KEEPLP=" .. theme_settings["KEEPLP"] .. ";")' \
  -e '/SAVE/a \        file:close()' \
  -e '/SAVE/a \        message_helper.pushMessage("Theme change will be visible when you close this window.", "info")' \
  -e '/SAVE/a \      else' \
  -e '/SAVE/a \        message_helper.pushMessage("Faied to persist theme preferences: " .. err_msg, "danger")' \
  -e '/SAVE/a \      end' \
  -e '/SAVE/a \    end' \
  -e "/<\/fieldset><\/form>/ i \</fieldset>\\\\" \
  -e "/<\/fieldset><\/form>/ i \<fieldset>\\\\" \
  -e "/<\/fieldset><\/form>/ i \  <legend>');  ngx.print( T\"Theme\" ); ngx.print('</legend>\\\\" \
  -e "/<\/fieldset><\/form>/ i \    ');" \
  -e "/<\/fieldset><\/form>/ i \      local html = {}" \
  -e "/<\/fieldset><\/form>/ i \      html[#html + 1] = ui_helper.createInputSelect(T\"Theme: \", \"theme_name\", theme_names, theme_settings[\"THEME\"])" \
  -e "/<\/fieldset><\/form>/ i \      html[#html + 1] = ui_helper.createInputSelect(T\"Colour: \", \"theme_colour\", theme_colours, theme_settings[\"COLOR\"])" \
  -e "/<\/fieldset><\/form>/ i \      html[#html + 1] = ui_helper.createInputSelect(T\"Card Icons: \", \"card_icons\", card_icons_options, theme_settings[\"ICONS\"])" \
  -e "/<\/fieldset><\/form>/ i \      ngx.print(html)" \
  -e "/<\/fieldset><\/form>/ i \      ngx.print('\\\\" \
  -i /www/docroot/modals/system-modal.lp
