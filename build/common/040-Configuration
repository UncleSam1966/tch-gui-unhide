if [ "$(uci get dropbear.lan.enable)" = "1" -a "$(uci get dropbear.lan.PasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootLogin)" = "1" ]
then
  echo [$SCRIPT]: SSH already properly enabled for LAN access
else
  echo [$SCRIPT]: Properly enable SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ "$(uci get system.config.export_plaintext)" = "1" -a "$(uci get system.config.export_unsigned)" = "1" -a "$(uci get system.config.import_plaintext)" = "1" -a "$(uci get system.config.import_unsigned)" = "1" ] 
then
  echo [$SCRIPT]: Unsigned configuration export/import already enabled in the web GUI
else
  echo [$SCRIPT]: Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ "$(uci get web.uidefault.upgradefw)" = "1" -a "$(uci get web.uidefault.upgradefw_role)" = "admin" ] 
then
  echo [$SCRIPT]: Firmware upgrade already enabled in the web GUI
else
  echo [$SCRIPT]: Enabling firmware upgrade in the web GUI
  uci set web.uidefault.upgradefw='1'
  uci set web.uidefault.upgradefw_role='admin'
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

echo "$(uci get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  echo [$SCRIPT]: The admin role can already administer the parental block
else
  echo [$SCRIPT]: Ensure admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

uci commit

