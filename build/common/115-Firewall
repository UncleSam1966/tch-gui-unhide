echo [$SCRIPT]: Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo [$SCRIPT]: Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo [$SCRIPT]: Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/string.upper/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

