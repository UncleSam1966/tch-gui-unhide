RESTORE=n
WRAPPER=n
YES=n

FILENAME=$(basename $0)

CARDS=""
update_cards() {
  MODAL=""
  case "$2" in
    c) MODAL="contentsharing-modal.lp";;
    m) MODAL="usermgr-modal.lp";;
    n) MODAL="nat-alg-helper-modal.lp";;
    p) MODAL="printersharing-modal.lp";;
    q) MODAL="qos-queue-modal.lp";;
    r) MODAL="relay-modal.lp";;
    s) MODAL="system-modal.lp";;
    x) MODAL="xdsl-low-modal.lp";;
    *) echo "[$SCRIPT]: WARNING - Ignored unknown card include/exclude option $2"
  esac
  if [ ! -z "$MODAL" ]; then
    CARDS=${1}${MODAL}$(echo $CARDS | sed -e "s/[IX]$MODAL//")
  fi
}

while getopts Wt:ryux:i: option
do
 case "${option}" in
   W) WRAPPER=y;;
   t) if [ "$(echo ${OPTARG} | tr "LN" "ln" | sed 's/\(.\)\(.*\)/\1/')" = "n" ]; then THEME=night; else THEME=light; fi;;
   r) RESTORE=y;;
   i) update_cards 'I' $OPTARG;;
   x) update_cards 'X' $OPTARG;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
         echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
         return 5
      else 
         STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
         LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
         next=''
         for t in $(echo $RESULT | tr " " "$IFS")
         do
            case "$next" in
            s) STATUS="$t";next='';;
            l) LENGTH="$t";next='';;
            *) case "$t" in
            "HTTP/1.1") next='s';;
            "Content-Length:") next='l';;
            *) next='';;
            esac
            esac
         done
         case "$STATUS" in
         200)  if [ -f $FILENAME ]
               then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
               fi
               curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
               if [ $? -eq 0 ]
               then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
               else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
               fi;;
         404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
               return 4;;
         *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
               return 5;;
         esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t light|night     : Set the theme to either light (the default) or night"
      echo " -r                 : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -y                 : Bypass confirmation prompts (answers 'y')"
      echo " -x c|m|n|p|q|r|s|x : Exclude specific cards (use -x multiple times to specify multiple cards):"
      echo "                        c=Content Sharing m=Management n=NAT Helpers p=Printer Sharing q=QoS r=Relay Setup s=System Extras x=xDSL config"
      echo " -i c|m|n|p|q|r|s|x : Include specific cards that were previously excluded (use -i multiple times to specify multiple cards)"
      echo " -u                 : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U                 : Download the latest release, including utility scripts (will overwrite all existing script versions)"
      fi
      echo 
      echo "NOTE: Theme (-t) and excluded/included cards (-x/-i) do not need to be re-specified when re-running the script:"
      echo "      state will be 'remembered' between executions (unless you execute with the -r option, which will remove all state information)"
      echo
      exit;;
 esac
done

