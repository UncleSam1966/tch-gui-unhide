#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0462 - Release 2020.11.11
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  . /usr/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts Wt:s:Tryui:c:h:l:f:d: option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   t) case "$(echo ${OPTARG} | tr "GNOPLT" "gnoplt" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   r) RESTORE=y;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t       : Set a light (l), night (n), or Telstra-branded (t) theme"
      echo "                    (Default is current setting, or Telstra if no theme has been applied)"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) Firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo H4sIAAAAAAAAA+1XbW/TOhTe5/4Ky3C1RLRp2UsrjRXpMg2G7mATm/gyUJUlbmPh2MF2Vgba/e332E7aJG3HnQRcoZsjbXHs8/L4PPY56Xw+72/9ZBmAjEYj+wRpPu346e5obzQa7O3v7m8Nng72dna30P7PBmYkVzqUCG1JIfR9et9b/01lDvzHIjK7+2nn4OH87wxGey3/v0Kq/KciDpn68cfgX/K/vzMcDfYHhv/d3b1hy/+vkDX864SkpGdfApb9gBiG4OFwuIn/4c6oyf8QOsAWGvyA2N+V/zn/vV4miZYhVyzUJD5AsUBcaBQlIZ8RpBOq0JQy0un0euhURCGjX0NNBe/MiNbkiw7Mv1ikIeXe9pxc57QXCUm2/U6HGXUUCa4J15OEsIxINEaSfM6pJB4G7aC+iv3CKCVKhTOywSin9fWFWU43WjRVZ2moo6SLcq4BugYDpSXls6BcKF6L9cVucikNXntJwKiOP5AkjE26PNzPleyDo94MMpLzhMYksEa4ixnlZAHETk4UZBPCKXD57a4zFRJ96qIbRHkB1KsF7iLs/TF/4o/tf+wDa526n6tPH8FVAd678TuEx7WAPIQcmmidb4BnlmjcRZf41I7uujDJF5Nvl5OaMMhLaKcv3Ri9gNMTQ0yjcVeLEQkmcllGuWY5sYYvzMC6m0lCuJ17ZUd2Ukhz9OzsmRva6SyXGXPT525opyWJ7dw7eNqJVHARJVKkTvfN8rWCLwplPKFAnpqIzBznEuQNVfS6CPO+GFu3QGBcYD1xQ+uuQ6eIz74EN6Eh/3NOlJ6kRCciRuMxwudnF5fYZIMXgUHPhDImoB7AJZpkAmxCOVOeb7wZjSscRgYV/mi9XPz5/rjmZUlhlWRruFzCH/01bGwwcItgguDoOapWUrViulwysQB7Bdff48bJvsKXJ8dvjmFLEKGGaI3q0dnp2TunWom/RvH10dnbC1C0ydkUcFwBtqJUhhrXQK2olYHGFUBFhsyF7yIi5SRVM1CgIhAZ4ffWAITn2KbMGDv0ZnQwl1RD9bDIxxgFwcYswhJ+hiz69Yrlxpyixb9esdyaU/zr+Pj89Hy9plsrVWEDFnPEhCJweOtFOchylbxxUx4+sv1EIZVHEcxNc8ZukQpvSByYZBTT+H4nl7boFq1pThlD1wQVNxbNIYfoVuTIwnGda055LOY2AuVTAe6hZpF7Y7wMYUsx0gLBkqJKuyQgaJNTAhUYYB4gm5yCcPANI2E6i6mx1b+OueaZNBdm+0Nn23+G0HJm0ZKCCLqGJifQOoj0oGKFHJCkUOwB9xS+yEjx8H1UdQAuD2N6A/sNlRpj+8HWuxbxLcqzGBzi5zZmcUhZ1uyJLDM9KAuA3izUCRxX8zGoOM0yolXfLVIesTwGCx1eq166gOas62Cga6UlGjPuJULSr9AgQ4aRK4pjbKodRq68FaCbn5wl8M25KthSXpNJkS2WfH8FHyUsht2C+0NGZsDQ8wYnpqtZti8II64CI9CouDnsF5bV3CY6Za5xm9HVI/v+BD21LbgB/TXPcu3cA9cvQjiql2VJqNTubrVNdzcVAf/BAU+gl9t2j45cxV+Ejcr3Wu9eDV2UlYeHPoK6iV7bbgFBK72ju6Ydr8YtqlSVVBO7SXK/ynLfHEM7gItiniqSNDNLjz341ZObk+zbj7Zbb5pzyzjyfPTtgynN3mMPP6pw4kOXZ7BqWnL5IWR1l3pFEp2ma6P+s7UKmRSZh2OqQihe5hNGy5wY3buqehHXlbz1EE2h+2XITPnc4HfFzNUsZ3dnn+bfYX/BQfPyNY/PS/jJBRXRb1xBa/hf/25qpZVWWmmllVZaaaWVVlpppZVWWmmlld9B/gHYoJnqACgAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\&nbsp;</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change the Gateway card title to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
  -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
  -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
  -e '$ a end' \
  -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
  -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
  -e '/^local mode_active = "default"/d' \
  -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
  -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
  -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
  -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
  -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Add IPv6 address to Internet card if assigned
for f in $(ls /www/cards/snippets/003_internet_* | grep -E '(dhcp|pppoe|static)')
do
  prefix="$(echo $f | grep -o -E '(dhcp|ppp|static)')"
  if [ $prefix = "ppp" ]
  then
    table=content_rpc
  else
    table=cs
  fi
  sed \
    -e '/network.interface.@wan.ipaddr/a \    ip6addr = "rpc.network.interface.@wan6.ip6addr",' \
    -e "/${table}\[\"ipaddr\"\])/a \          format(T' <nobr><strong>%s</strong></nobr>', ${table}[\"ip6addr\"])," \
    -i $f
done

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a end' \
  -e '/getExactContent/a if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix is "' \
  -e '/getExactContent/a end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text),' \
  -e 's/and netmask/<br>Subnet Mask/' \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong>%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 100@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server 
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"],switchDHCP)' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/string.upper/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /usr/tch-gui-unhide.theme
chown nobody:nogroup /usr/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2020.11.11\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
