#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0462 - Release 2020.11.16
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  . /usr/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts Wt:s:Tryui:c:h:l:f:d: option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   t) case "$(echo ${OPTARG} | tr "GNOPLT" "gnoplt" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   r) RESTORE=y;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t       : Set a light (l), night (n), or Telstra-branded (t) theme"
      echo "                    (Default is current setting, or Telstra if no theme has been applied)"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) Firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo H4sIAAAAAAAAA+0ba3PbNjKf+SswdFORE0qWZNm+S+NMHk5SzTWuL07bm3F9HoqEJJ4pkiVIya7H99tvFwBJ8CH5kcjX6wkfbAJYAIvdxT6w0GKx2H6y5tKFsr+/z/9Dqf7n372d/X530AO43pNurzvo7j0hu+tGDEvKEjsm5EkchskquNv6/0fLAvjv2LHL1igFd+T/7mDQ29/Z3QX+93Z7G/4/Sin43+3tnntRHKYJZR0/+oprIIP39vaW8X9vr79T4f9gp997QrpfEYel5f+c/+12FNMktgPm2wl1nxM3JEGYEGdqBxNKkqnHyNjzqaa12+RdYI98SvzQsX3vdzvxwkCb0CShl0kH/7jhzPYCo7Wgo9RrO2FMW6amcXAyDuOZnZADwpLYCyYdUZedqXc+pX5EY+iP6W+pF1NDh1k6eYduSlAnDBIaJEvgy735IBDryysV1rUTexa61M9BGGUM9gNAweSy4ySXHdki+wHa9o/tZAoQ+javse3svLR5HU6NrmneOJvr+dRmrx0HKkY+2gSS0gCIeXgV2DPPIZ/4BHIR9yo4d8I0QDpxnDtA3uMjQ2dXrOP4NmOd/IjqFknilJqaOqj4tgOXbBXVMCZd5OHweD4gJwnwrrK0F80HzWunjtcJaLII44sOX7tYujRIqfDFlXq2+uHRiaaN08BB0SEs8r3EuLQYjUztEmZIQiEcxmXBlcgC+aO+y1B0aIRT6c8BgeubjLc2CGCMjBMiZejG6T+fsrNnJkCJqZ9PWDoyJCDMJxEwHFPOfbol/j/rncE8DqGBa2pwLlKYV/Ro0JSJshuw8zhyziMpDfCdE8gD+YvHtgNEygibtZxHQYW06kQZSfMlGI3nNGa8EzcPG4YNknOLzGFO2LYXM6M0OfRe35hwglEG5x2OHpe26mynW7X5nxG+dTmq0yF6AaLzzTcQQJ42dVdGGkS2c2FUFzBNAgokZZQIAGQWQXgTTvQMQLyRB9JwpayQyVW3vm9iVFEo750L4Lwzt/2Ukn8Di3RBCClU6SibW4hgJjhPmW7JUaalW6AbVDyK72dkK5ujIA2qjQikNzFav2q/ai9cb074kT3QWWQHO/rLSuPM9n00vdjRMr8jpJihUIgdJ6agmN8C3PfUdmlsfNaHx/zowkEBCV+hi0wCs5bQUtfPKIconI8mOkGd2B5N2qjJD/Rvty7H3d5fvquiDZ8JWgHejhvL9+PNIp+2Xcoc3ueRaUzHB/qW/vLbYMSiF9ue2KiqUM99L7g4kPRvyZl4Txt7JFJJOJn4VHbItpjOwgTagGeiwXMBOTr3HCoooLesQusq3NHkauTIaL0AfRMGE/K09w17+bT/jftiW7S8FMqxZWk5DM6f0ZjTLAjDsajqSydgpGUVStm0tGLXartZlh6YBAh7C4H/AJRsNTK5heqjgciNBEQjwbg5WkHKmtG6lS8Pm5YBswqrVeGW0vFQdj2YdA3IgyklJ1zDriSGosVXz4J7zzVcVVDz9mU7b+WGK2SwfEKdslXgTkTR15n44QiUVodyj9IFTQtqWxmL+ruonvbOcl1eVuWl5ZoGoLvQ1WvQ5ygcKdNWLksOwHL05Hq1sbDgZ/0wPCHHEjrbi0Z9Ru8A73osGwD2Y4XyP+GS9IM3mSZGMa1V3w4ofNVMj/1w4djOlNZZMXacBLBM0IiwDo6mZV4UY5Emea2JE+oyDYAlDuT9GQOWL1WifnUcJ+Z7aCRvOWyZ9rdBP4jy+aRWbRcZ3StnA0zly+X/USHUBmHjo8Z/GP+7oYPR7dpugO54/9Pb29vd2d8bQPzfB/jN/c9jFJX/0pH86mvc//5vZ2e3v+H/Y5QG/hdmJQ8lvmyNW+7/+rt7+xX+7/e7m/u/Ryn3uv/74SEXf/e425tRxuwJXQpf7i9u90K27D5Q6Spu+vgdk4WRcX4dyWsZxvM36DAVI9GR8SAyom/C0Kd2oBXu5PmxHdszfj2DHt+58EPwUugWh9fi4HEEtE042ssGZCAw4kZdmONUX3f+pjYzNpWGysifO5B8i5KulV2DBLg+/XtK4yuj2KpVrG7WLj0q1xhVdyq/wVDd4B8jFCcdvCrYLpX/TJOQ5VcXIqwdhe4VSSNkTDke9qOqGOBliOZHHfB48TbK0LdR77HAiyKasG3R6QWOn7owIrFHrM1v1gKaiLFlVDBCy3DB7/Y0jL3fgaoYU89oMg0hDENS6sTmN40S5UbdWg8Oq2T7KNjDjLL8g3BHeZdZC83EvSVNSqSZJjNf3CXi1+kWr8u7v9YLn07AIxVR6Gf9RIYHOlZbL7az3oahNb954SXOFBj9LhN3ohdiqluqGJ6qPWfmfWb/RDFwpYRfy7+Xx0SsVByb+lp535lKM1yxFt4qRIQKsLrswK+8s3sPFgOkvX4LBwP/22o/Lw32v3aR+KVrrLb/vd3ufjX/B9Ab+/8oZY32/w55vwcl8/5wDsUdsovzk+FwiVNxwukyZMNjCRuH3JJX0pDPgd7YY+RkCLzfUvo3elWZF+A+geUOZ9CVA09e/1wHex24PwskkJ9KCpKff9CZfjoLhG9zrU257eY3KcMs6QQ+SWDPuLszlPUInQS1IbmKOACKCVRBM7ph4CPSmO+yNDtJcNZr4gVRmvAvJWvSJw7F1cCEkBtyA46MVcblkDIwUrZwIXJsyq05TuXmNWP20WYXCkqymuMi62tG4gMI2MK+UvAoWnJUiqY1Y3MSpnFJavKGHJe8Zd3cgdPkOSp/soaCQ1nL10flpn7aQu4Gi9Pm2ME718OZhE+MDa9dt1Q/pD5NaNHEk3I8ItBd8bRAZj4sbWQzmuWqGx8SNOGDOsxS6jxOYJPGGOEzri0Dhar6sOp7LN6EVF8CiHz9A1L/JeNSfwGACWQ+FWaQL59PAAgcSDmcZ42b3gHwb35Hu/QpgEz73+M5gDqiyJ+XTR0q54+IInXfShCjulJOxIUdnMMy44Y3Ap5MljesyTedU3Gap8KbEuJ8OUt/pZun/TNL74gMwbwjzgXsGFDQkTtKk49N/OpevEWAoCfkmXh36kTzPV1m6Iv2vdiVA/INnW7ln4Ih1xzX096ZRT4b8tMkN3kOXmGMSP7dZsnuZT3ATwS+1PXBeu0E8G7WaCoewzJMllmGOy9uEdRJeU5SZBWzacnNwzTzbIlm/kKS3Mmv8RQgl47t1MeF9HnoRQpCDLSzgyjxHBhKXi7KCpoC6o4Go91+letLODOZ+0gOUziyDn6pqWwEFziHo3/hIq99P/t0aWJ7PsOHN6A0yTgOZ4TazhQ8zwVDvfHhpyEeRWKPwjnEAPxqqelAdXAVqRu3RuJyzCJbQhlXdXyGcI4vx9MQOAkVfQGk6MEEGZ4hb0X9fvGs3A5KRVROL85OUTccZPWA11G7FAD9CkC/CrBTAdipAgwqAIMqwG4FAOpcmUnqBJ4PdosLk1A8jUwj78M0cPWyQpMzoKuxVMGpzoPiCJReQJT9gPqjvlfoCMgLJ27nP+vocwR0IdcS7yU4MECKrR7hMSmWkujwG6M8PgGBd10EdH8U/Mv8puwKs1kyFK+kJkMffjG8CLCLITaySCZCMtRZDI/xtca7mF9+QuBVwHLDhQAl5kBwZKhOje3O7cCh7vC4CI+sktsDc+GjiRUQGaY//OOt2YSrwlkuG6h9BD2kcgRqd/SlDC9ufxVjtSTAHB5DoHeSjoDdlobmZSncfHAkrI2lSWOgcOfDLzCaK956JCmpQI/S2YjGw+ATXh4Y7b9CsQj+NS0t167Lhw+Dd0E6O+Fa0cgVpqlIQokIwkUtNd3RS21SZlbjkbIEe/ifOgdM9UXkPeNl/CoHzLJl3RHz0Qn5ifEURIaM8khIQajUumak3qYsASsEuCloSXojbRvQa+z9YofgRuVoc0wmNnzPkCxgXjAOK0p4SaSwSvNxQh0GzOCORaZPLHJBr3JhBL1iERrHeSDFqZO7+GIkf94qgwUBUbwqliN4jJBNlulS0ccVKd4TQnfd0OHauT++xH4hfQstVmemonmyPVe4g9eSiFb+nBv1gSmedMFXPTwptxYRisY7xPmD+XiNi5kXuFQ+Htf/+QooBiSr7ycLDpHp1R3KKDpgd46fC0ViqTJoFVu2kMY5+cyH5uDACL67TGKbFak3/gK9lnn7s+Te6g+k1595y1NqlVwRkh+cqU/ycWo5Q5Sn2mqvRqv4ccFZfedSvccp27Xa/Y6prcqB3WtzpZe15G0YjL1JGouw+gt3fAf73eAclLfe5Dd8nd2jFftSllbVQKFI1F2Qkm65FftqBvNPksPclIeXki5e0xr3f//X7+9t3n8+Sinxv2p8v9Iat7z/6+4PBhX+7w563U3+/zHK3fP/d8z3r0yGZz+JTKh8M3et170yfhmSO6cYKeozcOHLAPIHcOQ49D3nSkCNYs+d0PYEJoygrzzgDe8kH2SnfqNlWaRH+8kKjwfB1YUIJzE4DSxyrTc9CbPKPxXRb8ws1JBEZVMbwtaPCA8Ow/fyPULmtcpmsYb5uD8o2JRN2ZRN2ZRN2ZRN2ZRN2ZQ/bPkPto01TgBQAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo H4sIAAAAAAAAA+0ca3PbuPE+61egvLuanFK0FL9a55I5J+freZqe3dhNPtgeDU1CEi8UyZKUadfj/vbuAiAJ8CFRjpObTokPFgksFot9AVgsnWXZ9jdfuIygHBwcsF8o1V/2PN452N3f3XkxxvrxaHe0+w3Z+9KEYVkmqR0T8k0chukquHXt/6MlA/k7duwmX1ALOsp/b3d3fLCztwfyH++N93v5f41Syn/0l/EkuU9SurD86FnHQAHv7++3yX/3YPyiIv+dgwOw/9GzUtFS/s/lPxxGMU1jO0h8O6XuIXFDEoQpceZ2MKMknXsJmXo+HQyGQ3Ic2Dc+JX7o2L73bzv1wmAwo2lK71IL/7jhwvYCfSujN0tv6IQx3TIGAwZOgtkdeYV/xXtCkwT68zrLSe8sUSPap2G8sFNoTtLYC2YWfxeNS28yp35EY2iP6b+WXkx1DUa1igbNEKBRHN7dy2CundqL0KV+AQJvtn9mp3MA07bZW7LNTWHI3sAgtJzs+8QPZxNgWkIDJE/7yUuQK24Bkcx9O5hQxiu3BSJbDeHBDKarAFIvSGiM46dYb/HXnNfnjEhoZJO3QES6tnQ8S5i3+PmR/16Ori2ckhdpJlkPBsqQ0hihc/adn/8ygRnXh3PjMLqhdlw+/AhwFp+W0j3r2D2rd2esqndm1eJv0cOb5qyxA5fo/PlyfG3d2v6Skv8AozUSxgLo8oXSYIAx0GBQVwBuFSAaGrhsCMEPPgZ/KQd5BT3GBbKarjQhy2Rk2Spk2WpknFcMFXtsQVTTPgWP4LvvzebpZGFHAPAwyPUTocPpVDMHx2X3WUxpAFWPqg2B401pE4YLjUMQN9d6GV3RKgiUEXN2rkAMHCTvjn5tw5w3N6LO1qP+uBr1x0bUnN0rMHOxteDljTJWlLTwpYdzOzlyHHjRWx2bELrkCie+F3wC5Nzl6prj20ny6kpjjUNsvNIIutFhGs5mPs2b8tqYLsIUa79P8irPhVeX3noOHQpYzSz8rjHANSACP5/qW1eDH1zvlvBBtSSygx3tdaVyYfs+7lqwYct4SUjZv1wbLCemwNO3APcLtV0a6yAFNnlyfAdLXgL+riSBAJpWKpwwSNHacczJzUxM6mY2xFXvlfbHb++moz/vvRTkCF7O04XPhFml6NxbRD59hwakB55v1gziUnUy1yZ54PaG6DhN8FRYYBWcPJJHAxRBLBI6EmLW+FKnomI9l6p3Wk+FCs6oIMYTqMiqVGSbUZE1UFF4P6bsG9JUsdBLxUGupUiFzglCV1rqGxJStYJtUMDX9V9UMLXzFqt82v4P9/9u6ODu9oudADc7/wPc+MVovz//f5Uiy18sEM8+xubn/52dvRe9/L9GaZB/ZYPw+WOsPv/v7B3sjyvy39/ZHffn/69Rvub53xRneX7mz9+6n9M3OPUvYMtrz2grvNpedBP7vJZuamsZYQiTth5SUwHOd9Ww9bRTZ16Nb+RMsVhrPu8gBbZKsRBRkbN2dvoBD8DlWHgMPo1QPLb/AUTlclEJ6A8nx+d1eAFHT4LjYLk4pz510rLH2cm71i6A+mR6Bmf0k+Cdl+Sdbt9UOtyKAd6EoU/tnJrbX2vE5IC/hsHxIkrvz2U1uT0/OWmB53AnyclZCXu2BvYsjFMJ+n0H8PdoGIPGcFCxkxdBkiTD4+8I4yoj7XNjM5uFZopQR9fwRlt0Y6xJuFZ0UaY85qECFi6A3rhVvbVjC22DAncXNJ2HLgs6nJ2eX2jyCRTgEhEUBHDkz4RJxI5nic7mhRCXmu2g4mnXDMv50YfjthlwcLVau24iW4EsGgCWiyrpLioQwCZ9SsFJXe0o8u91o2SkcB/LgM2c5Lr5M+usM7mYJLz5DQzXJJ/ovTEAz76MA5LGS6qg4MM5ob9cBAk7oj4M5uyIzEIKHKNmDgJ7QVGcOS+YFUB9ZMf2AhvYoFCR3kcMEBcBFoN4VIditLKBFFSM5/Isqv1C5sQ4iSzQybCoIoJj/ODGTmgkArgduW39aEFHfuD7ezJjEz9yXRLQLLfRgg8LD5wiUEyRkjG823fS+8isko1Ll5m/oCtZsAFkzwLLq+vTC5zTP5Y0vtdVoZgVDpiEHUTZH5mnRtURoWQ4v1Q99qINeMM0sbCkkMWZ1/dFwLJbxwHZSJXAYKktdWN+YzZa7ht1XL5i6fnP6Qcd1w3DJHXrhtM7OOdHqS33EdgyxpYmVm44wrjbCILXAitbkVb16rZUPTapSLFUrVJPrpnN/VT1A5eVhhNnHnoOFR5Fu3h7BrResN9HEyr++ROvwN9HFqmUA6D2re35bH/ZLZgv9+W0KVWMPqVGzLQIBUkjSmFvyYLkwE2uzA2kmHlPyVBkMBeXPGEcAhK51QTKGphBSJNoogUVXhkVdaWKnu30dEU0Rok7l6fCnBVq0NRLKIG0tthL5GXqOWxfWNEIWK9R/m9pnHpTBKG4HTmzkyQLY5crCbs9qADp76kTLhYwDHUNRXWSZD4pw30wjNga65vdJRWbJKOCV3B3M6xoeitwJrHDfUg3bEe+H2bUfet7wNeTs0ST8cn+Hl59mRUd7uDMoleUuROU3Zp+uayOAFTqjYfjrijeA2wDmqwL6VmVdElGayUi9VhPadY82WyDyWbNk5VulOSVrio9tqTVhcNtutnKjHaBdOiWNY0u8Zd7mAYWdsS9IUmP7BpLNZn8mlOoPezVlXY8DKyURs2UBoUQGnEVyzrzcFWrY3cVXdbPSo985RwOySyEOcXhcjYn8dIHPwl+e+oFLl77Dvm1bxjcL8JlQhLKt/24J684lGk2wd4T6EgxyULTiu1oTDPb9yccec3j5O0WtltlhELpNhEbazX6gcGQW3DR72my9NOL8JSdOxrRmiq+llGccMl2eKM8FMN25pPKHDHhAU8zU1g3Jia5JV4AS5HtxYneQLVB3HDQMk5j9Z/IGNVOv73UkM/56ZILg52day1InXQD3ygQ6MQUgL3DebJ1blPbT+jgBpo/Fec+yQwqeKUzeBPAK+1HfLnULKtpspalXWu/yxG9aeme4LmrXGjFUVwB0a6bVueVHdmuq9aNW/jKjrkTMGT2S5T+51V16wG6USNLgmJOFGAwtlrxalCbE6G2lDsIGZNEvcTNFJhP0xZqeXaHuPpkgOgljt6+PT67ABVAnSurf3p/eqYNGnmlFZkkLRosEfSJ3hcOx3bdFocDqNIwWC5uaKxjyIJhIOAZf/5IxgfWC5IsI2Rdq2nlOQrf420+C3oghZXgS2VYy2rEBgZhMds2S5OvxXG6owLOISaOpWLI8nr2OQPwpK26rD6TC9KJpabUn8ERrmOAkz+0Bbqagl149E1jegN7CB09uyl21iUtrJaIanRNPKBVBO3zEBWOJnYb278l4J7ki/QHOGwvWb6MdqjhQqORxy2OLvUWgA1UbWQWZOkNU+DQ9M5LdXz45eLibHL6N3FGAsX+he0MyDRbRrMYKNwGAqfezFsgg8ULvWPuIomog0cg8tfji230womVu+rc73I3rRvNjpo74HZXbXEARJqD8uhaShcT5HUk0IlAoiwFBLMYTLEjxwyyXNPr+JLMS2F7B5uGFUjjyCniRSV8iVnSDd4+YfkW5cYVTspBtGSpGIM8FUNbhIGXhvGQX2olIkJZy6CQ04iqOSGtGURsyRY/hkFIexIRT5+6Cd17sowwVJOnC7WP+nd+TZXo6n2VFYVR0WQY1cQR9In5oPg8nIex92+wA9vXCNeYVxqqgSbEJGir54Zh2snUo74LIsJnn85AAq+rKVcYOb21A4e65D0TpFbJpvphW/SU86OY8kxsn+exPgzKp0JwrGroBdOQzD2XhVpYAJh1HcK2W5NizayS9Z/BljpSMWW2lw6BGUOuadDPHNws05SZx0OONg2GggVc+80SgbNM0hBYycw3lsctFfVpkyn7V2dUtjzXtGSj6jK3PIftcYBPl9+yd9gl4+moqqxv2LhgIphB+U+u4RjJeXN6eoGBP80D7zakd9wKoYLx2OiA+Qg59wYo+gTYj8Gfs8sDhtckkU/thBLkhAWrjCnrVRfkBdnnjDdv7OATI/tcYlWd9pKRG0+AI8YZ3MBYDROoKpSxLlFMNtFO5orJqDwvtJOl5lGF0rXWVLHwsZVARl49RqerBj+yDTBmazGy/YmdprEH+i8ijk/FWVKV7xr4FpVfBfELTnYLhI/7e3s7exgeSu957Crz3HR+eDCK7pSrMLE7e3YSgQyfBrN0DkPv7slmjbmzewoNm5gzV1NuzmgBqmDFzlAOxEiN12bT8tzFUk5wXjz7IPckCbi/IyVMJJOTR5SgrjmW1Exo0e3aVNVbieo0wT9tFhgIXDELJTi24VTUvh3nU+nUZVKFQnwsFSJbpRDZ8yvEx9UKkT1NIbIGhchWMDD7TIX4uFohatHSDafSqBDr5vMEhWCTuqB3+ZRwVeGRdqJGYFo4zoIzZtVzt/FbhHJaTtGbUSsCwYRHgsnJmUyycq5uizSbdX/eQngZSuqQ8i2t3rj8tl1VVvb7XZZ8hqfTas9H7LIyK5eSz7Iur8L4RVblJ62I/EuCcxrnm0OJas1U7qQv1cbP9INCfXMjK2+AW0btZmIy7ObO7Azvl53Qlwjit9hqUkALgQz02pSVrpk6DrjJVlh8KPHyKdYiTvnvwlknk3mSFolsWp5spDXledSyC5tUpyEawnNP1u0v1dyaVmNbE0WRsxo77eY7Ditva8e1be0L1clIw4NLnvrpUydPKgBlktGXIvR3pHZv1HhaqKWzZXYc8Gy9dXGN5yCYE1Da0Z+YFV1eqqG0NWhGxROGWmpw2uvr69oQqzwu9/X5RiHPNJNMNN8mFE3g0yRhV9OtFEijabbsa69noFLK6GshtoRQaRYK2kq61K8+g3VeL8+tbMyXq1aZTe5t88AR8OZe6DTxEmKTmM6Wvh0Teoeayv4dAU9MfUnOUxv0HEadk60/bOG9vMfuu0nC1j2+W1fto4kgcT21Vf2YNA79IbN37fUPsK+jfrWRVz6HPb3+PoE1C9G9bqAi0V5vmXzBK1NeMcdonUBZ6mpb1qqSAFuksLY4v2qmbBMft7g98L9bTzGK4mBSZlq2WkS+bepiwPm2qeu+BB5BJ+TvOhMn9iLcjujlvRJ5uBrcgmbGdAoyn194C3rKPPjeaDR6qbT9RH0br1p3ypbiMvc7XbNYMJ8pomZYuAfU84t5A8CLGzYMP04AapLRm4SxbBIvA9RrTs13lv2bfac/kGXsHxJtG6/xgKpwmR5WqDTZ19GH+C3snDqfDnFfjh+9Xg0sNwxoOUsEY7jd0FkuQLGtMKKBzrLIt5GLjMKiMYu9lPJOcrXjhwnVsYoNMYWDUoWRmRe4YYa3hBecYr19sqbCVo4V/6zmFKAPmtjEBbEhp5pY1X0eSErTJL4Ka+S7PDASk8CfiZvARLnKsTFFnWVP8bsFNPiXrNLC/xtwS9+if9I1dkUiWjBZHKwk9P2TIA0/eDRj8v6OfV+lX4nkBfNq8CDGORS/Jnl7/v7nNPxEoQqMYUFT+xLv+F8V9deFVYibYs0gj4CqjbVXA41dG18NkARxh8lu/zgvYJRva/dIhgUM1xzfc/BuQRUB5huxa994oWuVk8iFdoEf4GWeDwdpsP/7cBmTGTi4DEweAEIi3bWo5xTNMAA5LJpWMg8zOKTNcInTr7ZqQ/ArO/yuzLIqSK62pEnKwmWzLC7hDBOYi58Kihz38vpYKAhTlApnpKuo52APR4fhESb7W8puV/gKjpURaBXWgll9dU5Vbvia2CVzQ+UZ19fKv3jIWZZfR5U8e6h38iKEv7V9XdOakBYbORWskYBih7GaBJTadzr/fJTj5CkKI201gWtJMzaYQDNYAePa4G+CnN2YBdVAWg11O+2NpH0WTdy/csQ/bBf7hDWpCj+D2oFjNRCKVHMcBr/3B8d96Utf+tKXvvSlL33pS1/60pe+9KUvfelLX/rSl770pS996Utf+tKXvvSlL33pS1/60pdnKf8FmdygXAB4AAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo H4sIAAAAAAAAA+1X/2/TOBTfz/0rLMNpiWjT7mslWJGOadzQDTaxiV8GqrzEbaxz7WA7KwPt/vZ7tpM2SdtxSMAJXZ60xbHfl4/fx34vnc/n/a0fLAOQ4XDoniDNpxvv7A33h8PB/sHewdZgZ7C/u7eFDn40MCu5NkQhtKWkNA/pfW39F5U58J/I2O7uh52Db+d/dzDcb/n/GVLlfyYTwvX3Pwb/kv+D/f2d4d6B5X9v72C35f9nyBr+TUpntOdeIp59hxiW4MPDw038H+4Om/wf7uwMttDgO8T+qvzP+e/1MkWNIkJzYmjyFCUSCWlQnBIxpcikTKMJ47TT6fXQmYwJZ5+JYVJ0ptQY+slE9l8iZ4SJYHtOb3LWi6Wi22Gnw606iqUwVJhxSnlGFRohRT/mTNEAg3ZUX8VhYTSjWpMp3WCUs/r6wixnGy2aqtMZMXHaRbkwAN2AgTaKiWlULhSvxfpiN7lSFq+7JGBUxx8pShKbrgD3c6364Kg3hYzkImUJjZwR7mLOBF0AcZNjDdmEcBpcfrnvTKRCf3XRLWKiABrUAncRDn6bPwlH7j8OgbVO3c/1Xx/AVQE+uA07VCS1gIJADm20zhfAM00N7qIrfOZG912YFIvJN8tJQznkhbjpKz9GL+D0JBDTatzXYsSSy1yVUW54Tp3hCztw7qaKUuHm/nAjNymVPXpu9twP3XSWq4z76Qs/dNOKJm7uLTzdxEwKGadKzrzu6+VrBV9MVDJmQJ4ey8we5xLkLdPspgjzrhg7t0BgUmA99UPnrsMmSEw/RbfEkv8xp9qMZ9SkMkGjEcIX55dX2GZDFIFBz4ayJqAewSUaZxJsiJrqILTerMY1JrFFhT84L5e/vzupeVlSWCXZGS6X8IdwDRsbDPwimCA4ep6qlVStmC6XbCzAXsH196hxsq/x1enJ6xPYEkSoIVqjenx+dv7Wq1bir1F8dXz+5hIUXXI2BRxVgK0olaFGNVAramWgUQVQkSF74buIKjWe6SkoMBnJjIoHawDCc+xSZo09ejt6OlfMQPVwyEcYRdHGLMISfoYc+vWK5ca8osO/XrHcmlf88+Tk4uxivaZfK1VhAw5zzKWmcHjrRTnKcp2+9lMBPnb9RCOdxzHMTXLO75AmtzSJbDKKafywkytXdIvWNGecoxuKihuL5pBDdCdz5OD4zjVnIpFzF4GJiQT3ULPogzFeEthSgoxEsKSZNj4JCNrkhEIFBphPkUtOQTj4hpG0ncXW2Opfx17zTNkLs/2+sx0+Q2g5s2hJUQxdw9BTaB1UBVCxiAAkMyj2gHsCX2S0eIQhqjoAl0cJu4X9Eq1H2H2w9W5kcofyLAGH+LmLWRxSnjV7Is9sD8oioDcjJoXjaj8GtWBZRo3u+0UmYp4nYGHIje7NFtC8dR0MdK1ZicaOe6lU7DM0SMIx8kVxhG21w8iXtwJ085OzBL45VwVbOmgyKbPFUhiu4GOUJ7BbcH/E6RQYet7gxHY1x/Yl5dRXYAQaFTdH/cKymtvUzLhv3HZ0/ci9P0E7rgU3oL8SWW68e+D6BYGjelWWhErt7lbbdHdTEQi/OeAp9HLX7tGxr/iLsHH5Xuvdq6GLsvLtoY+hbqJXrltA0Erv6K5px6txiypVJdXGbpLcr7Lct8fQDeCi2KeOFcvs0uMAfvXk9iSH7qPtLpjkwjGOghB9eW9Lc/A4wI8qnITQ5Tms2pZcfgg53aVekUSv6dto+GytQqZkFuCEaQLFy37CGJVTq3tfVS/i+pK3HqItdD8NmS2fG/yumPma5e3u3dP+O+ovOGhevubxeQk/uaAiho0r6Az/699NrbTSSiuttNJKK6200korrbTSSiuttPIryD+ECZKOACgAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\&nbsp;</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change the Gateway card title to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
  -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
  -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
  -e '$ a end' \
  -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
  -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
  -e '/^local mode_active = "default"/d' \
  -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
  -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
  -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
  -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
  -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Add IPv6 address to Internet card if assigned
for f in $(ls /www/cards/snippets/003_internet_* | grep -E '(dhcp|pppoe|static)')
do
  prefix="$(echo $f | grep -o -E '(dhcp|ppp|static)')"
  if [ $prefix = "ppp" ]
  then
    table=content_rpc
  else
    table=cs
  fi
  sed \
    -e '/network.interface.@wan.ipaddr/a \    ip6addr = "rpc.network.interface.@wan6.ip6addr",' \
    -e "/${table}\[\"ipaddr\"\])/a \          format(T' <nobr><strong>%s</strong></nobr>', ${table}[\"ip6addr\"])," \
    -i $f
done

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a end' \
  -e '/getExactContent/a if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix is "' \
  -e '/getExactContent/a end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text),' \
  -e 's/and netmask/<br>Subnet Mask/' \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong>%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 100@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server 
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"],switchDHCP)' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/string.upper/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /usr/tch-gui-unhide.theme
chown nobody:nogroup /usr/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2020.11.16\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
