#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 17.2 - Release 2021.09.01
RELEASE='2021.09.01@13:57'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
tmpTITLE="$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)"
echo $tmpTITLE | grep -q ngx.print
if [ $? -eq 1 ]; then
  TITLE="$tmpTITLE"
else
  TITLE=""
fi
unset tmpTITLE

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

grep -q '@media screen and (min-width:1200px) and (max-width:1499px){' /www/docroot/css/responsive.css
if [ $? -eq 0 ]; then
  ACROSS=5
else
  ACROSS=4
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

if [ -z "$INSTALLED_RELEASE" ]; then
  CHART_CARDS='i'
elif [ -e /www/cards/000_Charts.lp ]; then
  CHART_CARDS='s'
elif [ -e /www/cards/000_CPU.lp ]; then
  CHART_CARDS='i'
else
  CHART_CARDS='n'
fi

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n

if [ -z "$INSTALLED_RELEASE" -a -f .defaults.tch-gui-unhide ]; then
  . ./.defaults.tch-gui-unhide
fi

if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_cron=0
SRV_dropbear=0
SRV_firewall=0
SRV_nginx=0
SRV_power=0
SRV_system=0
SRV_transformer=0

check_pwr_setting() {
  section="$1"
  option="$2"
  text="$3"
  if [ -z "$(uci -q get power.$section.$option)" ]; then
    pwrctl show | grep "$text" | grep -q DISABLED
    value=$?
    [ "$DEBUG" = "V" ] && echo "001@$(date +%H:%M:%S): - power.$section.$option=$value"
    uci set power.$section.$option="$value"
    SRV_power=$(( $SRV_power + 1 ))
  fi
}

apply_service_changes() {
  echo 001@$(date +%H:%M:%S): Applying service changes if required...
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop >/dev/null 2>&1
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start >/dev/null 2>&1
  fi
  [ $SRV_cron -gt 0 ] && /etc/init.d/cron restart
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
  [ $SRV_firewall -gt 0 ] && /etc/init.d/firewall reload 2> /dev/null

  echo 001@$(date +%H:%M:%S): Applying power settings...
  if [ -z "$(uci -q get power.cpu)" ];then
    uci set power.cpu='cpu'
  fi

  if [ -z "$(uci -q get power.cpu.cpuspeed)" ]; then
    case "$(pwrctl show | grep "CPU Speed Divisor" | tr -s " " | cut -d" " -f4)" in
      1) uci set power.cpu.cpuspeed="1";;
      2) uci set power.cpu.cpuspeed="2";;
      4) uci set power.cpu.cpuspeed="4";;
      5) uci set power.cpu.cpuspeed="8";;
      *) uci set power.cpu.cpuspeed="256";;
    esac
    SRV_power=$(( $SRV_power + 1 ))
  fi
  check_pwr_setting "cpu" "wait" "CPU Wait"
  check_pwr_setting "ethernet" "ethapd" "Auto Power"
  check_pwr_setting "ethernet" "eee" "Energy Efficient Ethernet"
  check_pwr_setting "ethernet" "autogreeen" "AutoGreeen"
  check_pwr_setting "ethernet" "dgm" "Deep Green Mode"
  [ $SRV_power -gt 0 ] && uci commit power
}

DEBUG=""
RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :a:c:d:f:h:i:l:p:rt:uv:yC:TVW-: option
do
 case "${option}" in
   -) case "${OPTARG}" in 
        debug)  DEBUG="V";; 
        *)      usage;; 
      esac;;
   a) if [ "${OPTARG}" -eq 4 -o "${OPTARG}" -eq 5 ]; then ACROSS=$OPTARG; else echo "ERROR: Cards across must be either 4 or 5"; exit 2; fi;;
   c) case "$(echo ${OPTARG} | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        m) COLOR=monochrome;;
        M) COLOR=MONOCHROME;;
        *) echo "ERROR: Unknown color option - $OPTARG"; exit 2;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n'; exit 2;; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n'; exit 2;; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   C) case "${OPTARG}" in
        n|s|i) CHART_CARDS="$OPTARG";; 
        *) echo "ERROR: Unknown chart card option - $OPTARG"; exit 2;;
      esac;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   ?) echo "Optional parameters:"
      echo " Control Options:"
      echo " -d y|n           : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                     (Default is current setting)"
      echo " -f y|n           : Enable (y) or Disable (n) firmware upgrade in the web GUI"
      echo "                     (Default is current setting)"
      echo " -p y|n           : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
      echo "                     (Default is current setting i.e (n) by default)"
      echo " -v y|n           : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
      echo "                     (Default is current setting or (y) for first time installs)"
      echo " Theme Options:"
      echo " -a 4|5           : Set the number of cards across on screen width greater than 1200px"
      echo "                     (Default is current setting, or 4 for first time installs)"
      echo " -c b|o|g|p|r|m|M : Set the theme highlight colour"
      echo "                     b=blue o=orange g=green p=purple r=red m=monochrome M=monochrome (with monochrome charts)"
      echo "                     (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                     (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -i y|n           : Show (y) or hide (n) the card icons"
      echo "                      (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n           : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                      (Default is current setting, or (n) if no theme has been applied)"
      echo " -t l|n|t|m       : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                      (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -C n|s|i         : Keep or remove chart cards"
      echo "                     n=No Chart Cards will be available"
      echo "                     s=Only the Summary Chart Card will be available"
      echo "                     i=Only the Individual Chart Cards will be available (default)"
      echo " -T               : Apply theme ONLY - bypass all other processing"
      echo " Update Options:"
      echo " -u               : Check for and download any changes to this script (may be newer than latest release version)"
      echo "                      When specifying the -u option, it must be the ONLY parameter specifed."
      if [ $WRAPPER = y ]; then
      echo " -U               : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                      After download, tch-gui-unhide will be automatically executed."
      fi
      echo " Miscellaneous Options:"
      echo " -r               : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo "                     When specifying the -r option, it must be the ONLY parameter specifed."
      echo " -y               : Bypass confirmation prompt (answers 'y')"
      echo " -V               : Show the release number of this script, the current installed release, and the latest available release on GitHub"
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  # File deployed to incorect location by releases prior to 2021.02.06
  if [ -f /usr/share/transformer/mappings/iperf.map ]; then
    rm /usr/share/transformer/mappings/iperf.map
  fi
  # Need to remove existing version or it doesn't get replaced?? 
  if [ -f /usr/sbin/traffichistory.lua ]; then
    if [ "$1" = "V" ]; then
      echo 010@$(date +%H:%M:%S): Removing file /usr/sbin/traffichistory.lua
    fi
    rm /usr/sbin/traffichistory.lua
  fi
  grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
  if [ $? -eq 0 ]; then
    sed -e '/traffichistory.lua/d' -i /etc/crontabs/root
    SRV_cron=$(( $SRV_cron + 1 ))
  fi
  # Add individual files to be restored here
  for t in /etc/init.d/power /usr/lib/lua/web/post_helper.lua
  do
    s=/rom$t
    if [ -f $s ]; then
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        echo 010@$(date +%H:%M:%S): Restoring file $t
        cp -f -p "$s" "$t"
      fi
    fi
  done
  # Add directories to be restored here
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      t=$(echo "$s" | cut -c5-)
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for f in /etc/tch-gui-unhide.ignored_release /etc/tch-gui-unhide.theme
  do
    if [ -f "$f" ]
    then
      echo 019@$(date +%H:%M:%S): Removing $f
      rm "$f"
    fi
  done
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      echo 019@$(date +%H:%M:%S): Removing empty directory $d
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ -n "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ -n "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  sed -e '/lua_shared_dict *TGU_/d' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
FW_BASE=$(uci get version.@version[0].marketing_version)
if [ "$FW_BASE" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $FW_BASE firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
echo "030@$(date +%H:%M:%S):  - Preserve the password files and SSH configuration to prevent root loss on RTFD"
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - Pretty up the GUI screens a bit"
echo "030@$(date +%H:%M:%S):  - Apply the $THEME theme with $COLOR highlights and $ICONS card icons"
echo "030@$(date +%H:%M:%S):  - Allow $ACROSS cards across the page on wide screens"
case "$CHART_CARDS" in 
  n)  echo "030@$(date +%H:%M:%S):  - All chart cards will be removed";;
  s)  echo "030@$(date +%H:%M:%S):  - Only the Summary Chart Card will be available";;
  i)  echo "030@$(date +%H:%M:%S):  - The Individual Chart Cards will be available";;
esac
if [ -f /www/docroot/landingpage.lp -a $KEEPLP = n ]; then
echo "030@$(date +%H:%M:%S):  - Theme and de-brand the Telstra Landing Page"
fi
if [ -n "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - Set the browser tabs titles to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
echo "030@$(date +%H:%M:%S): New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
echo "030@$(date +%H:%M:%S): New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

grep -q -E "lua_shared_dict *TGU_CPU" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for CPU calculations
  sed -e '/^http/a\    lua_shared_dict TGU_CPU 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

grep -q -E "lua_shared_dict *TGU_MbPS" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for throughput calculations
  sed -e '/^http/a\    lua_shared_dict TGU_MbPS 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

grep -q -E "lua_shared_dict *TGU_Theme" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for theme
  sed -e '/^http/a\    lua_shared_dict TGU_Theme 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

echo 040@$(date +%H:%M:%S): Preserving password files and SSH configuration to prevent root loss on RTFD
for f in /etc/passwd /etc/shadow /etc/config/dropbear /etc/dropbear/* /etc/rc.d/*dropbear
do
  grep -q -E "^$f$" /etc/rtfd_persistent_filelist.conf
  if [ $? -eq 1 ]
  then
    echo "$f">>/etc/rtfd_persistent_filelist.conf
  fi
done

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  MODALRULE=""
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]; then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  if [ -n "$MODAL" ]; then
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    if [ -n "$MODALRULE" -a -n "$(uci -q get web.$MODALRULE.roles | grep -v -E 'admin|guest')" ]; then
      echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
      HIDDEN=1
      uci add_list web.$MODALRULE.roles='admin'
      SRV_nginx=$(( $SRV_nginx + 1 ))
    fi
  elif [ "$CARDRULE" = "card_CPU" ]; then
    MODALRULE='gatewaymodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_gateway.hide)
  elif [ "$CARDRULE" = "card_RAM" ]; then
    MODALRULE='gatewaymodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_gateway.hide)
  elif [ "$CARDRULE" = "card_WANDown" ]; then
    MODALRULE='broadbandmodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_broadband.hide)
  elif [ "$CARDRULE" = "card_WANUp" ]; then
    MODALRULE='broadbandmodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_broadband.hide)
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]; then
    HIDDEN=0
  fi
  [ "$DEBUG" = "V" ] && echo "050@$(date +%H:%M:%S): - Card Rule $CARDRULE: card=$(basename $CARDFILE) hide=$HIDDEN modal=$MODALRULE"
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  if [ -z "$MODALRULE" ]; then
    uci -q delete web.${CARDRULE}.modal
  else
    uci set web.${CARDRULE}.modal="$MODALRULE"
  fi
  SRV_nginx=$(( $SRV_nginx + 1 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo BLD@$(date +%H:%M:%S): Deploying modified GUI code
echo 'QlpoOTFBWSZTWbjqL5YBt3x/////VWP///////////////8UXKyav6DUSxhWsaVJnDdYY3k+PeXj
7MD2opSh50fZg4vTodFsOu9vvjFSu7zzrrwB7O63XXb7zd5qqvrQo3u6rrqJ3TX2Yi8++97bAtZt
nQV6ttdFQPYyqgCiV7WO71dfWh5fY1x9QLOW7VvfZ3zfH3Z9PV33c6vPo64Hab7c4CJdlvvdzwfB
ABpoBOelU1qr7PesHsx9nX2eNfLDQvKlDzfe9C73fW9vQCjeDCiEXlumW77jw9jWr63fccdZCtIo
AAPr0KD4A+9weKvfZ9mNB65c2p2zefb759YCFbu5IHO688+rnzW7XbnFvLvAUvd9z7vvvofPr47a
vvunMDa268d9u77tlrtu8+p627vKd2GRX23vZayzt3jsvcdLp67GbvDm9zrwxCnbRfdul9tW2U43
z3vuvU6fPLs6mdWajcA5ffbXe+N957318B0GqB01kaAp0+Puh3oAdfeeuB06aUe2DlEKvWJ0xQFK
+9gDoAADnu8d9qA98vPvveuXnxT6PoAXvtZ61AL594KlAKCVL0ZbABtYAovPobqu7PHvnz4ju9w8
apOdy2XvvfX3fX3PcvQxfWjN3333Z74+99w9V7fHhMD7uAdr7uzAUusCgd2DR619B8lxtlgFbb7O
7V3d0nTUT0ZQiDoMheq9cOmPbuc3dVrSCASaGgAUAUYywbzvaHTwHpTq0O8vees0koAfXp9t9e9g
Bvde30CuXr7Y88qu53T5WuO+fdvXr3vuvdHdr7dbvffOd8+8b3r3newQex7bqEjQGC6xOwAydAdn
c2VkgVtgoCgKVdhl99g++4967k869RIKSVdvgnbJAN251fdvru2x3z4r7a+75beD3u406BuNs+vc
33wGO9uVdN7a3b3vdvVs3m9HHjFAte5u7JrPvrevfLc5bQtBFgldaO233z3XXugNpQO2tC9uin3n
l9X0N3uFPN5h9XmnoJct77uvbj48nb3N3d0q0dHSqy298LXevo9OS2yivvd0Z7HQqRbdu3BlCrO7
1ZbxPI27n3O9jw03vG777AVV1WlNGNgZKolSgQkIAKJ33vPL4PtriQVXZ96+LgO+9rvp9XXqPQA0
kAB48NW3YBvfPfF74AB6qqEgVVFFKl9hWC+j17vW93u+h8PAA9edfBly+9PO9vM7i1LW97qvdC7v
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
vbyR8qojugqkD+u6Iof/+LuSKcKEhcdRfLA=' | base64 -d | bzcat | tar -xf - -C /

# Run any extra feature scripts
for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
do
  echo -n 060@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
  . ./$s
done

echo 066@$(date +%H:%M:%S): Fix QoS card for 17.2 FW
sed \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/cards/008_qos.lp

echo 066@$(date +%H:%M:%S): Fix QoS classify modal for 17.2 FW
sed \
  -e 's/uci_classify_path\.\."@."/uci_classify_path/' \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/docroot/modals/qos-classify-modal.lp

echo 066@$(date +%H:%M:%S): Remove QoS Upload Shapers tab \(Not supported on 17.2 FW\)
if [ -f /www/docroot/modals/qos-swshaper-modal.lp ]; then
  rm /www/docroot/modals/qos-swshaper-modal.lp
fi
sed \
  -e '/qos-swshaper-modal.lp/d' \
  -i /www/snippets/tabs-qos.lp

echo 070@$(date +%H:%M:%S): Creating QoS Reclassify Rules modal
sed \
  -e 's/\(classify[\.-_%]\)/re\1/g' \
  -e 's/Classify/Reclassify/' \
  /www/docroot/modals/qos-classify-modal.lp > /www/docroot/modals/qos-reclassify-modal.lp

echo 075@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  -e 's|@wwan.up")\[1\].value|@wwan.up")|' \
  -e 's|if wwan_up|if wwan_up and wwan_up[1].value|' \
  -e 's/count == 5/count < 5/' \
  -e '/ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)/,/^\s*$/d' \
  -e '/proxy.set("rpc.system.lock.free", "0")/i end' \
  -e 's/\(iface_total\[v.iface  .. "_" .. direct\]\)/(tonumber(string.untaint(\1)) or 0)/' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

# Initial invocation of transformer code will fail if history directory does not exist
if [ ! -d /root/trafficmon/history ]; then
  echo 075@$(date +%H:%M:%S): Create directory to retain traffic monitor daily history
  mkdir -p /root/trafficmon/history
fi
if [ ! -f /root/trafficmon/history/.wan_rollover ]; then
  echo 075@$(date +%H:%M:%S): Create WAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wan_rollover
fi
if [ ! -f /root/trafficmon/history/.wwan_rollover ]; then
  echo 075@$(date +%H:%M:%S): Create WWAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wwan_rollover
fi

grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
if [ $? -eq 1 ]; then
  echo 075@$(date +%H:%M:%S): Create cron job to retain traffic monitor daily history
  echo "9,19,29,39,49,59 * * * * /usr/sbin/traffichistory.lua" >> /etc/crontabs/root
  SRV_cron=$(( $SRV_cron + 1 ))
fi

echo 075@$(date +%H:%M:%S): Only lock files for 600 seconds
sed -e 's/lfs.lock_dir(datadir)/lfs.lock_dir(datadir,600)/' -i /usr/share/transformer/mappings/rpc/system.lock.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 080@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"Root access <i>should</i> be preserved when using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button. You can use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to have more control over the factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<div data-toggle=\"modal\" class=\"btn\" data-remote=\"/modals/tch-gui-unhide-update-modal.lp\" data-id=\"tch-gui-unhide-update-modal\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\"></i>&nbsp;'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</div>'" \
    -e '/isBridgedMode/i\        end' \
    -e '/local getargs/a\if getargs and getargs.ignore_update then' \
    -e '/local getargs/a\  local proxy = require("datamodel")' \
    -e '/local getargs/a\  proxy.set("rpc.gui.IgnoreCurrentRelease", getargs.ignore_update)' \
    -e '/local getargs/a\end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management, chart library, and wait indicator when opening modals
sed \
  -e '/<title>/i \    <script src="/js/tch-gui-unhide.js"></script>\\' \
  -e '/<title>/i \    <script src="/js/chart-min.js"></script>\\' \
  -e '/id="waiting"/a \    <script>$(".smallcard .header,.modal-link").click(function(){if ($(this).attr("data-remote")||$(this).find("[data-remote]").length>0){$("#waiting").fadeIn();}});</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Add improved debugging when errors cause cards to fail to load
sed \
  -e '/lp.include(v)/i\         local success,msg = xpcall(function()' \
  -e '/lp.include(v)/a\         end, function(err)' \
  -e '/lp.include(v)/a\          ngx.print("<pre>", debug.traceback(err),"</pre>")' \
  -e '/lp.include(v)/a\          ngx.log(ngx.ERR, debug.traceback(err))' \
  -e '/lp.include(v)/a\         end)' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

LTE_CARD="$(find /www/cards -type f -name '*lte.lp')"
echo 085@$(date +%H:%M:%S): Fix display bug on Mobile card, hide if no devices found and stop refresh when any modal displayed
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/var refreshInterval/a window.intervalIDs.push(refreshInterval);\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $LTE_CARD
echo 085@$(date +%H:%M:%S): Show Mobile Only Mode status
sed \
  -e 's/height: 25/height:20/' \
  -e '/\.card-label/a margin-bottom:0px;\\' \
  -e '/local light/i local proxy = require("datamodel")' \
  -e '/local light/i local primarywanmode = proxy.get("uci.wansensing.global.primarywanmode")' \
  -e "/card_bg/a ');" \
  -e '/card_bg/a if primarywanmode then' \
  -e '/card_bg/a   if primarywanmode[1].value == "MOBILE" then' \
  -e '/card_bg/a     ngx.print(ui_helper.createSimpleLight("1", T("Mobile Only Mode enabled")) );' \
  -e '/card_bg/a   else' \
  -e '/card_bg/a     ngx.print(ui_helper.createSimpleLight("0", T("Mobile Only Mode disabled")) );' \
  -e '/card_bg/a   end' \
  -e '/card_bg/a end' \
  -e "/card_bg/a ngx.print('\\\\" \
  -i $LTE_CARD

echo 085@$(date +%H:%M:%S): Show LTE Network Registration and Service status
sed \
  -e 's/\(, signal_quality\)/\1, registration_status, service_status/' \
  -e '/radio_interface_map/a\			result = utils.getContent(rpc_path .. "network.serving_system.nas_state")' \
  -e '/radio_interface_map/a\			registration_status = utils.nas_state_map[result.nas_state]' \
  -e '/radio_interface_map/a\			result = utils.getContent(rpc_path .. "network.serving_system.service_state")' \
  -e '/radio_interface_map/a\			service_status = utils.service_state_map[result.service_state]' \
  -e '/local data =/a\	registration_status = registration_status or "",' \
  -e '/local data =/a\	service_status = service_status or "",' \
  -i /www/docroot/ajax/mobiletab.lua
sed \
  -e '/"subinfos"/a\				<div style="height: 20px;" data-bind="visible: registrationStatus().length > 0">\\' \
  -e "/\"subinfos\"/a\					<label class=\"card-label\">');  ngx.print( T\"Network\"..\":\" ); ngx.print('</label>\\\\" \
  -e '/"subinfos"/a\					<div class="controls">\\' \
  -e '/"subinfos"/a\						<strong data-bind="text: registrationStatus"></strong>\\' \
  -e '/"subinfos"/a\					</div>\\' \
  -e '/"subinfos"/a\				</div>\\' \
  -e '/"subinfos"/a\				<div style="height: 20px;" data-bind="visible: serviceStatus().length > 0">\\' \
  -e "/\"subinfos\"/a\					<label class=\"card-label\">');  ngx.print( T\"Service\"..\":\" ); ngx.print('</label>\\\\" \
  -e '/"subinfos"/a\					<div class="controls">\\' \
  -e '/"subinfos"/a\						<strong data-bind="text: serviceStatus"></strong>\\' \
  -e '/"subinfos"/a\					</div>\\' \
  -e '/"subinfos"/a\				</div>\\' \
  -e '/this.deviceStatus/a\			this.registrationStatus = ko.observable("");\\' \
  -e '/this.deviceStatus/a\			this.serviceStatus = ko.observable("");\\' \
  -e '/elementCSRFtoken/a\					if(data.registration_status != undefined) {\\' \
  -e '/elementCSRFtoken/a\						self.registrationStatus(data.registration_status);\\' \
  -e '/elementCSRFtoken/a\					}\\' \
  -e '/elementCSRFtoken/a\					if(data.service_status != undefined) {\\' \
  -e '/elementCSRFtoken/a\						self.serviceStatus(data.service_status);\\' \
  -e '/elementCSRFtoken/a\					}\\' \
  -i $LTE_CARD

echo 085@$(date +%H:%M:%S): Add Device Capabilities and LTE Band Selection to Mobile Configuration screen
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/local function get_session_info_section/i \local function get_device_capabilities_section(page, html)' \
  -e '/local function get_session_info_section/i \	local section = {}' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.arfcn_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"ARFCN Selection Support" .. ":", page.device.capabilities.arfcn_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.band_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Band Selection Support" .. ":", page.device.capabilities.band_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.manual_plmn_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Manual PLMN Selection" .. ":", page.device.capabilities.manual_plmn_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.strongest_cell_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Strongest Cell Selection" .. ":", page.device.capabilities.strongest_cell_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_modes ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported Modes" .. ":", page.device.capabilities.supported_modes))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_cdma ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported CDMA Bands" .. ":", page.device.capabilities.supported_bands_cdma))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_gsm ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported GSM Bands" .. ":", page.device.capabilities.supported_bands_gsm))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_lte ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported LTE Bands" .. ":", page.device.capabilities.supported_bands_lte))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.max_data_sessions ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Max Data Sessions" .. ":", page.device.capabilities.max_data_sessions))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_reading ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Reading" .. ":", page.device.capabilities.sms_reading))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_sending ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Sending" .. ":", page.device.capabilities.sms_sending))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if utils.Len(section) > 0 then' \
  -e '/local function get_session_info_section/i \		tinsert(html, "<fieldset><legend>" .. T"Device Capabilities" .. "</legend>")' \
  -e '/local function get_session_info_section/i \		tinsert(html, section)' \
  -e '/local function get_session_info_section/i \		tinsert(html, "</fieldset>")' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \end' \
  -e '/local function get_session_info_section/i \\' \
  -e '/local function get_profile_select/i \local function validate_lte_bands(device)' \
  -e '/local function get_profile_select/i \    local choices = setmetatable({}, untaint_mt)' \
  -e '/local function get_profile_select/i \    local b' \
  -e '/local function get_profile_select/i \    for b in string.gmatch(device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/local function get_profile_select/i \      choices[string.untaint(b)] = true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \    return function(value, object, key)' \
  -e '/local function get_profile_select/i \      local uv' \
  -e '/local function get_profile_select/i \      local concatvalue = ""' \
  -e '/local function get_profile_select/i \      if not value then' \
  -e '/local function get_profile_select/i \        return nil, T"Invalid input."' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      if type(value) == "table" then' \
  -e '/local function get_profile_select/i \        uv = value' \
  -e '/local function get_profile_select/i \      else' \
  -e '/local function get_profile_select/i \        uv = { value }' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      for i,v in ipairs(uv) do' \
  -e '/local function get_profile_select/i \        if v ~= "" then' \
  -e '/local function get_profile_select/i \          if concatvalue ~= "" then' \
  -e '/local function get_profile_select/i \            concatvalue = concatvalue.." "' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \          concatvalue = concatvalue..string.untaint(v)' \
  -e '/local function get_profile_select/i \          if not choices[v] then' \
  -e '/local function get_profile_select/i \            return nil, T"Invalid value."' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \        end' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      object[key] = concatvalue' \
  -e '/local function get_profile_select/i \      return true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \end' \
  -e '/local function get_profile_select/i \\' \
  -e '/p.mapParams\["interface_enabled"\]/a \		if utils.radio_tech_map[device.leds.radio] == "LTE" then' \
  -e '/p.mapParams\["interface_enabled"\]/a \			p.mapParams["lte_bands"] = device.uci_path .. "lte_bands"' \
  -e '/p.mapParams\["interface_enabled"\]/a \			p.mapValid["lte_bands"] = validate_lte_bands(device)' \
  -e '/p.mapParams\["interface_enabled"\]/a \		end' \
  -e '/"Access Technology"/a \	 			if utils.radio_tech_map[page.device.leds.radio] == "LTE" then' \
  -e '/"Access Technology"/a \	 				local b, lte_bands, lte_bands_checked = nil, {}, {}' \
  -e '/"Access Technology"/a \	 				for b in string.gmatch(page.device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/"Access Technology"/a \	 					lte_bands[#lte_bands+1] = { string.untaint(b), b }' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				if not page.content["lte_bands"] or page.content["lte_bands"] == "" then' \
  -e '/"Access Technology"/a \	 					for k,v in ipairs(lte_bands) do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[k] = string.untaint(v[1])' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				else' \
  -e '/"Access Technology"/a \	 					for b in string.gmatch(page.content["lte_bands"], "%d+") do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[#lte_bands_checked+1] = string.untaint(b)' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				tinsert(html, ui_helper.createCheckboxGroup(T"LTE Bands", "lte_bands", lte_bands, lte_bands_checked, {checkbox = { class="inline" }}, nil))' \
  -e '/"Access Technology"/a \	 			end' \
  -e '/^\s*get_device_info_section/a get_device_capabilities_section(page, html)' \
  -i /www/docroot/modals/lte-modal.lp

echo 085@$(date +%H:%M:%S): Add new Mobile tabs
sed \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-autofailover.lp", T"Auto-Failover"},' \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-operators.lp", T"Network Operators"},' \
  -i /www/snippets/tabs-mobiled.lp

echo 085@$(date +%H:%M:%S): Configure transformer for missing WanSensing settings
sed \
  -e 's/\("autofailover\)/\1", \1maxwait/' \
  -e '/timeout/ {n; :a; /timeout/! {N; ba;}; s/\("timeout"\)/\1, "fasttimeout"/;}' \
  -i /usr/share/transformer/mappings/uci/wansensing.map
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
    if [ -f "$f" ]; then
      [ "$DEBUG" = "V" ] && echo "090@$(date +%H:%M:%S):  - $f"
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
    fi
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo "090@$(date +%H:%M:%S): Change 'Gateway' to '$VARIANT'"
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp
sed -e "s/Device/$VARIANT/g" -i /www/docroot/modals/ethernet-modal.lp

echo 091@$(date +%H:%M:%S): Fixing titles
sed -e "s/Gateway/LAN/g" -i /www/cards/005_LAN.lp
sed -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," -i /www/docroot/login.lp

echo 095@$(date +%H:%M:%S): Add webserver wait functions
sed \
  -e '/function resetreboot(msg, msg_dst, action)/i \  var refreshTimeOut = 5000;\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  var refreshDelay = 3000;\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  function wait_for_webserver_running() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    $.ajax({ url: "/", timeout: refreshTimeOut })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .done(function(data) {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.open("text/html");\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.write(data);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.close();\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .fail(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_running, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    });\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  }\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  function wait_for_webserver_down() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    $.ajax({ url: target, timeout: refreshTimeOut })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .done(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_down, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .fail(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_running, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    });\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  }\\' \
  -i /www/docroot/modals/broadband-modal.lp

echo 095@$(date +%H:%M:%S): Fix static leases for FW 17.2
sed \
  -e 's/"uci\.dhcp\.host\.@\."/"uci.dhcp.host."/' \
  -e '/objectName/,/addNamedObject/d' \
  -i /www/docroot/modals/ethernet-modal.lp

echo 095@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 095@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/local content =/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 095@$(date +%H:%M:%S): Make Telstra bridged mode compatible with Ansuel network cards and modals
sed \
  -e "/uci.network.interface.@lan.ifname/i \        [\"uci.network.config.wan_mode\"] = 'bridge'," \
  -i /www/lua/bridgedmode_helper.lua

echo 095@$(date +%H:%M:%S): Check for fake WAN in bridged mode \(nqe bind errors fix\)
sed \
  -e 's/if (proxy.get("uci.network.interface.@wan.")) then/local ifname = proxy.get("uci.network.interface.@wan.ifname")\
    if ifname and ifname[1].value ~= "lo" then/' \
  -i /www/lua/bridgedmode_helper.lua

echo 095@$(date +%H:%M:%S): Allow reset to Routed Mode without RTFD
sed \
  -e '/configBridgedMode/i \function M.configRoutedMode()' \
  -e '/configBridgedMode/i \  local success = proxy.set({' \
  -e '/configBridgedMode/i \    ["uci.wansensing.global.enable"] = "1",' \
  -e '/configBridgedMode/i \    ["uci.network.interface.@lan.ifname"] = "eth0 eth1 eth2 eth3",' \
  -e '/configBridgedMode/i \    ["uci.dhcp.dhcp.@lan.ignore"] = "0",' \
  -e '/configBridgedMode/i \    ["uci.network.config.wan_mode"] = "dhcp",' \
  -e '/configBridgedMode/i \    ["uci.network.interface.@lan.gateway"] = "",' \
  -e '/configBridgedMode/i \  })' \
  -e '/configBridgedMode/i \  if success then' \
  -e '/configBridgedMode/i \    local landns = proxy.getPN("uci.network.interface.@lan.dns.", true)' \
  -e '/configBridgedMode/i \    if landns then' \
  -e '/configBridgedMode/i \      local dns' \
  -e '/configBridgedMode/i \      for _,dns in pairs(landns) do' \
  -e '/configBridgedMode/i \        proxy.del(dns.path)' \
  -e '/configBridgedMode/i \      end' \
  -e '/configBridgedMode/i \    end' \
  -e '/configBridgedMode/i \    local ifnames = {' \
  -e '/configBridgedMode/i \      ppp = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.proto"] = "pppoe",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.metric"] = "10",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.username"] = "newdsluser@bigpond.com",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.password"] = "new2dsl",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.keepalive"] = "4,20",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.iface6rd"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.graceful_restart"] = "1",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      ipoe = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.proto"] = "dhcp",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.metric"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.reqopts"] = "1 3 6 43 51 58 59",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.iface6rd"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.vendorid"] = "technicolor",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wan = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan.auto"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wan6 = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.auto"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.proto"] = "dhcpv6",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.reqopts"] = "23 17",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.reqaddress"] = "force",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.noslaaconly"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.iface_464xlat"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.forceprefix"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.soltimeout"] = "240",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wwan = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wwan.enabled"] = "0"' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      Guest1 = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.proto"] = "static",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ip6assign"] = "64",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ip6hint"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.netmask"] = "255.255.255.128",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ipaddr"] = "192.168.2.126",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ifname"] = "wl0_1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.force_link"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      Guest1_5GHz = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.proto"] = "static",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ip6assign"] = "64",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ip6hint"] = "2",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.netmask"] = "255.255.255.128",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ipaddr"] = "192.168.2.254",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ifname"] = "wl1_1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.force_link"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \    }' \
  -e '/configBridgedMode/i \    local ifname,config' \
  -e '/configBridgedMode/i \    for ifname,config in pairs(ifnames) do' \
  -e '/configBridgedMode/i \      if success and not proxy.get("uci.network.interface.@" .. ifname .. ".") then' \
  -e '/configBridgedMode/i \        proxy.add("uci.network.interface.", ifname)' \
  -e '/configBridgedMode/i \      end' \
  -e '/configBridgedMode/i \      success = success and proxy.set(config)' \
  -e '/configBridgedMode/i \    end' \
  -e '/configBridgedMode/i \    success = success and proxy.apply()' \
  -e '/configBridgedMode/i \  end' \
  -e '/configBridgedMode/i \  return success' \
  -e '/configBridgedMode/i \end' \
  -i /www/lua/bridgedmode_helper.lua

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Removing obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 101@$(date +%H:%M:%S): Missing proxy in relay setup card 
sed -e '/local content_helper/a local proxy = require\("datamodel"\)' -i /www/cards/018_relaysetup.lp

echo 102@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/^  end/d' \
  -e '/convertResultToObject/a \  local htmlLeft = {}' \
  -e '/convertResultToObject/a \  local htmlRight = {}' \
  -e '/convertResultToObject/a \  local attributes = {' \
  -e '/convertResultToObject/a \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/convertResultToObject/a \  }' \
  -e '/convertResultToObject/a \  for _, v in ipairs(helper_uci_content) do' \
  -e '/convertResultToObject/a \      if v.intf ~= "loopback" then' \
  -e '/convertResultToObject/a \          local state = v.enable' \
  -e '/convertResultToObject/a \          local text' \
  -e '/convertResultToObject/a \          if state ~= "0" then' \
  -e '/convertResultToObject/a \              text =" enabled<br>"' \
  -e '/convertResultToObject/a \              state = "1"' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              text = " disabled<br>"' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \          if #htmlRight >= #htmlLeft then' \
  -e '/convertResultToObject/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \      end' \
  -e '/convertResultToObject/a \  end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 102@$(date +%H:%M:%S): Fix NAT ALG modal errors and include in Firewall tabs if card hidden
sed \
  -e '/^local ui_helper/i \local proxy = require("datamodel")' \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -e '/^local UI_helper/i \local proxy = require("datamodel")' \
  -e "/modal-body/a \  ');" \
  -e '/modal-body/a \  local card_hidden = proxy.get("uci.web.card.@card_natalghelper.hide")' \
  -e '/modal-body/a \  if card_hidden and card_hidden[1] and card_hidden[1].value == "1" then' \
  -e '/modal-body/a \    local lp = require("web.lp")' \
  -e '/modal-body/a \    lp.setpath("/www/snippets/")' \
  -e '/modal-body/a \    lp.include("tabs-firewall.lp")' \
  -e '/modal-body/a \  end' \
  -e "/modal-body/a \  ngx.print('\\\\" \
  -e "/createTable/i \        ngx.print('<legend>');  ngx.print( T'NAT Helpers (ALG\\\\'s)' ); ngx.print('</legend>');" \
  -e "s/\"NAT Helpers (ALG's)\"/\"Firewall\"/" \
  -e 's/Dest Port/Destination Port/' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 104@$(date +%H:%M:%S): Fix incorrect error detection in DDNS update when IPv6 address contains 401 or 500 
sed \
  -e 's/\(".\*401"\|".\*500"\)/\1|grep -v Address/' \
  -i /usr/share/transformer/mappings/rpc/ddns.map

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ -n "$ip" ]
    then 
      sed -e "/127.0.0.1/a\    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ -n "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i\    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Allow custom DNS entries
sed \
  -e 's/"addnhosts", "bogusnxdomain"/"addnhosts", "address", "bogusnxdomain"/' \
  -i /usr/share/transformer/mappings/uci/dhcp.map
  SRV_transformer=$(( $SRV_transformer + 1 ))

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/,/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  [ "$DEBUG" = "V" ] && echo "110@$(date +%H:%M:%S): - Fixing $f"
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 110@$(date +%H:%M:%S): Enable various cards that the default user was not allowed to see
for f in $(grep -l -r "and not session:isdefaultuser" /www/cards)
do
  [ "$DEBUG" = "V" ] && echo "110@$(date +%H:%M:%S): - Fixing $f"
  sed -e 's/ and not session:isdefaultuser()//' -i $f
done

echo 115@$(date +%H:%M:%S): Fix Firewall modals for FW 17.2
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-cone-modal.lp
sed \
  -e 's/@defaults\[0\]/1/' \
  -i /www/docroot/modals/firewall-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-port-forwarding-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-rules-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-zones-modal.lp

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule.
sed \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule_v6.
sed \
  -e '/src = {/i \      name = {' \
  -e '/src = {/i \        access = "readWrite",' \
  -e '/src = {/i \        type = "string",' \
  -e '/src = {/i \      },' \
  -e '/src =  function(mapping, paramname, k/i \    name =  function(mapping, paramname, key)' \
  -e '/src =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/src =  function(mapping, paramname, k/i \    end,' \
  -e '/src =  function(mapping, paramname, p/i \    name =  function(mapping, paramname, paramvalue, key)' \
  -e '/src =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/src =  function(mapping, paramname, p/i \    end,' \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule_v6.map
SRV_transformer=$(( $SRV_transformer + 1 ))

# Version 2021.02.22 set an incorrect value for synflood_rate, so have to fix it
synflood_rate="$(uci -q get firewall.@defaults[0].synflood_rate)" 
if [ -n "$synflood_rate" ]; then
  echo $synflood_rate | grep -q -E '^[0-9]+/s$'
  if [ $? = 1 ]; then
    [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Fixing configuration firewall.@defaults[0].synflood_rate"
    synflood_rate="$(echo $synflood_rate | grep -o -E '^[0-9]+')" 
    uci set firewall.@defaults[0].synflood_rate="$synflood_rate/s"
    SRV_firewall=$(( $SRV_firewall + 1 ))
  fi
fi
# Version 2021.02.22 allowed setting of tcp_syncookies but it is not enabled in kernel, so have to remove it
if [ -n "$(uci -q get firewall.@defaults[0].tcp_syncookies)" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Deleting configuration firewall.@defaults[0].tcp_syncookies"
  uci -q delete firewall.@defaults[0].tcp_syncookies
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi

echo 115@$(date +%H:%M:%S): Fix missing values on uci.firewall.include. and uci.firewall.ipset.
sed \
  -e 's/"type", "family"/"type", "path", "family"/' \
  -e 's/\("hashsize", "timeout",\)$/\1 "match",/' \
  -i /usr/share/transformer/mappings/uci/firewall.map

echo 115@$(date +%H:%M:%S): Add transformer mapping for uci.firewall.nat.
sed -n '/-- uci.firewall.redirect/,/MultiMap/p' /usr/share/transformer/mappings/uci/firewall.map | sed -e 's/redirect/nat/g' >> /usr/share/transformer/mappings/uci/firewall.map

echo 115@$(date +%H:%M:%S): Checking firewall configuration for DNS interception
if [ "$(uci -q get firewall.dns_xcptn)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_xcptn"
  uci set firewall.dns_xcptn='ipset'
  uci set firewall.dns_xcptn.name='dns_xcptn'
  uci set firewall.dns_xcptn.family='ipv4'
  uci set firewall.dns_xcptn.storage='hash'
  uci set firewall.dns_xcptn.match='ip'
  uci set firewall.dns_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.dns_xcptn ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.dns_xcptn"
  echo -n > /etc/firewall.ipset.dns_xcptn
fi
if [ "$(uci -q get firewall.dns_int)" != "redirect" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_int"
  uci set firewall.dns_int='redirect'
  uci set firewall.dns_int.name='Intercept-DNS'
  uci set firewall.dns_int.family='ipv4'
  uci set firewall.dns_int.src='lan'
  uci set firewall.dns_int.src_dport='53'
  uci set firewall.dns_int.proto='tcp udp'
  uci set firewall.dns_int.dest='wan'
  uci set firewall.dns_int.target='DNAT'
  uci set firewall.dns_int.ipset='!dns_xcptn src'
  uci set firewall.dns_int.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dns_masq)" != "nat" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_masq"
  uci set firewall.dns_masq='nat'
  uci set firewall.dns_masq.name='Masquerade-DNS'
  uci set firewall.dns_masq.family='ipv4'
  uci set firewall.dns_masq.src='lan'
  uci set firewall.dns_masq.dest_port='53'
  uci set firewall.dns_masq.proto='tcp udp'
  uci set firewall.dns_masq.target='MASQUERADE'
  uci set firewall.dns_masq.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dot_fwd_xcptn)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dot_fwd_xcptn"
  uci set firewall.dot_fwd_xcptn='rule'
  uci set firewall.dot_fwd_xcptn.name='Allow-DoT'
  uci set firewall.dot_fwd_xcptn.src='lan'
  uci set firewall.dot_fwd_xcptn.dest='wan'
  uci set firewall.dot_fwd_xcptn.dest_port='853'
  uci set firewall.dot_fwd_xcptn.proto='tcp udp'
  uci set firewall.dot_fwd_xcptn.target='ACCEPT'
  uci set firewall.dot_fwd_xcptn.family='ipv4'
  uci set firewall.dot_fwd_xcptn.ipset='dns_xcptn src'
  uci set firewall.dot_fwd_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dot_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dot_fwd"
  uci set firewall.dot_fwd='rule'
  uci set firewall.dot_fwd.name='Deny-DoT'
  uci set firewall.dot_fwd.src='lan'
  uci set firewall.dot_fwd.dest='wan'
  uci set firewall.dot_fwd.dest_port='853'
  uci set firewall.dot_fwd.proto='tcp udp'
  uci set firewall.dot_fwd.target='REJECT'
  uci set firewall.dot_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.doh ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.doh"
  echo -n > /etc/firewall.ipset.doh
fi
if [ "$(uci -q get firewall.doh)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh"
  uci set firewall.doh='ipset'
  uci set firewall.doh.name='doh'
  uci set firewall.doh.family='ipv4'
  uci set firewall.doh.storage='hash'
  uci set firewall.doh.match='ip'
  uci set firewall.doh.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.doh6 ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.doh6"
  echo -n > /etc/firewall.ipset.doh6
fi
if [ "$(uci -q get firewall.doh6)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh"
  uci set firewall.doh6='ipset'
  uci set firewall.doh6.name='doh6'
  uci set firewall.doh6.family='ipv6'
  uci set firewall.doh6.storage='hash'
  uci set firewall.doh6.match='ip'
  uci set firewall.doh6.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.ipsets_restore)" != "include" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.ipsets_restore"
  uci set firewall.ipsets_restore='include'
  uci set firewall.ipsets_restore.type='script'
  uci set firewall.ipsets_restore.path='/usr/sbin/ipsets-restore'
  uci set firewall.ipsets_restore.reload='0'
  uci set firewall.ipsets_restore.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /usr/sbin/ipsets-restore ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating script /usr/sbin/ipsets-restore"
  cat<<"END-RESTORE" > /usr/sbin/ipsets-restore
#!/bin/sh
for set in $(ipset -n list)
do
  if [ -f /etc/firewall.ipset.$set ]
  then
    ipset flush $set
    ipset -f /etc/firewall.ipset.$set restore
  fi
done
END-RESTORE
  chmod +x /usr/sbin/ipsets-restore
fi
if [ "$(uci -q get firewall.doh_fwd_xcptn)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh_fwd_xcptn"
  uci set firewall.doh_fwd_xcptn='rule'
  uci set firewall.doh_fwd_xcptn.name='Allow-DoH'
  uci set firewall.doh_fwd_xcptn.src='lan'
  uci set firewall.doh_fwd_xcptn.dest='wan'
  uci set firewall.doh_fwd_xcptn.dest_port='443'
  uci set firewall.doh_fwd_xcptn.proto='tcp udp'
  uci set firewall.doh_fwd_xcptn.family='ipv4'
  uci set firewall.doh_fwd_xcptn.ipset='dns_xcptn src'
  uci set firewall.doh_fwd_xcptn.target='ACCEPT'
  uci set firewall.doh_fwd_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.doh_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh_fwd"
  uci set firewall.doh_fwd='rule'
  uci set firewall.doh_fwd.name='Deny-DoH'
  uci set firewall.doh_fwd.src='lan'
  uci set firewall.doh_fwd.dest='wan'
  uci set firewall.doh_fwd.dest_port='443'
  uci set firewall.doh_fwd.proto='tcp udp'
  uci set firewall.doh_fwd.family='ipv4'
  uci set firewall.doh_fwd.ipset='doh dest'
  uci set firewall.doh_fwd.target='REJECT'
  uci set firewall.doh_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.doh6_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh6_fwd"
  uci set firewall.doh6_fwd='rule'
  uci set firewall.doh6_fwd.name='Deny-v6-DoH'
  uci set firewall.doh6_fwd.src='lan'
  uci set firewall.doh6_fwd.dest='wan'
  uci set firewall.doh6_fwd.dest_port='443'
  uci set firewall.doh6_fwd.proto='tcp udp'
  uci set firewall.doh6_fwd.family='ipv6'
  uci set firewall.doh6_fwd.ipset='doh6 dest'
  uci set firewall.doh6_fwd.target='REJECT'
  uci set firewall.doh6_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /usr/sbin/doh-ipsets-maintain ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating script /usr/sbin/doh-ipsets-maintain"
  cat<<"END-MAINTAIN" > /usr/sbin/doh-ipsets-maintain
#!/bin/sh

if [ "$(uci -q get firewall.doh)" = "ipset" ]
then
  if [ -f /tmp/doh-ipv4.txt ]
  then
    rm /tmp/doh-ipv4.txt
  fi
  curl -s -k -L https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-ipv4.txt > /tmp/doh-ipv4.txt
  if [ -f /tmp/doh-ipv4.txt ]
  then
    sed -e 's/\([^ ]*\) .*/add doh \1/' /tmp/doh-ipv4.txt > /etc/firewall.ipset.doh
    rm /tmp/doh-ipv4.txt
    ipset flush doh
    ipset -f /etc/firewall.ipset.doh restore
  fi
fi

if [ "$(uci -q get firewall.doh6)" = "ipset" ]
then
  if [ -f /tmp/doh-ipv6.txt ]
  then
    rm /tmp/doh-ipv6.txt
  fi
  curl -s -k -L https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-ipv6.txt > /tmp/doh-ipv6.txt
  if [ -f /tmp/doh-ipv6.txt ]
  then
    sed -e 's/\([^ ]*\) .*/add doh6 \1/' /tmp/doh-ipv6.txt > /etc/firewall.ipset.doh6
    rm /tmp/doh-ipv6.txt
    ipset flush doh6
    ipset -f /etc/firewall.ipset.doh6 restore
  fi
fi
END-MAINTAIN
  chmod +x /usr/sbin/doh-ipsets-maintain
fi
if [ $(grep doh-ipsets-maintain /etc/crontabs/root | wc -l) -eq 0 ]; then
  mm=$(awk 'BEGIN{srand();print int(rand()*59);}')
  hh=$(awk 'BEGIN{srand();print int(rand()*2)+3;}')
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Adding /usr/sbin/doh-ipsets-maintain cron job for Sunday $hh:$mm"
  echo "#$mm $hh * * 6 /usr/sbin/doh-ipsets-maintain" >> /etc/crontabs/root
fi

[ $SRV_firewall -gt 0 ] && uci commit firewall
echo 115@$(date +%H:%M:%S): Fix IP Route modals for FW 17.2
sed \
  -e 's/\.@\././' \
  -e '/objectName/,/addNamedObject/d' \
  -i /www/docroot/modals/iproutes-modal.lp

echo 120@$(date +%H:%M:%S): Fix default Telephony tab
# Default telephony tab is DECT!!! 
sed \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    if mmpbx_state == "1" then' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-info-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    else' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-global-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    end' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 120@$(date +%H:%M:%S): Remove extra FXS device from Telephony Codecs tab
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dialplan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp

echo 120@$(date +%H:%M:%S): Handle the Telephony card switch
sed \
  -e '/^local format/a \if ngx.var.request_method == "POST" then' \
  -e '/^local format/a \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/^local format/a \  if mmpbx_enable then' \
  -e '/^local format/a \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/^local format/a \    proxy.apply()' \
  -e '/^local format/a \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/^local format/a \  end' \
  -e '/^local format/a \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 120@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 120@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 120@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 120@$(date +%H:%M:%S): Add missing insert option on dial plan entries
sed \
  -e 's/registerMultiMap/registerNamedMultiMap/' \
  -e 's/modify", "remove/modify", "insert", "remove/' \
  -i /usr/share/transformer/mappings/uci/mmpbx.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -e 's| cellspacing="10%" cellpadding="10%" ||' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp

echo 135@$(date +%H:%M:%S): Fix duplicate ids
sed -e 's/ id="relaysetupcard_relayip"//g' -i /www/cards/018_relaysetup.lp

echo 135@$(date +%H:%M:%S): Add TCP Dump to Diagnostics
sed -e 's/    {"logviewer-modal.lp", T"Log Viewer"},/    {"logviewer-modal.lp", T"Log Viewer"},\n    {"diagnostics-tcpdump-modal.lp", T"TCP Dump"},/' -i /www/snippets/tabs-diagnostics.lp

echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e "s|Output Power|Adjust Output Power<span class='icon-question-sign' title='Increase or decrease radio output transmission power. Increasing transmission power is NOT recommended. It will cause more interference in neighboring channels, and reduce component lifetime by increasing heat generated.'></span>|" \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  [ "$DEBUG" = "V" ] && echo "150@$(date +%H:%M:%S): - Updating $f"
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
if [ -f /www/cards/*_cwmpconf.lp ]; then
  echo 150@$(date +%H:%M:%S): Removing CWMP card switch
  sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp
fi

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Add Mounted USB Devices to Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e 's/class = "span4"/style = "width:100%;"/' \
  -e '/dlna_name/d' \
  -e '/samba_name/d' \
  -e '/^local content /i\
local usb = {}\
local usbdev_data = proxy.getPN("sys.usb.device.", true)\
if usbdev_data then\
  local v\
  for _,v in ipairs(usbdev_data) do\
    local partitions = proxy.get(v.path .. "partitionOfEntries")\
    if partitions then\
      partitions = partitions[1].value\
      if partitions ~= "0" then\
        local partition = proxy.getPN(v.path .. "partition.", true)\
        usb[#usb+1] = {\
          product = proxy.get(v.path .. "product")[1].value,\
          size = proxy.get(partition[1].path .. "AvailableSpace")[1].value,\
        }\
      end\
    end\
  end\
end' \
  -e '/ngx.print(html)/i\
if #usb == 0 then\
  tinsert(html, ui_helper.createSimpleLight("0", T"No USB devices found", attributes))\
else\
  tinsert(html, ui_helper.createSimpleLight("1", format(N("%d USB Device found:","%d USB devices found:",#usb),#usb), attributes))\
  tinsert(html, T"<p class=\\"subinfos\\">")\
  local v\
  for _,v in pairs(usb) do\
    tinsert(html, format("<span class=\\"simple-desc\\"><i class=\\"icon-hdd status-icon\\"></i>&nbsp;%s [%s Free]</span>", v.product, v.size))\
  end\
  tinsert(html, T"</p>")\
end' \
  -i /www/cards/012_contentsharing.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/^            tinsert(html, "<\/fieldset>")/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -e '/DLNA name"/a\                tinsert(html, "</fieldset>")' \
  -i /www/docroot/modals/contentsharing-modal.lp


echo 155@$(date +%H:%M:%S): Enable or disable SAMBA service when file and printer sharing completely enabled or disabled
sed \
  -e '/if samba_available and type/i\
    if samba_available and type(post_data["samba_filesharing"]) == "userdata" then\
      local fs = untaint(post_data["samba_filesharing"])\
      local ps = proxy.get("uci.printersharing.config.enabled")\
      local svc_status\
      if not ps then\
        svc_status = fs\
      else\
        ps = string.untaint(ps[1].value)\
        if ps == fs then\
          svc_status = ps\
        elseif (ps == "0" and fs == "1") or (ps == "1" and fs == "0") then\
          svc_status = "1"\
        end\
      end\
      if svc_status then\
        local svc = proxy.get("uci.samba.samba.enabled")\
        if svc and svc[1].value ~= svc_status then\
          proxy.set("uci.samba.samba.enabled", svc_status)\
          proxy.apply()\
        end\
      end\
    end' \
  -i /www/docroot/modals/contentsharing-modal.lp
sed \
  -e '/proxy.apply/i\
  local ps = string.untaint(postArgs.printersharing_enabled)\
  local fs = proxy.get("uci.samba.samba.filesharing")\
  local svc_status\
  if not fs then\
    svc_status = ps\
  else\
    fs = string.untaint(fs[1].value)\
    if ps == fs then\
      svc_status = ps\
    elseif (ps == "0" and fs == "1") or (ps == "1" and fs == "0") then\
      svc_status = "1"\
    end\
  end\
  if svc_status then\
    local svc = proxy.get("uci.samba.samba.enabled")\
    if svc and svc[1].value ~= svc_status then\
      proxy.set("uci.samba.samba.enabled", svc_status)\
    end\
  end' \
  -i /www/docroot/modals/printersharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
[ -f /www/cards/*_natalghelper.lp ] && sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

echo 160@$(date +%H:%M:%S): Fix some responsive span widths
sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

echo 160@$(date +%H:%M:%S): Add theme processing
for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      [ "$DEBUG" = "V" ] && echo "160@$(date +%H:%M:%S): - Adding $LP theme style sheets to $f"
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      [ "$DEBUG" = "V" ] && echo "160@$(date +%H:%M:%S): - Adding $LP theme style sheets to $f"
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

if [ $ACROSS -eq 5 ]; then
  echo 160@$(date +%H:%M:%S): Allowing 5 cards across on wide screens
  sed \
    -e 's/\(@media screen and (min-width:1200px)\){/\1 and (max-width:1499px){/g' \
    -e '$a\
@media screen and (min-width:1500px){.row{margin-left:-30px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} [class*="span"]{float:left;min-height:1px;margin-left:30px;} .container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:1470px;} .span12{width:1470px;} .span11{width:1370px;} .span10{width:1270px;} .span9{width:1170px;} .span8{width:1070px;} .span7{width:970px;} .span6{width:870px;} .span5{width:770px;} .span4{width:670px;} .span3{width:570px;} .span2{width:470px;} .span1{width:370px;} .offset12{margin-left:1380px;} .offset11{margin-left:1280px;} .offset10{margin-left:1180px;} .offset9{margin-left:1080px;} .offset8{margin-left:980px;} .offset7{margin-left:880px;} .offset6{margin-left:780px;} .offset5{margin-left:680px;} .offset4{margin-left:580px;} .offset3{margin-left:480px;} .offset2{margin-left:380px;} .offset1{margin-left:280px;} .row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.564102564102564%;*margin-left:2.5109110747408616%;} .row-fluid [class*="span"]:first-child{margin-left:0;} .row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.564102564102564%;} .row-fluid .span12{width:100%;*width:99.94680851063829%;} .row-fluid .span11{width:91.45299145299145%;*width:91.39979996362975%;} .row-fluid .span10{width:82.90598290598291%;*width:82.8527914166212%;} .row-fluid .span9{width:74.35897435897436%;*width:74.30578286961266%;} .row-fluid .span8{width:65.81196581196582%;*width:65.75877432260411%;} .row-fluid .span7{width:57.26495726495726%;*width:57.21176577559556%;} .row-fluid .span6{width:48.717948717948715%;*width:48.664757228587014%;} .row-fluid .span5{width:40.17094017094017%;*width:40.11774868157847%;} .row-fluid .span4{width:31.623931623931625%;*width:31.570740134569924%;} .row-fluid .span3{width:23.076923076923077%;*width:23.023731587561375%;} .row-fluid .span2{width:14.52991452991453%;*width:14.476723040552828%;} .row-fluid .span1{width:5.982905982905983%;*width:5.929714493544281%;} .row-fluid .offset12{margin-left:105.12820512820512%;*margin-left:105.02182214948171%;} .row-fluid .offset12:first-child{margin-left:102.56410256410257%;*margin-left:102.45771958537915%;} .row-fluid .offset11{margin-left:96.58119658119658%;*margin-left:96.47481360247316%;} .row-fluid .offset11:first-child{margin-left:94.01709401709402%;*margin-left:93.91071103837061%;} .row-fluid .offset10{margin-left:88.03418803418803%;*margin-left:87.92780505546462%;} .row-fluid .offset10:first-child{margin-left:85.47008547008548%;*margin-left:85.36370249136206%;} .row-fluid .offset9{margin-left:79.48717948717949%;*margin-left:79.38079650845607%;} .row-fluid .offset9:first-child{margin-left:76.92307692307693%;*margin-left:76.81669394435352%;} .row-fluid .offset8{margin-left:70.94017094017094%;*margin-left:70.83378796144753%;} .row-fluid .offset8:first-child{margin-left:68.37606837606839%;*margin-left:68.26968539734497%;} .row-fluid .offset7{margin-left:62.393162393162385%;*margin-left:62.28677941443899%;} .row-fluid .offset7:first-child{margin-left:59.82905982905982%;*margin-left:59.72267685033642%;} .row-fluid .offset6{margin-left:53.84615384615384%;*margin-left:53.739770867430444%;} .row-fluid .offset6:first-child{margin-left:51.28205128205128%;*margin-left:51.175668303327875%;} .row-fluid .offset5{margin-left:45.299145299145295%;*margin-left:45.1927623204219%;} .row-fluid .offset5:first-child{margin-left:42.73504273504273%;*margin-left:42.62865975631933%;} .row-fluid .offset4{margin-left:36.75213675213675%;*margin-left:36.645753773413354%;} .row-fluid .offset4:first-child{margin-left:34.18803418803419%;*margin-left:34.081651209310785%;} .row-fluid .offset3{margin-left:28.205128205128204%;*margin-left:28.0987452264048%;} .row-fluid .offset3:first-child{margin-left:25.641025641025642%;*margin-left:25.53464266230224%;} .row-fluid .offset2{margin-left:19.65811965811966%;*margin-left:19.551736679396257%;} .row-fluid .offset2:first-child{margin-left:17.094017094017094%;*margin-left:16.98763411529369%;} .row-fluid .offset1{margin-left:11.11111111111111%;*margin-left:11.004728132387708%;} .row-fluid .offset1:first-child{margin-left:8.547008547008547%;*margin-left:8.440625568285142%;} input,textarea,.uneditable-input{margin-left:0;} .controls-row [class*="span"]+[class*="span"]{margin-left:30px;} input.span12,textarea.span12,.uneditable-input.span12{width:1156px;} input.span11,textarea.span11,.uneditable-input.span11{width:1056px;} input.span10,textarea.span10,.uneditable-input.span10{width:956px;} input.span9,textarea.span9,.uneditable-input.span9{width:856px;} input.span8,textarea.span8,.uneditable-input.span8{width:756px;} input.span7,textarea.span7,.uneditable-input.span7{width:656px;} input.span6,textarea.span6,.uneditable-input.span6{width:556px;} input.span5,textarea.span5,.uneditable-input.span5{width:456px;} input.span4,textarea.span4,.uneditable-input.span4{width:356px;} input.span3,textarea.span3,.uneditable-input.span3{width:256px;} input.span2,textarea.span2,.uneditable-input.span2{width:156px;} input.span1,textarea.span1,.uneditable-input.span1{width:56px;} .thumbnails{margin-left:-30px;} .thumbnails>li{margin-left:30px;} .row-fluid .thumbnails{margin-left:0;}}\
@media screen and (min-width:1500px){.modal{width:1470px;margin:-290px 0 0 -735px;} .tooLongTitle p{width:190px;} .smallcard:hover .tooLongTitle p{width:160px;} .simple-desc{margin-left:0px;}}\
@media screen and (min-width:1500px){.card-visibility-switch{float:left;width:20%;}}' \
    -i /www/docroot/css/responsive.css
fi

case "$CHART_CARDS" in 
  n)  echo 160@$(date +%H:%M:%S): Removing all chart cards; rm /www/cards/000_*.lp;;
  s)  echo 160@$(date +%H:%M:%S): Removing individual chart cards; rm $(ls /www/cards/000_*.lp | grep -v 000_Charts);;
  i)  echo 160@$(date +%H:%M:%S): Removing summary chart card; rm /www/cards/000_Charts.lp;;
esac

echo 165@$(date +%H:%M:%S): Deploy theme files
echo 'QlpoOTFBWSZTWQrch4cAcC9/////////////////////////////////////////////4IePviSI
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
hw==' | base64 -d | bzcat | tar -xf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

echo 166@$(date +%H:%M:%S): Fixing card backgrounds
sed \
  -e '$ a .card_bg{position:relative;z-index:1;}' \
  -e '$ a .card_bg:after{color:#EAEAEA;font-family:FontAwesome;content:attr(data-bg-text);display:block;font-size:110px;line-height:1;position:absolute;bottom:-5px;right:5px;}' \
  -i /www/docroot/css/gw.css
echo 170@$(date +%H:%M:%S): Adding management tabs
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  [ "$DEBUG" = "V" ] && echo "170@$(date +%H:%M:%S): - Updating $f"
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -f /etc/init.d/cwmpd ]
then
  echo 180@$(date +%H:%M:%S): CWMP found - Leaving in GUI and removing switch from card
  sed -e 's/switchName, content.*,/nil, nil,/' -i /www/cards/090_cwmpconf.lp
else
  echo 180@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 180@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  [ -f /www/cards/010_fon.lp ] && rm /www/cards/010_fon.lp
  [ -f /www/docroot/modals/fon-modal.lp ] && rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 180@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 180@$(date +%H:%M:%S): Checking modal visibility
for f in $(find /www/docroot/modals -type f | grep -vE \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo "180@$(date +%H:%M:%S): - Enabling $MODAL"
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Creating Rule $RULE: target=/modals/$MODAL"
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Fixing Rule $RULE: target=/modals/$MODAL Setting role to admin"
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Checking ajax visibility
for f in $(find /www/docroot/ajax -type f | grep -vE 'internet.lua|wirelesscard.lua')
do
  AJAX=$(basename $f)
  uci show web | grep -q "/ajax/$AJAX"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE="$(basename $f .lua | sed -e 's/-//g')ajax"
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/ajax/$AJAX" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Creating Rule $RULE: target=/ajax/$AJAX"
    echo "180@$(date +%H:%M:%S): - Enabling $AJAX"
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/ajax/$AJAX
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Fixing Rule $RULE: target=/ajax/$AJAX Setting role to admin"
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Checking configured web rules exist
for c in $(uci show web | grep '^web\..*\.target=' | grep -vE 'dumaos|homepage')
do 
  f=/www/docroot$(echo "$c" | cut -d"'" -f2)
  if [ ! -f "$f" ]; then
    RULE=$(echo $c | cut -d. -f2)
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Deleting rule $RULE for missing target $f"
    uci -q delete web.$RULE
    uci -q del_list web.ruleset_main.rules=$RULE
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ "$CARD" = "016_speedservice.lp" ]; then
    rm $CARDFILE
    if [ -n "$CARDRULE" ]; then
      [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Deleting rule $RULE for missing target $f"
      uci -q delete web.${CARDRULE}
    fi
    continue
  fi
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]; then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]; then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Card Rule $CARDRULE: card=$CARD hide=0"
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.hide='0'
    if [ -n "$MODAL" ]; then
      uci set web.${CARDRULE}.modal="$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)"
    fi
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
done

uci commit web

grep -q '^function M.getRandomKey' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing getRandomKey post_helper function
  sed -e '/^return M$/i\
--Generate random key for new rule\
--@return 16 digit random key.\
function M.getRandomKey()\
  local bytes\
  local key = ("%02X"):rep(16)\
  local fd = io.open("/dev/urandom", "r")\
  if fd then\
    bytes = fd:read(16)\
    fd:close()\
  end\
  return key:format(bytes:byte(1, 16))\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateStringIsIPv4' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateStringIsIPv4 post_helper function
  sed -e '/^return M$/i\
-- Validate the given IP address is a valid IPv4 address.\
-- @string value The IPv4 address.\
-- @return true given IP address is valid IPv4 address, nil+error message.\
function M.validateStringIsIPv4(ip)\
  local chunks = {ip:match("^(%d+)%.(%d+)%.(%d+)%.(%d+)$")}\
  if #chunks == 4 then\
    for _,v in pairs(chunks) do\
      if tonumber(v) > 255 then\
        return nil, "Invalid IPv4 address"\
      end\
    end\
    return true\
  end\
  return nil, "Invalid IPv4 address"\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.reservedIPValidation' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing reservedIPValidation post_helper function
  sed -e '/^return M$/i\
-- Validate the given IP address is not in the Reserved IP list.\
-- @string value The IPv4 address.\
-- @return true valid IP address not present in Reserved IP list, nil+error message.\
function M.reservedIPValidation(ip)\
  if inet.isValidIPv4(untaint(ip)) then\
    local reservedIPList = proxy.get("uci.dhcp.host.")\
    reservedIPList = content_helper.convertResultToObject("uci.dhcp.host.", reservedIPList) or {}\
    for _, v in ipairs(reservedIPList) do\
      if match(v.name, "^ReservedStatic") and v.mac == "" then\
        if ip == v.ip then\
          return nil, T"The IP is internally used for other services."\
        end\
      end\
    end\
    return true\
  end\
  return nil, T"Invalid input."\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateDMZ' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateDMZ post_helper function
  sed -e '/^return M$/i\
--- Validator that will check whether the given IP address is in Network Range.\
--- Validate the given IP address is not in the Reserved IP list.\
-- @return true or nil+error message\
function M.validateDMZ(value, object)\
  local network = {\
    gateway_ip = "uci.network.interface.@lan.ipaddr",\
    netmask = "uci.network.interface.@lan.netmask",\
  }\
  if object.DMZ_enable == "1" then\
    content_helper.getExactContent(network)\
    local isDestIP, errormsg = M.getValidateStringIsDeviceIPv4(network.gateway_ip, network.netmask)(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
    isDestIP, errormsg = M.reservedIPValidation(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
    isDestIP, errormsg = M.validateQTN(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
  end\
  return true\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateLXC' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateLXC post_helper function
  sed -e '/^return M$/i\
--- Validate the given IP/MAC is LXC''s IP/MAC\
-- @param value IP/MAC address\
-- @return true if the value is not an LXC''s IP/MAC Address\
-- @return nil+error message if the given input is LXC''s IP/MAC Address\
function M.validateLXC(value)\
  if not value then\
    return nil, "Invalid input"\
  end\
  local lxcMac = { mac = "uci.env.var.local_eth_mac_lxc" }\
  local lxcAvailable = content_helper.getExactContent(lxcMac)\
  if not lxcAvailable then\
    return true\
  end\
  if M.validateStringIsMAC(value) then\
    if lower(lxcMac.mac) == lower(value) then\
      return nil, format(T"Cannot assign, %s in use by system.", value)\
    end\
    return true\
  elseif inet.isValidIPv4(untaint(value)) then\
    local lxcIP = content_helper.getMatchedContent("sys.proc.net.arp.",{ hw_address = lower(lxcMac.mac)})\
    for _, v in ipairs(lxcIP) do\
      if v.ip_address == value then\
        return nil, format(T"Cannot assign, %s in use by system.", value)\
      end\
    end\
    return true\
  end\
  return nil, T"Invalid input."\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ -z "$FILE" ]
  then
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S):  - Removing obsolete configuration $RULE"
    uci delete $RULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
  elif [ "$CARD" != "$FILE" ]
  then
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

echo 195@$(date +%H:%M:%S): Checking configured cards exist
for c in $(uci show web | grep '^web\.card_.*\.card=')
do 
  f=/www/cards/$(echo "$c" | cut -d"'" -f2)
  if [ ! -f "$f" ]; then
    CARDRULE=$(echo $c | cut -d. -f2)
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S): - Deleting card configuration $CARDRULE for missing card $f"
    uci -q delete web.$CARDRULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
done

uci commit web

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  MKTING_VERSION=$(uci get version.@version[0].marketing_name)
  echo BLD@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.09.01 for FW Version 17.2 ($MKTING_VERSION)\]/" -i $l
  done
  echo BLD@$(date +%H:%M:%S): Auto-refreshing browser cache
  for l in $(grep -lrE "['\"][^'\"]+\.(cs|j)s['\"]" /www/cards /www/docroot /www/snippets | grep -v -E '.js$|.sh$|.json$' 2>/dev/null)
  do
    sed -e "s/\(\.css\)\(['\"]\)/\1?-2021.09.01@13:57\2/g" -e "s/\(\.js\)\(['\"]\)/\1?-2021.09.01@13:57\2/g" -i $l
  done
fi

apply_service_changes
echo 210@$(date +%H:%M:%S): Done!!!
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
