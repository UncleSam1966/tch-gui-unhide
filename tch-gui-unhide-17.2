#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 17.2 - Release 2021.09.27
RELEASE='2021.09.27@17:58'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
tmpTITLE="$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)"
echo $tmpTITLE | grep -q ngx.print
if [ $? -eq 1 ]; then
  TITLE="$tmpTITLE"
else
  TITLE=""
fi
unset tmpTITLE

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

grep -q '@media screen and (min-width:1200px) and (max-width:1499px){' /www/docroot/css/responsive.css
if [ $? -eq 0 ]; then
  ACROSS=5
else
  ACROSS=4
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

if [ -z "$INSTALLED_RELEASE" ]; then
  CHART_CARDS='i'
elif [ -e /www/cards/000_Charts.lp ]; then
  CHART_CARDS='s'
elif [ -e /www/cards/000_CPU.lp ]; then
  CHART_CARDS='i'
else
  CHART_CARDS='n'
fi

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n

if [ -z "$INSTALLED_RELEASE" -a -f .defaults.tch-gui-unhide ]; then
  . ./.defaults.tch-gui-unhide
fi

if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_cron=0
SRV_dropbear=0
SRV_firewall=0
SRV_nginx=0
SRV_power=0
SRV_system=0
SRV_transformer=0

check_pwr_setting() {
  section="$1"
  option="$2"
  text="$3"
  if [ -z "$(uci -q get power.$section.$option)" ]; then
    pwrctl show | grep "$text" | grep -q DISABLED
    value=$?
    [ "$DEBUG" = "V" ] && echo "001@$(date +%H:%M:%S): - power.$section.$option=$value"
    uci set power.$section.$option="$value"
    SRV_power=$(( $SRV_power + 1 ))
  fi
}

apply_service_changes() {
  echo 001@$(date +%H:%M:%S): Applying service changes if required...
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop >/dev/null 2>&1
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start >/dev/null 2>&1
  fi
  [ $SRV_cron -gt 0 ] && /etc/init.d/cron restart
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
  [ $SRV_firewall -gt 0 ] && /etc/init.d/firewall reload 2> /dev/null

  echo 001@$(date +%H:%M:%S): Applying power settings...
  if [ -z "$(uci -q get power.cpu)" ];then
    uci set power.cpu='cpu'
  fi

  if [ -z "$(uci -q get power.cpu.cpuspeed)" ]; then
    case "$(pwrctl show | grep "CPU Speed Divisor" | tr -s " " | cut -d" " -f4)" in
      1) uci set power.cpu.cpuspeed="1";;
      2) uci set power.cpu.cpuspeed="2";;
      4) uci set power.cpu.cpuspeed="4";;
      5) uci set power.cpu.cpuspeed="8";;
      *) uci set power.cpu.cpuspeed="256";;
    esac
    SRV_power=$(( $SRV_power + 1 ))
  fi
  check_pwr_setting "cpu" "wait" "CPU Wait"
  check_pwr_setting "ethernet" "ethapd" "Auto Power"
  check_pwr_setting "ethernet" "eee" "Energy Efficient Ethernet"
  check_pwr_setting "ethernet" "autogreeen" "AutoGreeen"
  check_pwr_setting "ethernet" "dgm" "Deep Green Mode"
  [ $SRV_power -gt 0 ] && uci commit power
}

DEBUG=""
RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

usage() {
  echo "Optional parameters:"
  echo " Control Options:"
  echo " -d y|n           : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
  echo "                     (Default is current setting)"
  echo " -f y|n           : Enable (y) or Disable (n) firmware upgrade in the web GUI"
  echo "                     (Default is current setting)"
  echo " -p y|n           : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
  echo "                     (Default is current setting i.e (n) by default)"
  echo " -v y|n           : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
  echo "                     (Default is current setting or (y) for first time installs)"
  echo " Theme Options:"
  echo " -a 4|5           : Set the number of cards across on screen width greater than 1200px"
  echo "                     (Default is current setting, or 4 for first time installs)"
  echo " -c b|o|g|p|r|m|M : Set the theme highlight colour"
  echo "                     b=blue o=orange g=green p=purple r=red m=monochrome M=monochrome (with monochrome charts)"
  echo "                     (Default is current setting, or (m) for light theme or (b) for night theme)"
  echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
  echo "                     (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
  echo " -i y|n           : Show (y) or hide (n) the card icons"
  echo "                      (Default is current setting, or (n) for light theme and (y) for night theme)"
  echo " -l y|n           : Keep the Telstra landing page (y) or de-brand the landing page (n)"
  echo "                      (Default is current setting, or (n) if no theme has been applied)"
  echo " -t l|n|t|m       : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
  echo "                      (Default is current setting, or Telstra Classic if no theme has been applied)"
  echo " -C n|s|i         : Keep or remove chart cards"
  echo "                     n=No Chart Cards will be available"
  echo "                     s=Only the Summary Chart Card will be available"
  echo "                     i=Only the Individual Chart Cards will be available (default)"
  echo " -T               : Apply theme ONLY - bypass all other processing"
  echo " Update Options:"
  echo " -u               : Check for and download any changes to this script (may be newer than latest release version)"
  echo "                      When specifying the -u option, it must be the ONLY parameter specifed."
  if [ $WRAPPER = y ]; then
  echo " -U               : Download the latest release, including utility scripts (will overwrite all existing script versions)."
  echo "                      After download, tch-gui-unhide will be automatically executed."
  fi
  echo " Miscellaneous Options:"
  echo " -r               : Restore changed GUI files to their original state (config changes are NOT restored)"
  echo "                     When specifying the -r option, it must be the ONLY parameter specifed."
  echo " -y               : Bypass confirmation prompt (answers 'y')"
  echo " -V               : Show the release number of this script, the current installed release, and the latest available release on GitHub"
  echo 
  echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
  echo "         between executions (unless you execute with the -r option, which will remove all state information)"
  echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
  echo
  exit
}

while getopts :a:c:d:f:h:i:l:p:rt:uv:yC:TVW-: option
do
 case "${option}" in
   -) case "${OPTARG}" in 
        debug)  DEBUG="V";; 
        *)      usage;; 
      esac;;
   a) if [ "${OPTARG}" -eq 4 -o "${OPTARG}" -eq 5 ]; then ACROSS=$OPTARG; else echo "ERROR: Cards across must be either 4 or 5"; exit 2; fi;;
   c) case "$(echo ${OPTARG} | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        m) COLOR=monochrome;;
        M) COLOR=MONOCHROME;;
        *) echo "ERROR: Unknown color option - $OPTARG"; exit 2;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n'; exit 2;; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n'; exit 2;; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   C) case "${OPTARG}" in
        n|s|i) CHART_CARDS="$OPTARG";; 
        *) echo "ERROR: Unknown chart card option - $OPTARG"; exit 2;;
      esac;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   ?) usage;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  # File deployed to incorect location by releases prior to 2021.02.06
  if [ -f /usr/share/transformer/mappings/iperf.map ]; then
    rm /usr/share/transformer/mappings/iperf.map
  fi
  # Need to remove existing version or it doesn't get replaced?? 
  if [ -f /usr/sbin/traffichistory.lua ]; then
    if [ "$1" = "V" ]; then
      echo 010@$(date +%H:%M:%S): Removing file /usr/sbin/traffichistory.lua
    fi
    rm /usr/sbin/traffichistory.lua
  fi
  grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
  if [ $? -eq 0 ]; then
    sed -e '/traffichistory.lua/d' -i /etc/crontabs/root
    SRV_cron=$(( $SRV_cron + 1 ))
  fi
  # Add individual files to be restored here
  for t in /etc/init.d/power /usr/lib/lua/web/post_helper.lua
  do
    s=/rom$t
    if [ -f $s ]; then
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        echo 010@$(date +%H:%M:%S): Restoring file $t
        cp -f -p "$s" "$t"
      fi
    fi
  done
  # Add directories to be restored here
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      t=$(echo "$s" | cut -c5-)
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for f in /etc/tch-gui-unhide.ignored_release /etc/tch-gui-unhide.theme
  do
    if [ -f "$f" ]
    then
      echo 019@$(date +%H:%M:%S): Removing $f
      rm "$f"
    fi
  done
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      echo 019@$(date +%H:%M:%S): Removing empty directory $d
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ -n "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ -n "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  sed -e '/lua_shared_dict *TGU_/d' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
FW_BASE=$(uci get version.@version[0].marketing_version)
if [ "$FW_BASE" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $FW_BASE firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
echo "030@$(date +%H:%M:%S):  - Preserve the password files and SSH configuration to prevent root loss on RTFD"
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - Pretty up the GUI screens a bit"
echo "030@$(date +%H:%M:%S):  - Apply the $THEME theme with $COLOR highlights and $ICONS card icons"
echo "030@$(date +%H:%M:%S):  - Allow $ACROSS cards across the page on wide screens"
case "$CHART_CARDS" in 
  n)  echo "030@$(date +%H:%M:%S):  - All chart cards will be removed";;
  s)  echo "030@$(date +%H:%M:%S):  - Only the Summary Chart Card will be available";;
  i)  echo "030@$(date +%H:%M:%S):  - The Individual Chart Cards will be available";;
esac
if [ -f /www/docroot/landingpage.lp -a $KEEPLP = n ]; then
echo "030@$(date +%H:%M:%S):  - Theme and de-brand the Telstra Landing Page"
fi
if [ -n "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - Set the browser tabs titles to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
echo "030@$(date +%H:%M:%S): New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
echo "030@$(date +%H:%M:%S): New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

grep -q -E "lua_shared_dict *TGU_CPU" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for CPU calculations
  sed -e '/^http/a\    lua_shared_dict TGU_CPU 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

grep -q -E "lua_shared_dict *TGU_MbPS" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for throughput calculations
  sed -e '/^http/a\    lua_shared_dict TGU_MbPS 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

grep -q -E "lua_shared_dict *TGU_Theme" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for theme
  sed -e '/^http/a\    lua_shared_dict TGU_Theme 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

echo 040@$(date +%H:%M:%S): Preserving password files and SSH configuration to prevent root loss on RTFD
for f in /etc/passwd /etc/shadow /etc/config/dropbear /etc/dropbear/* /etc/rc.d/*dropbear
do
  grep -q -E "^$f$" /etc/rtfd_persistent_filelist.conf
  if [ $? -eq 1 ]
  then
    echo "$f">>/etc/rtfd_persistent_filelist.conf
  fi
done

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  MODALRULE=""
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]; then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  if [ -n "$MODAL" ]; then
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    if [ -n "$MODALRULE" -a -n "$(uci -q get web.$MODALRULE.roles | grep -v -E 'admin|guest')" ]; then
      echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
      HIDDEN=1
      uci add_list web.$MODALRULE.roles='admin'
      SRV_nginx=$(( $SRV_nginx + 1 ))
    fi
  elif [ "$CARDRULE" = "card_CPU" ]; then
    MODALRULE='gatewaymodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_gateway.hide)
  elif [ "$CARDRULE" = "card_RAM" ]; then
    MODALRULE='gatewaymodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_gateway.hide)
  elif [ "$CARDRULE" = "card_WANDown" ]; then
    MODALRULE='broadbandmodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_broadband.hide)
  elif [ "$CARDRULE" = "card_WANUp" ]; then
    MODALRULE='broadbandmodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_broadband.hide)
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]; then
    HIDDEN=0
  fi
  [ "$DEBUG" = "V" ] && echo "050@$(date +%H:%M:%S): - Card Rule $CARDRULE: card=$(basename $CARDFILE) hide=$HIDDEN modal=$MODALRULE"
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  if [ -z "$MODALRULE" ]; then
    uci -q delete web.${CARDRULE}.modal
  else
    uci set web.${CARDRULE}.modal="$MODALRULE"
  fi
  SRV_nginx=$(( $SRV_nginx + 1 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo BLD@$(date +%H:%M:%S): Deploying modified GUI code
echo 'QlpoOTFBWSZTWTivrS4Bue7/////VWP///////////////8UXO2Y/6DUSxhWsaRJnDdYY30eevLz
PvcCeigovOV9MD0tTGqaDb7u3dRSvX32ep9sFcbodV3pzkqfPt1KNGB4dz09Iqqe83einsxyKevd
bdVhUD2ZpqAoLyb1kc7YfS+btd77pUG3r617WffZ3y1e9d6es+3O+i+PcBwOe40pTvs+ru88Hylb
aAqgE95SqaNen331wb7rnx3T28Ft8NsN5rUPNcHXdvN3eiig8Kq9GEWW6Z7vPHhC5obvc8EtNPBQ
AAfQAPvvoF7wPL7VtfWqAI33d7JLy9evXAcKzZJVc7r575e8+eu9rsb1bl2A6Z3vd73b2HvZmyO9
PXYaNbzq3mbtje5z76T62589Ghu7m+Y97Z7Gfd73y6fcNOduPE9eNrnfe74whSUnTK+maynvrvu+
bO3xr55k6mdVqi4Hq33da3ffM9x3AAVVAfWt9gOi7em988nd70ADw7AH0+lUoYpFV5sLphQKHewA
AAAXt7x77UoeO333zfc33xQAAPPVPrAC3kPKUoKolS9GKdaBdYAE8B93F2eLvng+1e+4eNUr3M92
7fe76au+597zqYvmxm9775PfHfduMX2+9bfXLg7h9DvXd3c4Au7mgDrQ2wFGlF7u7GBWmmZG+mp9
NbYBAlQ0DIHvvt7w0xtX3Xd1QQ1gEiigAUAUY7aC99vaH0+A9Kcth3y3dt5lJQaHqntuvuwA7et7
7wcd7tfXT5hWe7q+t27eb53Y6xe+6O7Xt3dduc95xXdM23R6x2OXUJHQGC6szs0CQKG4y6mUAtZS
ihQqlKEnoE+vd33k869RSivtgVYM2ybA293O3lvX3e2N58dfe3vnz7Xnpb2500Dcbs+t5rwGN24X
TfTcvc04u7a+9keaijW69ze5pru75m70u+57gLetR1FrZ3u49bvXh3gC0oHTaF93BXvb2rtAkPo+
+3twXdNPXtqdPfXl9uM8n2Tb3d0qF2NLW1ne+D698+x6bsu2Kp5mq9AFMSm0wmFas93qy3kb2e93
nt9d769fCu+8+vH0+lLSGlBD7AaREqAF1oqACib73np8es9ebMEX2e992dgL7bt8uvvdlPQA0AAH
eVXdd2gGe+vfD4AAPRQClKpRSoA2NR583vfe7vM+JVzp6BrzrY+5uX19nu9vm9697vVbs9Ndzh27
C69z72fS7apo1TvZ882+txPXPs3YO27lqfLS9u9ur7EqN8++T75XnvcZ99wyH3tNvO3p6ntvsvt1
Tt91b2lvr328dtax9U+Sbd23KADXt1vaO313sZ7Vn1um0z67q8Ls3vdeV9O3vpes9Xy91B6fFd4B
99nWIA7vJ8N991c73OO7csu25KBPn2cPo9s0T4defb2suPE+nvTx7xfePUYPPXvevtiu7dt3K93Z
rvu472329vrffbb5y6530++3d9719Ndnfbo9jXR2uPu+4iEA95lCzcdpWZrmu7V2m641VOdYdtxG
qBbdAA5XbaTQ13HRAhu7mrYoDkAFsUxOu5d3fd7yvFX23vva9vvsFFpeb0e9Zd273z7tw962x98L
7vVwXgVuw0Nlp9t5h33evV9cK23bokG27ra7drvtnQN7Z2VQ4JCpVCkk++7jvu7u3e6nfT3LLQcR
uaQFOdujkPu7306fbNmW29dk11RQlHObYju7CkfDrg7GzEEAoBJthUVUBL57vPZUDZrsLvTzzTrW
uidu7Gq2eutdxRnd7xs97d9dzrVFz3GKi+9r482p3SXtmEAa2j2vaWhtZ6VY6Gdi7tbmF3Q0btuX
OoMrts5zzbHuacS6dmoe1ryxV5yHY3sY263rgdaa6AAO66u2WEbS+d73gaPnvvt4gxt8udXWKwHW
4udm4btRHWVuwa67G5773e0+hQOmg6dDj73ee0yzqQWxlQGR2zcO7obld0925vdgE26+tretbs7f
XTdyr3PndGql3z6r7x9DN3gUVSgUa8vdurnYDY2skIdx2Os054XvUGPR64vd3PYUAXmu0NMXZsS1
pO97bx6nssy90et3dzkvbbcmg1Dbe09sXPp3rde9N7uvlXd72ntZ2nVUe7C4WsPaJbu5F29vu++e
FWoaBEApUqKq7uduqsGyXdvXPrzOe7H3Y1K+90uwADru1We9vW22BbK9lq693uB5pqRdGUSBSJL4
LMZ1qKd73uvVA91H19Ke2Pfd5hAq93rUetmoAG7NbO7Kc3I9j3oPGNTOgDp3YAGlAXu8971nryry
7U+1O8+oxtkdjdUtmsRtoASWdzXVBloOL7Y+jXob7nDTQbdO7MQi1be83Hd6fKjzau2933sH31m9
xi6vdyJd7q0QN0Mbt6673RzLW5dhhXZ2ZstmdrlFUkoGjp3qk53eLzOW6uHbanns7g1nrXDk6yaU
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' | base64 -d | bzcat | tar -xf - -C /

# Run any extra feature scripts
for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
do
  echo -n 060@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
  . ./$s
done

echo 066@$(date +%H:%M:%S): Fix QoS card for 17.2 FW
sed \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/cards/008_qos.lp

echo 066@$(date +%H:%M:%S): Fix QoS classify modal for 17.2 FW
sed \
  -e 's/uci_classify_path\.\."@."/uci_classify_path/' \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/docroot/modals/qos-classify-modal.lp

echo 066@$(date +%H:%M:%S): Remove QoS Upload Shapers tab \(Not supported on 17.2 FW\)
if [ -f /www/docroot/modals/qos-swshaper-modal.lp ]; then
  rm /www/docroot/modals/qos-swshaper-modal.lp
fi
sed \
  -e '/qos-swshaper-modal.lp/d' \
  -i /www/snippets/tabs-qos.lp

echo 070@$(date +%H:%M:%S): Creating QoS Reclassify Rules modal
sed \
  -e 's/\(classify[\.-_%]\)/re\1/g' \
  -e 's/Classify/Reclassify/' \
  /www/docroot/modals/qos-classify-modal.lp > /www/docroot/modals/qos-reclassify-modal.lp

echo 075@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  -e 's|@wwan.up")\[1\].value|@wwan.up")|' \
  -e 's|if wwan_up|if wwan_up and wwan_up[1].value|' \
  -e 's/count == 5/count < 5/' \
  -e '/ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)/,/^\s*$/d' \
  -e '/proxy.set("rpc.system.lock.free", "0")/i end' \
  -e 's/\(iface_total\[v.iface  .. "_" .. direct\]\)/(tonumber(string.untaint(\1)) or 0)/' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

# Initial invocation of transformer code will fail if history directory does not exist
if [ ! -d /root/trafficmon/history ]; then
  echo 075@$(date +%H:%M:%S): Create directory to retain traffic monitor daily history
  mkdir -p /root/trafficmon/history
fi
if [ ! -f /root/trafficmon/history/.wan_rollover ]; then
  echo 075@$(date +%H:%M:%S): Create WAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wan_rollover
fi
if [ ! -f /root/trafficmon/history/.wwan_rollover ]; then
  echo 075@$(date +%H:%M:%S): Create WWAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wwan_rollover
fi

grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
if [ $? -eq 1 ]; then
  echo 075@$(date +%H:%M:%S): Create cron job to retain traffic monitor daily history
  echo "9,19,29,39,49,59 * * * * /usr/sbin/traffichistory.lua" >> /etc/crontabs/root
  SRV_cron=$(( $SRV_cron + 1 ))
fi

echo 075@$(date +%H:%M:%S): Only lock files for 600 seconds
sed -e 's/lfs.lock_dir(datadir)/lfs.lock_dir(datadir,600)/' -i /usr/share/transformer/mappings/rpc/system.lock.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 080@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"Root access <i>should</i> be preserved when using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button. You can use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to have more control over the factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<div data-toggle=\"modal\" class=\"btn\" data-remote=\"/modals/tch-gui-unhide-update-modal.lp\" data-id=\"tch-gui-unhide-update-modal\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\"></i>&nbsp;'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</div>'" \
    -e '/isBridgedMode/i\        end' \
    -e '/local getargs/a\if getargs and getargs.ignore_update then' \
    -e '/local getargs/a\  local proxy = require("datamodel")' \
    -e '/local getargs/a\  proxy.set("rpc.gui.IgnoreCurrentRelease", getargs.ignore_update)' \
    -e '/local getargs/a\end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management, chart library, and wait indicator when opening modals
sed \
  -e '/<title>/i \    <script src="/js/tch-gui-unhide.js"></script>\\' \
  -e '/<title>/i \    <script src="/js/chart-min.js"></script>\\' \
  -e '/id="waiting"/a \    <script>$(".smallcard .header,.modal-link").click(function(){if ($(this).attr("data-remote")||$(this).find("[data-remote]").length>0){$("#waiting").fadeIn();}});</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Add improved debugging when errors cause cards to fail to load
sed \
  -e '/lp.include(v)/i\         local success,msg = xpcall(function()' \
  -e '/lp.include(v)/a\         end, function(err)' \
  -e '/lp.include(v)/a\          ngx.print("<pre>", debug.traceback(err),"</pre>")' \
  -e '/lp.include(v)/a\          ngx.log(ngx.ERR, debug.traceback(err))' \
  -e '/lp.include(v)/a\         end)' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

LTE_CARD="$(find /www/cards -type f -name '*lte.lp')"
echo 085@$(date +%H:%M:%S): Fix display bug on Mobile card, hide if no devices found and stop refresh when any modal displayed
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/var refreshInterval/a window.intervalIDs.push(refreshInterval);\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $LTE_CARD
echo 085@$(date +%H:%M:%S): Show Mobile Only Mode status
sed \
  -e 's/height: 25/height:20/' \
  -e '/\.card-label/a margin-bottom:0px;\\' \
  -e '/local light/i local proxy = require("datamodel")' \
  -e '/local light/i local primarywanmode = proxy.get("uci.wansensing.global.primarywanmode")' \
  -e "/card_bg/a ');" \
  -e '/card_bg/a if primarywanmode then' \
  -e '/card_bg/a   if primarywanmode[1].value == "MOBILE" then' \
  -e '/card_bg/a     ngx.print(ui_helper.createSimpleLight("1", T("Mobile Only Mode enabled")) );' \
  -e '/card_bg/a   else' \
  -e '/card_bg/a     ngx.print(ui_helper.createSimpleLight("0", T("Mobile Only Mode disabled")) );' \
  -e '/card_bg/a   end' \
  -e '/card_bg/a end' \
  -e "/card_bg/a ngx.print('\\\\" \
  -i $LTE_CARD

echo 085@$(date +%H:%M:%S): Show LTE Network Registration and Service status
sed \
  -e 's/\(, signal_quality\)/\1, registration_status, service_status/' \
  -e '/radio_interface_map/a\			result = utils.getContent(rpc_path .. "network.serving_system.nas_state")' \
  -e '/radio_interface_map/a\			registration_status = utils.nas_state_map[result.nas_state]' \
  -e '/radio_interface_map/a\			result = utils.getContent(rpc_path .. "network.serving_system.service_state")' \
  -e '/radio_interface_map/a\			service_status = utils.service_state_map[result.service_state]' \
  -e '/local data =/a\	registration_status = registration_status or "",' \
  -e '/local data =/a\	service_status = service_status or "",' \
  -i /www/docroot/ajax/mobiletab.lua
sed \
  -e '/"subinfos"/a\				<div style="height: 20px;" data-bind="visible: registrationStatus().length > 0">\\' \
  -e "/\"subinfos\"/a\					<label class=\"card-label\">');  ngx.print( T\"Network\"..\":\" ); ngx.print('</label>\\\\" \
  -e '/"subinfos"/a\					<div class="controls">\\' \
  -e '/"subinfos"/a\						<strong data-bind="text: registrationStatus"></strong>\\' \
  -e '/"subinfos"/a\					</div>\\' \
  -e '/"subinfos"/a\				</div>\\' \
  -e '/"subinfos"/a\				<div style="height: 20px;" data-bind="visible: serviceStatus().length > 0">\\' \
  -e "/\"subinfos\"/a\					<label class=\"card-label\">');  ngx.print( T\"Service\"..\":\" ); ngx.print('</label>\\\\" \
  -e '/"subinfos"/a\					<div class="controls">\\' \
  -e '/"subinfos"/a\						<strong data-bind="text: serviceStatus"></strong>\\' \
  -e '/"subinfos"/a\					</div>\\' \
  -e '/"subinfos"/a\				</div>\\' \
  -e '/this.deviceStatus/a\			this.registrationStatus = ko.observable("");\\' \
  -e '/this.deviceStatus/a\			this.serviceStatus = ko.observable("");\\' \
  -e '/elementCSRFtoken/a\					if(data.registration_status != undefined) {\\' \
  -e '/elementCSRFtoken/a\						self.registrationStatus(data.registration_status);\\' \
  -e '/elementCSRFtoken/a\					}\\' \
  -e '/elementCSRFtoken/a\					if(data.service_status != undefined) {\\' \
  -e '/elementCSRFtoken/a\						self.serviceStatus(data.service_status);\\' \
  -e '/elementCSRFtoken/a\					}\\' \
  -i $LTE_CARD

echo 085@$(date +%H:%M:%S): Add Device Capabilities and LTE Band Selection to Mobile Configuration screen
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/local function get_session_info_section/i \local function get_device_capabilities_section(page, html)' \
  -e '/local function get_session_info_section/i \	local section = {}' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.arfcn_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"ARFCN Selection Support" .. ":", page.device.capabilities.arfcn_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.band_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Band Selection Support" .. ":", page.device.capabilities.band_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.manual_plmn_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Manual PLMN Selection" .. ":", page.device.capabilities.manual_plmn_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.strongest_cell_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Strongest Cell Selection" .. ":", page.device.capabilities.strongest_cell_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_modes ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported Modes" .. ":", page.device.capabilities.supported_modes))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_cdma ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported CDMA Bands" .. ":", page.device.capabilities.supported_bands_cdma))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_gsm ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported GSM Bands" .. ":", page.device.capabilities.supported_bands_gsm))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_lte ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported LTE Bands" .. ":", page.device.capabilities.supported_bands_lte))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.max_data_sessions ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Max Data Sessions" .. ":", page.device.capabilities.max_data_sessions))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_reading ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Reading" .. ":", page.device.capabilities.sms_reading))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_sending ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Sending" .. ":", page.device.capabilities.sms_sending))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if utils.Len(section) > 0 then' \
  -e '/local function get_session_info_section/i \		tinsert(html, "<fieldset><legend>" .. T"Device Capabilities" .. "</legend>")' \
  -e '/local function get_session_info_section/i \		tinsert(html, section)' \
  -e '/local function get_session_info_section/i \		tinsert(html, "</fieldset>")' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \end' \
  -e '/local function get_session_info_section/i \\' \
  -e '/local function get_profile_select/i \local function validate_lte_bands(device)' \
  -e '/local function get_profile_select/i \    local choices = setmetatable({}, untaint_mt)' \
  -e '/local function get_profile_select/i \    local b' \
  -e '/local function get_profile_select/i \    for b in string.gmatch(device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/local function get_profile_select/i \      choices[string.untaint(b)] = true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \    return function(value, object, key)' \
  -e '/local function get_profile_select/i \      local uv' \
  -e '/local function get_profile_select/i \      local concatvalue = ""' \
  -e '/local function get_profile_select/i \      if not value then' \
  -e '/local function get_profile_select/i \        return nil, T"Invalid input."' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      if type(value) == "table" then' \
  -e '/local function get_profile_select/i \        uv = value' \
  -e '/local function get_profile_select/i \      else' \
  -e '/local function get_profile_select/i \        uv = { value }' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      for i,v in ipairs(uv) do' \
  -e '/local function get_profile_select/i \        if v ~= "" then' \
  -e '/local function get_profile_select/i \          if concatvalue ~= "" then' \
  -e '/local function get_profile_select/i \            concatvalue = concatvalue.." "' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \          concatvalue = concatvalue..string.untaint(v)' \
  -e '/local function get_profile_select/i \          if not choices[v] then' \
  -e '/local function get_profile_select/i \            return nil, T"Invalid value."' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \        end' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      object[key] = concatvalue' \
  -e '/local function get_profile_select/i \      return true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \end' \
  -e '/local function get_profile_select/i \\' \
  -e '/p.mapParams\["interface_enabled"\]/a \		if utils.radio_tech_map[device.leds.radio] == "LTE" then' \
  -e '/p.mapParams\["interface_enabled"\]/a \			p.mapParams["lte_bands"] = device.uci_path .. "lte_bands"' \
  -e '/p.mapParams\["interface_enabled"\]/a \			p.mapValid["lte_bands"] = validate_lte_bands(device)' \
  -e '/p.mapParams\["interface_enabled"\]/a \		end' \
  -e '/"Access Technology"/a \	 			if utils.radio_tech_map[page.device.leds.radio] == "LTE" then' \
  -e '/"Access Technology"/a \	 				local b, lte_bands, lte_bands_checked = nil, {}, {}' \
  -e '/"Access Technology"/a \	 				for b in string.gmatch(page.device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/"Access Technology"/a \	 					lte_bands[#lte_bands+1] = { string.untaint(b), b }' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				if not page.content["lte_bands"] or page.content["lte_bands"] == "" then' \
  -e '/"Access Technology"/a \	 					for k,v in ipairs(lte_bands) do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[k] = string.untaint(v[1])' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				else' \
  -e '/"Access Technology"/a \	 					for b in string.gmatch(page.content["lte_bands"], "%d+") do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[#lte_bands_checked+1] = string.untaint(b)' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				tinsert(html, ui_helper.createCheckboxGroup(T"LTE Bands", "lte_bands", lte_bands, lte_bands_checked, {checkbox = { class="inline" }}, nil))' \
  -e '/"Access Technology"/a \	 			end' \
  -e '/^\s*get_device_info_section/a get_device_capabilities_section(page, html)' \
  -i /www/docroot/modals/lte-modal.lp

echo 085@$(date +%H:%M:%S): Add new Mobile tabs
sed \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-autofailover.lp", T"Auto-Failover"},' \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-operators.lp", T"Network Operators"},' \
  -i /www/snippets/tabs-mobiled.lp

echo 085@$(date +%H:%M:%S): Configure transformer for missing WanSensing settings
sed \
  -e 's/\("autofailover\)/\1", \1maxwait/' \
  -e '/timeout/ {n; :a; /timeout/! {N; ba;}; s/\("timeout"\)/\1, "fasttimeout"/;}' \
  -i /usr/share/transformer/mappings/uci/wansensing.map
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
    if [ -f "$f" ]; then
      [ "$DEBUG" = "V" ] && echo "090@$(date +%H:%M:%S):  - $f"
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
    fi
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo "090@$(date +%H:%M:%S): Change 'Gateway' to '$VARIANT'"
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp
sed -e "s/Device/$VARIANT/g" -i /www/docroot/modals/ethernet-modal.lp

echo 091@$(date +%H:%M:%S): Fixing titles
sed -e "s/Gateway/LAN/g" -i /www/cards/005_LAN.lp
sed -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," -i /www/docroot/login.lp

echo 095@$(date +%H:%M:%S): Add webserver wait functions
sed \
  -e '/function resetreboot(msg, msg_dst, action)/i \  var refreshTimeOut = 5000;\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  var refreshDelay = 3000;\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  function wait_for_webserver_running() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    $.ajax({ url: "/", timeout: refreshTimeOut })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .done(function(data) {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.open("text/html");\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.write(data);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.close();\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .fail(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_running, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    });\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  }\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  function wait_for_webserver_down() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    $.ajax({ url: target, timeout: refreshTimeOut })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .done(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_down, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .fail(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_running, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    });\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  }\\' \
  -i /www/docroot/modals/broadband-modal.lp

echo 095@$(date +%H:%M:%S): Fix static leases for FW 17.2
sed \
  -e 's/"uci\.dhcp\.host\.@\."/"uci.dhcp.host."/' \
  -e '/objectName/,/addNamedObject/d' \
  -i /www/docroot/modals/ethernet-modal.lp

echo 095@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 095@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/local content =/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 095@$(date +%H:%M:%S): Make Telstra bridged mode compatible with Ansuel network cards and modals
sed \
  -e "/uci.network.interface.@lan.ifname/i \        [\"uci.network.config.wan_mode\"] = 'bridge'," \
  -i /www/lua/bridgedmode_helper.lua

echo 095@$(date +%H:%M:%S): Check for fake WAN in bridged mode \(nqe bind errors fix\)
sed \
  -e 's/if (proxy.get("uci.network.interface.@wan.")) then/local ifname = proxy.get("uci.network.interface.@wan.ifname")\
    if ifname and ifname[1].value ~= "lo" then/' \
  -i /www/lua/bridgedmode_helper.lua

echo 095@$(date +%H:%M:%S): Allow reset to Routed Mode without RTFD
sed \
  -e '/configBridgedMode/i \function M.configRoutedMode()' \
  -e '/configBridgedMode/i \  local success = proxy.set({' \
  -e '/configBridgedMode/i \    ["uci.wansensing.global.enable"] = "1",' \
  -e '/configBridgedMode/i \    ["uci.network.interface.@lan.ifname"] = "eth0 eth1 eth2 eth3",' \
  -e '/configBridgedMode/i \    ["uci.dhcp.dhcp.@lan.ignore"] = "0",' \
  -e '/configBridgedMode/i \    ["uci.network.config.wan_mode"] = "dhcp",' \
  -e '/configBridgedMode/i \    ["uci.network.interface.@lan.gateway"] = "",' \
  -e '/configBridgedMode/i \  })' \
  -e '/configBridgedMode/i \  if success then' \
  -e '/configBridgedMode/i \    local landns = proxy.getPN("uci.network.interface.@lan.dns.", true)' \
  -e '/configBridgedMode/i \    if landns then' \
  -e '/configBridgedMode/i \      local dns' \
  -e '/configBridgedMode/i \      for _,dns in pairs(landns) do' \
  -e '/configBridgedMode/i \        proxy.del(dns.path)' \
  -e '/configBridgedMode/i \      end' \
  -e '/configBridgedMode/i \    end' \
  -e '/configBridgedMode/i \    local ifnames = {' \
  -e '/configBridgedMode/i \      ppp = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.proto"] = "pppoe",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.metric"] = "10",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.username"] = "newdsluser@bigpond.com",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.password"] = "new2dsl",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.keepalive"] = "4,20",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.iface6rd"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.graceful_restart"] = "1",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      ipoe = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.proto"] = "dhcp",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.metric"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.reqopts"] = "1 3 6 43 51 58 59",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.iface6rd"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.vendorid"] = "technicolor",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wan = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan.auto"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wan6 = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.auto"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.proto"] = "dhcpv6",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.reqopts"] = "23 17",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.reqaddress"] = "force",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.noslaaconly"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.iface_464xlat"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.forceprefix"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.soltimeout"] = "240",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wwan = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wwan.enabled"] = "0"' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      Guest1 = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.proto"] = "static",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ip6assign"] = "64",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ip6hint"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.netmask"] = "255.255.255.128",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ipaddr"] = "192.168.2.126",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ifname"] = "wl0_1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.force_link"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      Guest1_5GHz = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.proto"] = "static",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ip6assign"] = "64",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ip6hint"] = "2",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.netmask"] = "255.255.255.128",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ipaddr"] = "192.168.2.254",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ifname"] = "wl1_1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.force_link"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \    }' \
  -e '/configBridgedMode/i \    local ifname,config' \
  -e '/configBridgedMode/i \    for ifname,config in pairs(ifnames) do' \
  -e '/configBridgedMode/i \      if success and not proxy.get("uci.network.interface.@" .. ifname .. ".") then' \
  -e '/configBridgedMode/i \        proxy.add("uci.network.interface.", ifname)' \
  -e '/configBridgedMode/i \      end' \
  -e '/configBridgedMode/i \      success = success and proxy.set(config)' \
  -e '/configBridgedMode/i \    end' \
  -e '/configBridgedMode/i \    success = success and proxy.apply()' \
  -e '/configBridgedMode/i \  end' \
  -e '/configBridgedMode/i \  return success' \
  -e '/configBridgedMode/i \end' \
  -i /www/lua/bridgedmode_helper.lua

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Removing obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 101@$(date +%H:%M:%S): Missing proxy in relay setup card 
sed -e '/local content_helper/a local proxy = require\("datamodel"\)' -i /www/cards/018_relaysetup.lp

echo 102@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/^  end/d' \
  -e '/convertResultToObject/a \  local htmlLeft = {}' \
  -e '/convertResultToObject/a \  local htmlRight = {}' \
  -e '/convertResultToObject/a \  local attributes = {' \
  -e '/convertResultToObject/a \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/convertResultToObject/a \  }' \
  -e '/convertResultToObject/a \  for _, v in ipairs(helper_uci_content) do' \
  -e '/convertResultToObject/a \      if v.intf ~= "loopback" then' \
  -e '/convertResultToObject/a \          local state = v.enable' \
  -e '/convertResultToObject/a \          local text' \
  -e '/convertResultToObject/a \          if state ~= "0" then' \
  -e '/convertResultToObject/a \              text =" enabled<br>"' \
  -e '/convertResultToObject/a \              state = "1"' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              text = " disabled<br>"' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \          if #htmlRight >= #htmlLeft then' \
  -e '/convertResultToObject/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \      end' \
  -e '/convertResultToObject/a \  end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 102@$(date +%H:%M:%S): Fix NAT ALG modal errors and include in Firewall tabs if card hidden
sed \
  -e '/^local ui_helper/i \local proxy = require("datamodel")' \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -e '/^local UI_helper/i \local proxy = require("datamodel")' \
  -e "/modal-body/a \  ');" \
  -e '/modal-body/a \  local card_hidden = proxy.get("uci.web.card.@card_natalghelper.hide")' \
  -e '/modal-body/a \  if card_hidden and card_hidden[1] and card_hidden[1].value == "1" then' \
  -e '/modal-body/a \    local lp = require("web.lp")' \
  -e '/modal-body/a \    lp.setpath("/www/snippets/")' \
  -e '/modal-body/a \    lp.include("tabs-firewall.lp")' \
  -e '/modal-body/a \  end' \
  -e "/modal-body/a \  ngx.print('\\\\" \
  -e "/createTable/i \        ngx.print('<legend>');  ngx.print( T'NAT Helpers (ALG\\\\'s)' ); ngx.print('</legend>');" \
  -e "s/\"NAT Helpers (ALG's)\"/\"Firewall\"/" \
  -e 's/Dest Port/Destination Port/' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 104@$(date +%H:%M:%S): Fix incorrect error detection in DDNS update when IPv6 address contains 401 or 500 
sed \
  -e '/local logFile/a\        local adrFile = "/var/log/ddns/" .. service .. ".ip"' \
  -e 's^"cat "^"sed -e \\"s/$(cat " .. adrFile ..")//\\" "^' \
  -i /usr/share/transformer/mappings/rpc/ddns.map

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ -n "$ip" ]
    then 
      sed -e "/127.0.0.1/a\    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ -n "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i\    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Allow custom DNS entries
sed \
  -e 's/"addnhosts", "bogusnxdomain"/"addnhosts", "address", "bogusnxdomain"/' \
  -i /usr/share/transformer/mappings/uci/dhcp.map
  SRV_transformer=$(( $SRV_transformer + 1 ))

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/,/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  [ "$DEBUG" = "V" ] && echo "110@$(date +%H:%M:%S): - Fixing $f"
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 110@$(date +%H:%M:%S): Enable various cards that the default user was not allowed to see
for f in $(grep -l -r "and not session:isdefaultuser" /www/cards)
do
  [ "$DEBUG" = "V" ] && echo "110@$(date +%H:%M:%S): - Fixing $f"
  sed -e 's/ and not session:isdefaultuser()//' -i $f
done

echo 115@$(date +%H:%M:%S): Fix Firewall modals for FW 17.2
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-cone-modal.lp
sed \
  -e 's/@defaults\[0\]/1/' \
  -i /www/docroot/modals/firewall-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-port-forwarding-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-rules-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-zones-modal.lp

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule.
sed \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule_v6.
sed \
  -e '/src = {/i \      name = {' \
  -e '/src = {/i \        access = "readWrite",' \
  -e '/src = {/i \        type = "string",' \
  -e '/src = {/i \      },' \
  -e '/src =  function(mapping, paramname, k/i \    name =  function(mapping, paramname, key)' \
  -e '/src =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/src =  function(mapping, paramname, k/i \    end,' \
  -e '/src =  function(mapping, paramname, p/i \    name =  function(mapping, paramname, paramvalue, key)' \
  -e '/src =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/src =  function(mapping, paramname, p/i \    end,' \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule_v6.map
SRV_transformer=$(( $SRV_transformer + 1 ))

# Version 2021.02.22 set an incorrect value for synflood_rate, so have to fix it
synflood_rate="$(uci -q get firewall.@defaults[0].synflood_rate)" 
if [ -n "$synflood_rate" ]; then
  echo $synflood_rate | grep -q -E '^[0-9]+/s$'
  if [ $? = 1 ]; then
    [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Fixing configuration firewall.@defaults[0].synflood_rate"
    synflood_rate="$(echo $synflood_rate | grep -o -E '^[0-9]+')" 
    uci set firewall.@defaults[0].synflood_rate="$synflood_rate/s"
    SRV_firewall=$(( $SRV_firewall + 1 ))
  fi
fi
# Version 2021.02.22 allowed setting of tcp_syncookies but it is not enabled in kernel, so have to remove it
if [ -n "$(uci -q get firewall.@defaults[0].tcp_syncookies)" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Deleting configuration firewall.@defaults[0].tcp_syncookies"
  uci -q delete firewall.@defaults[0].tcp_syncookies
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi

echo 115@$(date +%H:%M:%S): Fix missing values on uci.firewall.include. and uci.firewall.ipset.
sed \
  -e 's/"type", "family"/"type", "path", "family"/' \
  -e 's/\("hashsize", "timeout",\)$/\1 "match",/' \
  -i /usr/share/transformer/mappings/uci/firewall.map

echo 115@$(date +%H:%M:%S): Add transformer mapping for uci.firewall.nat.
sed -n '/-- uci.firewall.redirect/,/MultiMap/p' /usr/share/transformer/mappings/uci/firewall.map | sed -e 's/redirect/nat/g' >> /usr/share/transformer/mappings/uci/firewall.map

echo 115@$(date +%H:%M:%S): Checking firewall configuration for DNS interception
if [ "$(uci -q get firewall.dns_xcptn)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_xcptn"
  uci set firewall.dns_xcptn='ipset'
  uci set firewall.dns_xcptn.name='dns_xcptn'
  uci set firewall.dns_xcptn.family='ipv4'
  uci set firewall.dns_xcptn.storage='hash'
  uci set firewall.dns_xcptn.match='ip'
  uci set firewall.dns_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.dns_xcptn ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.dns_xcptn"
  echo -n > /etc/firewall.ipset.dns_xcptn
fi
if [ "$(uci -q get firewall.dns_int)" != "redirect" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_int"
  uci set firewall.dns_int='redirect'
  uci set firewall.dns_int.name='Intercept-DNS'
  uci set firewall.dns_int.family='ipv4'
  uci set firewall.dns_int.src='lan'
  uci set firewall.dns_int.src_dport='53'
  uci set firewall.dns_int.proto='tcp udp'
  uci set firewall.dns_int.dest='wan'
  uci set firewall.dns_int.target='DNAT'
  uci set firewall.dns_int.ipset='!dns_xcptn src'
  uci set firewall.dns_int.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dns_masq)" != "nat" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_masq"
  uci set firewall.dns_masq='nat'
  uci set firewall.dns_masq.name='Masquerade-DNS'
  uci set firewall.dns_masq.family='ipv4'
  uci set firewall.dns_masq.src='lan'
  uci set firewall.dns_masq.dest_port='53'
  uci set firewall.dns_masq.proto='tcp udp'
  uci set firewall.dns_masq.target='MASQUERADE'
  uci set firewall.dns_masq.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dot_fwd_xcptn)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dot_fwd_xcptn"
  uci set firewall.dot_fwd_xcptn='rule'
  uci set firewall.dot_fwd_xcptn.name='Allow-DoT'
  uci set firewall.dot_fwd_xcptn.src='lan'
  uci set firewall.dot_fwd_xcptn.dest='wan'
  uci set firewall.dot_fwd_xcptn.dest_port='853'
  uci set firewall.dot_fwd_xcptn.proto='tcp udp'
  uci set firewall.dot_fwd_xcptn.target='ACCEPT'
  uci set firewall.dot_fwd_xcptn.family='ipv4'
  uci set firewall.dot_fwd_xcptn.ipset='dns_xcptn src'
  uci set firewall.dot_fwd_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dot_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dot_fwd"
  uci set firewall.dot_fwd='rule'
  uci set firewall.dot_fwd.name='Deny-DoT'
  uci set firewall.dot_fwd.src='lan'
  uci set firewall.dot_fwd.dest='wan'
  uci set firewall.dot_fwd.dest_port='853'
  uci set firewall.dot_fwd.proto='tcp udp'
  uci set firewall.dot_fwd.target='REJECT'
  uci set firewall.dot_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.doh ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.doh"
  echo -n > /etc/firewall.ipset.doh
fi
if [ "$(uci -q get firewall.doh)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh"
  uci set firewall.doh='ipset'
  uci set firewall.doh.name='doh'
  uci set firewall.doh.family='ipv4'
  uci set firewall.doh.storage='hash'
  uci set firewall.doh.match='ip'
  uci set firewall.doh.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.doh6 ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.doh6"
  echo -n > /etc/firewall.ipset.doh6
fi
if [ "$(uci -q get firewall.doh6)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh"
  uci set firewall.doh6='ipset'
  uci set firewall.doh6.name='doh6'
  uci set firewall.doh6.family='ipv6'
  uci set firewall.doh6.storage='hash'
  uci set firewall.doh6.match='ip'
  uci set firewall.doh6.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.ipsets_restore)" != "include" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.ipsets_restore"
  uci set firewall.ipsets_restore='include'
  uci set firewall.ipsets_restore.type='script'
  uci set firewall.ipsets_restore.path='/usr/sbin/ipsets-restore'
  uci set firewall.ipsets_restore.reload='0'
  uci set firewall.ipsets_restore.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /usr/sbin/ipsets-restore ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating script /usr/sbin/ipsets-restore"
  cat<<"END-RESTORE" > /usr/sbin/ipsets-restore
#!/bin/sh
for set in $(ipset -n list)
do
  if [ -f /etc/firewall.ipset.$set ]
  then
    ipset flush $set
    ipset -f /etc/firewall.ipset.$set restore
  fi
done
END-RESTORE
  chmod +x /usr/sbin/ipsets-restore
fi
if [ "$(uci -q get firewall.doh_fwd_xcptn)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh_fwd_xcptn"
  uci set firewall.doh_fwd_xcptn='rule'
  uci set firewall.doh_fwd_xcptn.name='Allow-DoH'
  uci set firewall.doh_fwd_xcptn.src='lan'
  uci set firewall.doh_fwd_xcptn.dest='wan'
  uci set firewall.doh_fwd_xcptn.dest_port='443'
  uci set firewall.doh_fwd_xcptn.proto='tcp udp'
  uci set firewall.doh_fwd_xcptn.family='ipv4'
  uci set firewall.doh_fwd_xcptn.ipset='dns_xcptn src'
  uci set firewall.doh_fwd_xcptn.target='ACCEPT'
  uci set firewall.doh_fwd_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.doh_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh_fwd"
  uci set firewall.doh_fwd='rule'
  uci set firewall.doh_fwd.name='Deny-DoH'
  uci set firewall.doh_fwd.src='lan'
  uci set firewall.doh_fwd.dest='wan'
  uci set firewall.doh_fwd.dest_port='443'
  uci set firewall.doh_fwd.proto='tcp udp'
  uci set firewall.doh_fwd.family='ipv4'
  uci set firewall.doh_fwd.ipset='doh dest'
  uci set firewall.doh_fwd.target='REJECT'
  uci set firewall.doh_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.doh6_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh6_fwd"
  uci set firewall.doh6_fwd='rule'
  uci set firewall.doh6_fwd.name='Deny-v6-DoH'
  uci set firewall.doh6_fwd.src='lan'
  uci set firewall.doh6_fwd.dest='wan'
  uci set firewall.doh6_fwd.dest_port='443'
  uci set firewall.doh6_fwd.proto='tcp udp'
  uci set firewall.doh6_fwd.family='ipv6'
  uci set firewall.doh6_fwd.ipset='doh6 dest'
  uci set firewall.doh6_fwd.target='REJECT'
  uci set firewall.doh6_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /usr/sbin/doh-ipsets-maintain ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating script /usr/sbin/doh-ipsets-maintain"
  cat<<"END-MAINTAIN" > /usr/sbin/doh-ipsets-maintain
#!/bin/sh

if [ "$(uci -q get firewall.doh)" = "ipset" ]
then
  if [ -f /tmp/doh-ipv4.txt ]
  then
    rm /tmp/doh-ipv4.txt
  fi
  curl -s -k -L https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-ipv4.txt > /tmp/doh-ipv4.txt
  if [ -f /tmp/doh-ipv4.txt ]
  then
    sed -e 's/\([^ ]*\) .*/add doh \1/' /tmp/doh-ipv4.txt > /etc/firewall.ipset.doh
    rm /tmp/doh-ipv4.txt
    ipset flush doh
    ipset -f /etc/firewall.ipset.doh restore
  fi
fi

if [ "$(uci -q get firewall.doh6)" = "ipset" ]
then
  if [ -f /tmp/doh-ipv6.txt ]
  then
    rm /tmp/doh-ipv6.txt
  fi
  curl -s -k -L https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-ipv6.txt > /tmp/doh-ipv6.txt
  if [ -f /tmp/doh-ipv6.txt ]
  then
    sed -e 's/\([^ ]*\) .*/add doh6 \1/' /tmp/doh-ipv6.txt > /etc/firewall.ipset.doh6
    rm /tmp/doh-ipv6.txt
    ipset flush doh6
    ipset -f /etc/firewall.ipset.doh6 restore
  fi
fi
END-MAINTAIN
  chmod +x /usr/sbin/doh-ipsets-maintain
fi
if [ $(grep doh-ipsets-maintain /etc/crontabs/root | wc -l) -eq 0 ]; then
  mm=$(awk 'BEGIN{srand();print int(rand()*59);}')
  hh=$(awk 'BEGIN{srand();print int(rand()*2)+3;}')
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Adding /usr/sbin/doh-ipsets-maintain cron job for Sunday $hh:$mm"
  echo "#$mm $hh * * 6 /usr/sbin/doh-ipsets-maintain" >> /etc/crontabs/root
fi

[ $SRV_firewall -gt 0 ] && uci commit firewall
echo 115@$(date +%H:%M:%S): Fix IP Route modals for FW 17.2
sed \
  -e 's/\.@\././' \
  -e '/objectName/,/addNamedObject/d' \
  -i /www/docroot/modals/iproutes-modal.lp

echo 120@$(date +%H:%M:%S): Fix default Telephony tab
# Default telephony tab is DECT!!! 
sed \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    if mmpbx_state == "1" then' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-info-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    else' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-global-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    end' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 120@$(date +%H:%M:%S): Remove extra FXS device from Telephony Codecs tab
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dialplan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp

echo 120@$(date +%H:%M:%S): Handle the Telephony card switch
sed \
  -e '/^local format/a \if ngx.var.request_method == "POST" then' \
  -e '/^local format/a \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/^local format/a \  if mmpbx_enable then' \
  -e '/^local format/a \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/^local format/a \    proxy.apply()' \
  -e '/^local format/a \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/^local format/a \  end' \
  -e '/^local format/a \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 120@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 120@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 120@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 120@$(date +%H:%M:%S): Add missing insert option on dial plan entries
sed \
  -e 's/registerMultiMap/registerNamedMultiMap/' \
  -e 's/modify", "remove/modify", "insert", "remove/' \
  -i /usr/share/transformer/mappings/uci/mmpbx.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -e 's| cellspacing="10%" cellpadding="10%" ||' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp

echo 135@$(date +%H:%M:%S): Fix duplicate ids
sed -e 's/ id="relaysetupcard_relayip"//g' -i /www/cards/018_relaysetup.lp

echo 135@$(date +%H:%M:%S): Add TCP Dump to Diagnostics
sed -e 's/    {"logviewer-modal.lp", T"Log Viewer"},/    {"logviewer-modal.lp", T"Log Viewer"},\n    {"diagnostics-tcpdump-modal.lp", T"TCP Dump"},/' -i /www/snippets/tabs-diagnostics.lp

echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e "s|Output Power|Adjust Output Power<span class='icon-question-sign' title='Increase or decrease radio output transmission power. Increasing transmission power is NOT recommended. It will cause more interference in neighboring channels, and reduce component lifetime by increasing heat generated.'></span>|" \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  [ "$DEBUG" = "V" ] && echo "150@$(date +%H:%M:%S): - Updating $f"
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
if [ -f /www/cards/*_cwmpconf.lp ]; then
  echo 150@$(date +%H:%M:%S): Removing CWMP card switch
  sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp
fi

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Add Mounted USB Devices to Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e 's/class = "span4"/style = "width:100%;"/' \
  -e '/dlna_name/d' \
  -e '/samba_name/d' \
  -e '/^local content /i\
local usb = {}\
local usbdev_data = proxy.getPN("sys.usb.device.", true)\
if usbdev_data then\
  local v\
  for _,v in ipairs(usbdev_data) do\
    local partitions = proxy.get(v.path .. "partitionOfEntries")\
    if partitions then\
      partitions = partitions[1].value\
      if partitions ~= "0" then\
        local partition = proxy.getPN(v.path .. "partition.", true)\
        usb[#usb+1] = {\
          product = proxy.get(v.path .. "product")[1].value,\
          size = proxy.get(partition[1].path .. "AvailableSpace")[1].value,\
        }\
      end\
    end\
  end\
end' \
  -e '/ngx.print(html)/i\
if #usb == 0 then\
  tinsert(html, ui_helper.createSimpleLight("0", T"No USB devices found", attributes))\
else\
  tinsert(html, ui_helper.createSimpleLight("1", format(N("%d USB Device found:","%d USB devices found:",#usb),#usb), attributes))\
  tinsert(html, T"<p class=\\"subinfos\\">")\
  local v\
  for _,v in pairs(usb) do\
    tinsert(html, format("<span class=\\"simple-desc\\"><i class=\\"icon-hdd status-icon\\"></i>&nbsp;%s [%s Free]</span>", v.product, v.size))\
  end\
  tinsert(html, T"</p>")\
end' \
  -i /www/cards/012_contentsharing.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/^            tinsert(html, "<\/fieldset>")/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -e '/DLNA name"/a\                tinsert(html, "</fieldset>")' \
  -i /www/docroot/modals/contentsharing-modal.lp


echo 155@$(date +%H:%M:%S): Enable or disable SAMBA service when file and printer sharing completely enabled or disabled
sed \
  -e '/if samba_available and type/i\
    if samba_available and type(post_data["samba_filesharing"]) == "userdata" then\
      local fs = untaint(post_data["samba_filesharing"])\
      local ps = proxy.get("uci.printersharing.config.enabled")\
      local svc_status\
      if not ps then\
        svc_status = fs\
      else\
        ps = string.untaint(ps[1].value)\
        if ps == fs then\
          svc_status = ps\
        elseif (ps == "0" and fs == "1") or (ps == "1" and fs == "0") then\
          svc_status = "1"\
        end\
      end\
      if svc_status then\
        local svc = proxy.get("uci.samba.samba.enabled")\
        if svc and svc[1].value ~= svc_status then\
          proxy.set("uci.samba.samba.enabled", svc_status)\
          proxy.apply()\
        end\
      end\
    end' \
  -i /www/docroot/modals/contentsharing-modal.lp
sed \
  -e '/proxy.apply/i\
  local ps = string.untaint(postArgs.printersharing_enabled)\
  local fs = proxy.get("uci.samba.samba.filesharing")\
  local svc_status\
  if not fs then\
    svc_status = ps\
  else\
    fs = string.untaint(fs[1].value)\
    if ps == fs then\
      svc_status = ps\
    elseif (ps == "0" and fs == "1") or (ps == "1" and fs == "0") then\
      svc_status = "1"\
    end\
  end\
  if svc_status then\
    local svc = proxy.get("uci.samba.samba.enabled")\
    if svc and svc[1].value ~= svc_status then\
      proxy.set("uci.samba.samba.enabled", svc_status)\
    end\
  end' \
  -i /www/docroot/modals/printersharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
[ -f /www/cards/*_natalghelper.lp ] && sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

echo 160@$(date +%H:%M:%S): Fix some responsive span widths
sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

echo 160@$(date +%H:%M:%S): Add theme processing
for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      [ "$DEBUG" = "V" ] && echo "160@$(date +%H:%M:%S): - Adding $LP theme style sheets to $f"
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      [ "$DEBUG" = "V" ] && echo "160@$(date +%H:%M:%S): - Adding $LP theme style sheets to $f"
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

if [ $ACROSS -eq 5 ]; then
  echo 160@$(date +%H:%M:%S): Allowing 5 cards across on wide screens
  sed \
    -e 's/\(@media screen and (min-width:1200px)\){/\1 and (max-width:1499px){/g' \
    -e '$a\
@media screen and (min-width:1500px){.row{margin-left:-30px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} [class*="span"]{float:left;min-height:1px;margin-left:30px;} .container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:1470px;} .span12{width:1470px;} .span11{width:1370px;} .span10{width:1270px;} .span9{width:1170px;} .span8{width:1070px;} .span7{width:970px;} .span6{width:870px;} .span5{width:650px;} .span4{width:550px;} .span3{width:570px;} .span2{width:170px;} .span1{width:370px;} .offset12{margin-left:1380px;} .offset11{margin-left:1280px;} .offset10{margin-left:1180px;} .offset9{margin-left:1080px;} .offset8{margin-left:980px;} .offset7{margin-left:880px;} .offset6{margin-left:780px;} .offset5{margin-left:680px;} .offset4{margin-left:580px;} .offset3{margin-left:480px;} .offset2{margin-left:380px;} .offset1{margin-left:280px;} .row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.564102564102564%;*margin-left:2.5109110747408616%;} .row-fluid [class*="span"]:first-child{margin-left:0;} .row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.564102564102564%;} .row-fluid .span12{width:100%;*width:99.94680851063829%;} .row-fluid .span11{width:91.45299145299145%;*width:91.39979996362975%;} .row-fluid .span10{width:82.90598290598291%;*width:82.8527914166212%;} .row-fluid .span9{width:74.35897435897436%;*width:74.30578286961266%;} .row-fluid .span8{width:65.81196581196582%;*width:65.75877432260411%;} .row-fluid .span7{width:57.26495726495726%;*width:57.21176577559556%;} .row-fluid .span6{width:48.717948717948715%;*width:48.664757228587014%;} .row-fluid .span5{width:40.17094017094017%;*width:40.11774868157847%;} .row-fluid .span4{width:31.623931623931625%;*width:31.570740134569924%;} .row-fluid .span3{width:23.076923076923077%;*width:23.023731587561375%;} .row-fluid .span2{width:14.52991452991453%;*width:14.476723040552828%;} .row-fluid .span1{width:5.982905982905983%;*width:5.929714493544281%;} .row-fluid .offset12{margin-left:105.12820512820512%;*margin-left:105.02182214948171%;} .row-fluid .offset12:first-child{margin-left:102.56410256410257%;*margin-left:102.45771958537915%;} .row-fluid .offset11{margin-left:96.58119658119658%;*margin-left:96.47481360247316%;} .row-fluid .offset11:first-child{margin-left:94.01709401709402%;*margin-left:93.91071103837061%;} .row-fluid .offset10{margin-left:88.03418803418803%;*margin-left:87.92780505546462%;} .row-fluid .offset10:first-child{margin-left:85.47008547008548%;*margin-left:85.36370249136206%;} .row-fluid .offset9{margin-left:79.48717948717949%;*margin-left:79.38079650845607%;} .row-fluid .offset9:first-child{margin-left:76.92307692307693%;*margin-left:76.81669394435352%;} .row-fluid .offset8{margin-left:70.94017094017094%;*margin-left:70.83378796144753%;} .row-fluid .offset8:first-child{margin-left:68.37606837606839%;*margin-left:68.26968539734497%;} .row-fluid .offset7{margin-left:62.393162393162385%;*margin-left:62.28677941443899%;} .row-fluid .offset7:first-child{margin-left:59.82905982905982%;*margin-left:59.72267685033642%;} .row-fluid .offset6{margin-left:53.84615384615384%;*margin-left:53.739770867430444%;} .row-fluid .offset6:first-child{margin-left:51.28205128205128%;*margin-left:51.175668303327875%;} .row-fluid .offset5{margin-left:45.299145299145295%;*margin-left:45.1927623204219%;} .row-fluid .offset5:first-child{margin-left:42.73504273504273%;*margin-left:42.62865975631933%;} .row-fluid .offset4{margin-left:36.75213675213675%;*margin-left:36.645753773413354%;} .row-fluid .offset4:first-child{margin-left:34.18803418803419%;*margin-left:34.081651209310785%;} .row-fluid .offset3{margin-left:28.205128205128204%;*margin-left:28.0987452264048%;} .row-fluid .offset3:first-child{margin-left:25.641025641025642%;*margin-left:25.53464266230224%;} .row-fluid .offset2{margin-left:19.65811965811966%;*margin-left:19.551736679396257%;} .row-fluid .offset2:first-child{margin-left:17.094017094017094%;*margin-left:16.98763411529369%;} .row-fluid .offset1{margin-left:11.11111111111111%;*margin-left:11.004728132387708%;} .row-fluid .offset1:first-child{margin-left:8.547008547008547%;*margin-left:8.440625568285142%;} input,textarea,.uneditable-input{margin-left:0;} .controls-row [class*="span"]+[class*="span"]{margin-left:30px;} input.span12,textarea.span12,.uneditable-input.span12{width:1156px;} input.span11,textarea.span11,.uneditable-input.span11{width:1056px;} input.span10,textarea.span10,.uneditable-input.span10{width:956px;} input.span9,textarea.span9,.uneditable-input.span9{width:856px;} input.span8,textarea.span8,.uneditable-input.span8{width:756px;} input.span7,textarea.span7,.uneditable-input.span7{width:656px;} input.span6,textarea.span6,.uneditable-input.span6{width:556px;} input.span5,textarea.span5,.uneditable-input.span5{width:456px;} input.span4,textarea.span4,.uneditable-input.span4{width:356px;} input.span3,textarea.span3,.uneditable-input.span3{width:256px;} input.span2,textarea.span2,.uneditable-input.span2{width:156px;} input.span1,textarea.span1,.uneditable-input.span1{width:56px;} .thumbnails{margin-left:-30px;} .thumbnails>li{margin-left:30px;} .row-fluid .thumbnails{margin-left:0;}}\
@media screen and (min-width:1500px){.modal{width:1470px;margin:-290px 0 0 -735px;} .tooLongTitle p{width:190px;} .smallcard:hover .tooLongTitle p{width:160px;} .simple-desc{margin-left:0px;}}\
@media screen and (min-width:1500px){.card-visibility-switch{float:left;width:20%;}}' \
    -i /www/docroot/css/responsive.css
fi

case "$CHART_CARDS" in 
  n)  echo 160@$(date +%H:%M:%S): Removing all chart cards; rm /www/cards/000_*.lp;;
  s)  echo 160@$(date +%H:%M:%S): Removing individual chart cards; rm $(ls /www/cards/000_*.lp | grep -v 000_Charts);;
  i)  echo 160@$(date +%H:%M:%S): Removing summary chart card; rm /www/cards/000_Charts.lp;;
esac

echo 165@$(date +%H:%M:%S): Deploy theme files
echo 'QlpoOTFBWSZTWZoq9kAAcC9/////////////////////////////////////////////4IePvgCo
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
cEij027HP/xdyRThQkJoq9kA' | base64 -d | bzcat | tar -xf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

echo 166@$(date +%H:%M:%S): Fixing card backgrounds
sed \
  -e '$ a .card_bg{position:relative;z-index:1;}' \
  -e '$ a .card_bg:after{color:#EAEAEA;font-family:FontAwesome;content:attr(data-bg-text);display:block;font-size:110px;line-height:1;position:absolute;bottom:-5px;right:5px;}' \
  -i /www/docroot/css/gw.css
echo 170@$(date +%H:%M:%S): Adding management tabs
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  [ "$DEBUG" = "V" ] && echo "170@$(date +%H:%M:%S): - Updating $f"
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -f /etc/init.d/cwmpd ]
then
  echo 180@$(date +%H:%M:%S): CWMP found - Leaving in GUI and removing switch from card
  sed -e 's/switchName, content.*,/nil, nil,/' -i /www/cards/090_cwmpconf.lp
else
  echo 180@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 180@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  [ -f /www/cards/010_fon.lp ] && rm /www/cards/010_fon.lp
  [ -f /www/docroot/modals/fon-modal.lp ] && rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 180@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 180@$(date +%H:%M:%S): Checking modal visibility
for f in $(find /www/docroot/modals -type f | grep -vE \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo "180@$(date +%H:%M:%S): - Enabling $MODAL"
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Creating Rule $RULE: target=/modals/$MODAL"
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Fixing Rule $RULE: target=/modals/$MODAL Setting role to admin"
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Checking ajax visibility
for f in $(find /www/docroot/ajax -type f | grep -vE 'internet.lua|wirelesscard.lua')
do
  AJAX=$(basename $f)
  uci show web | grep -q "/ajax/$AJAX"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE="$(basename $f .lua | sed -e 's/-//g')ajax"
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/ajax/$AJAX" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Creating Rule $RULE: target=/ajax/$AJAX"
    echo "180@$(date +%H:%M:%S): - Enabling $AJAX"
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/ajax/$AJAX
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Fixing Rule $RULE: target=/ajax/$AJAX Setting role to admin"
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Checking configured web rules exist
for c in $(uci show web | grep '^web\..*\.target=' | grep -vE 'dumaos|homepage')
do 
  f=/www/docroot$(echo "$c" | cut -d"'" -f2)
  if [ ! -f "$f" ]; then
    RULE=$(echo $c | cut -d. -f2)
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Deleting rule $RULE for missing target $f"
    uci -q delete web.$RULE
    uci -q del_list web.ruleset_main.rules=$RULE
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ "$CARD" = "016_speedservice.lp" ]; then
    rm $CARDFILE
    if [ -n "$CARDRULE" ]; then
      [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Deleting rule $RULE for missing target $f"
      uci -q delete web.${CARDRULE}
    fi
    continue
  fi
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]; then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]; then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Card Rule $CARDRULE: card=$CARD hide=0"
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.hide='0'
    if [ -n "$MODAL" ]; then
      uci set web.${CARDRULE}.modal="$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)"
    fi
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
done

uci commit web

grep -q '^function M.getRandomKey' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing getRandomKey post_helper function
  sed -e '/^return M$/i\
--Generate random key for new rule\
--@return 16 digit random key.\
function M.getRandomKey()\
  local bytes\
  local key = ("%02X"):rep(16)\
  local fd = io.open("/dev/urandom", "r")\
  if fd then\
    bytes = fd:read(16)\
    fd:close()\
  end\
  return key:format(bytes:byte(1, 16))\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateStringIsIPv4' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateStringIsIPv4 post_helper function
  sed -e '/^return M$/i\
-- Validate the given IP address is a valid IPv4 address.\
-- @string value The IPv4 address.\
-- @return true given IP address is valid IPv4 address, nil+error message.\
function M.validateStringIsIPv4(ip)\
  local chunks = {ip:match("^(%d+)%.(%d+)%.(%d+)%.(%d+)$")}\
  if #chunks == 4 then\
    for _,v in pairs(chunks) do\
      if tonumber(v) > 255 then\
        return nil, "Invalid IPv4 address"\
      end\
    end\
    return true\
  end\
  return nil, "Invalid IPv4 address"\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.reservedIPValidation' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing reservedIPValidation post_helper function
  sed -e '/^return M$/i\
-- Validate the given IP address is not in the Reserved IP list.\
-- @string value The IPv4 address.\
-- @return true valid IP address not present in Reserved IP list, nil+error message.\
function M.reservedIPValidation(ip)\
  if inet.isValidIPv4(untaint(ip)) then\
    local reservedIPList = proxy.get("uci.dhcp.host.")\
    reservedIPList = content_helper.convertResultToObject("uci.dhcp.host.", reservedIPList) or {}\
    for _, v in ipairs(reservedIPList) do\
      if match(v.name, "^ReservedStatic") and v.mac == "" then\
        if ip == v.ip then\
          return nil, T"The IP is internally used for other services."\
        end\
      end\
    end\
    return true\
  end\
  return nil, T"Invalid input."\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateDMZ' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateDMZ post_helper function
  sed -e '/^return M$/i\
--- Validator that will check whether the given IP address is in Network Range.\
--- Validate the given IP address is not in the Reserved IP list.\
-- @return true or nil+error message\
function M.validateDMZ(value, object)\
  local network = {\
    gateway_ip = "uci.network.interface.@lan.ipaddr",\
    netmask = "uci.network.interface.@lan.netmask",\
  }\
  if object.DMZ_enable == "1" then\
    content_helper.getExactContent(network)\
    local isDestIP, errormsg = M.getValidateStringIsDeviceIPv4(network.gateway_ip, network.netmask)(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
    isDestIP, errormsg = M.reservedIPValidation(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
    isDestIP, errormsg = M.validateQTN(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
  end\
  return true\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateLXC' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateLXC post_helper function
  sed -e '/^return M$/i\
--- Validate the given IP/MAC is LXC''s IP/MAC\
-- @param value IP/MAC address\
-- @return true if the value is not an LXC''s IP/MAC Address\
-- @return nil+error message if the given input is LXC''s IP/MAC Address\
function M.validateLXC(value)\
  if not value then\
    return nil, "Invalid input"\
  end\
  local lxcMac = { mac = "uci.env.var.local_eth_mac_lxc" }\
  local lxcAvailable = content_helper.getExactContent(lxcMac)\
  if not lxcAvailable then\
    return true\
  end\
  if M.validateStringIsMAC(value) then\
    if lower(lxcMac.mac) == lower(value) then\
      return nil, format(T"Cannot assign, %s in use by system.", value)\
    end\
    return true\
  elseif inet.isValidIPv4(untaint(value)) then\
    local lxcIP = content_helper.getMatchedContent("sys.proc.net.arp.",{ hw_address = lower(lxcMac.mac)})\
    for _, v in ipairs(lxcIP) do\
      if v.ip_address == value then\
        return nil, format(T"Cannot assign, %s in use by system.", value)\
      end\
    end\
    return true\
  end\
  return nil, T"Invalid input."\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ -z "$FILE" ]
  then
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S):  - Removing obsolete configuration $RULE"
    uci delete $RULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
  elif [ "$CARD" != "$FILE" ]
  then
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

echo 195@$(date +%H:%M:%S): Checking configured cards exist
for c in $(uci show web | grep '^web\.card_.*\.card=')
do 
  f=/www/cards/$(echo "$c" | cut -d"'" -f2)
  if [ ! -f "$f" ]; then
    CARDRULE=$(echo $c | cut -d. -f2)
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S): - Deleting card configuration $CARDRULE for missing card $f"
    uci -q delete web.$CARDRULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
done

uci commit web

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  MKTING_VERSION=$(uci get version.@version[0].marketing_version)
  echo BLD@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.09.27 for FW Version 17.2 ($MKTING_VERSION)\]/" -i $l
  done
  echo BLD@$(date +%H:%M:%S): Auto-refreshing browser cache
  for l in $(grep -lrE "['\"][^'\"]+\.(cs|j)s['\"]" /www/cards /www/docroot /www/snippets | grep -v -E '.js$|.sh$|.json$' 2>/dev/null)
  do
    sed -e "s/\(\.css\)\(['\"]\)/\1?${MKTING_VERSION}_2021.09.27@17:58\2/g" -e "s/\(\.js\)\(['\"]\)/\1?${MKTING_VERSION}_2021.09.27@17:58\2/g" -i $l
  done
fi

apply_service_changes
echo 210@$(date +%H:%M:%S): Done!!!
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
