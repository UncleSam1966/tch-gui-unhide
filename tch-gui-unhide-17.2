#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 17.2 - Release 2021.09.02
RELEASE='2021.09.02@10:44'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
tmpTITLE="$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)"
echo $tmpTITLE | grep -q ngx.print
if [ $? -eq 1 ]; then
  TITLE="$tmpTITLE"
else
  TITLE=""
fi
unset tmpTITLE

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

grep -q '@media screen and (min-width:1200px) and (max-width:1499px){' /www/docroot/css/responsive.css
if [ $? -eq 0 ]; then
  ACROSS=5
else
  ACROSS=4
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

if [ -z "$INSTALLED_RELEASE" ]; then
  CHART_CARDS='i'
elif [ -e /www/cards/000_Charts.lp ]; then
  CHART_CARDS='s'
elif [ -e /www/cards/000_CPU.lp ]; then
  CHART_CARDS='i'
else
  CHART_CARDS='n'
fi

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n

if [ -z "$INSTALLED_RELEASE" -a -f .defaults.tch-gui-unhide ]; then
  . ./.defaults.tch-gui-unhide
fi

if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_cron=0
SRV_dropbear=0
SRV_firewall=0
SRV_nginx=0
SRV_power=0
SRV_system=0
SRV_transformer=0

check_pwr_setting() {
  section="$1"
  option="$2"
  text="$3"
  if [ -z "$(uci -q get power.$section.$option)" ]; then
    pwrctl show | grep "$text" | grep -q DISABLED
    value=$?
    [ "$DEBUG" = "V" ] && echo "001@$(date +%H:%M:%S): - power.$section.$option=$value"
    uci set power.$section.$option="$value"
    SRV_power=$(( $SRV_power + 1 ))
  fi
}

apply_service_changes() {
  echo 001@$(date +%H:%M:%S): Applying service changes if required...
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop >/dev/null 2>&1
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start >/dev/null 2>&1
  fi
  [ $SRV_cron -gt 0 ] && /etc/init.d/cron restart
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
  [ $SRV_firewall -gt 0 ] && /etc/init.d/firewall reload 2> /dev/null

  echo 001@$(date +%H:%M:%S): Applying power settings...
  if [ -z "$(uci -q get power.cpu)" ];then
    uci set power.cpu='cpu'
  fi

  if [ -z "$(uci -q get power.cpu.cpuspeed)" ]; then
    case "$(pwrctl show | grep "CPU Speed Divisor" | tr -s " " | cut -d" " -f4)" in
      1) uci set power.cpu.cpuspeed="1";;
      2) uci set power.cpu.cpuspeed="2";;
      4) uci set power.cpu.cpuspeed="4";;
      5) uci set power.cpu.cpuspeed="8";;
      *) uci set power.cpu.cpuspeed="256";;
    esac
    SRV_power=$(( $SRV_power + 1 ))
  fi
  check_pwr_setting "cpu" "wait" "CPU Wait"
  check_pwr_setting "ethernet" "ethapd" "Auto Power"
  check_pwr_setting "ethernet" "eee" "Energy Efficient Ethernet"
  check_pwr_setting "ethernet" "autogreeen" "AutoGreeen"
  check_pwr_setting "ethernet" "dgm" "Deep Green Mode"
  [ $SRV_power -gt 0 ] && uci commit power
}

DEBUG=""
RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :a:c:d:f:h:i:l:p:rt:uv:yC:TVW-: option
do
 case "${option}" in
   -) case "${OPTARG}" in 
        debug)  DEBUG="V";; 
        *)      usage;; 
      esac;;
   a) if [ "${OPTARG}" -eq 4 -o "${OPTARG}" -eq 5 ]; then ACROSS=$OPTARG; else echo "ERROR: Cards across must be either 4 or 5"; exit 2; fi;;
   c) case "$(echo ${OPTARG} | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        m) COLOR=monochrome;;
        M) COLOR=MONOCHROME;;
        *) echo "ERROR: Unknown color option - $OPTARG"; exit 2;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n'; exit 2;; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n'; exit 2;; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   C) case "${OPTARG}" in
        n|s|i) CHART_CARDS="$OPTARG";; 
        *) echo "ERROR: Unknown chart card option - $OPTARG"; exit 2;;
      esac;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   ?) echo "Optional parameters:"
      echo " Control Options:"
      echo " -d y|n           : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                     (Default is current setting)"
      echo " -f y|n           : Enable (y) or Disable (n) firmware upgrade in the web GUI"
      echo "                     (Default is current setting)"
      echo " -p y|n           : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
      echo "                     (Default is current setting i.e (n) by default)"
      echo " -v y|n           : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
      echo "                     (Default is current setting or (y) for first time installs)"
      echo " Theme Options:"
      echo " -a 4|5           : Set the number of cards across on screen width greater than 1200px"
      echo "                     (Default is current setting, or 4 for first time installs)"
      echo " -c b|o|g|p|r|m|M : Set the theme highlight colour"
      echo "                     b=blue o=orange g=green p=purple r=red m=monochrome M=monochrome (with monochrome charts)"
      echo "                     (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                     (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -i y|n           : Show (y) or hide (n) the card icons"
      echo "                      (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n           : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                      (Default is current setting, or (n) if no theme has been applied)"
      echo " -t l|n|t|m       : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                      (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -C n|s|i         : Keep or remove chart cards"
      echo "                     n=No Chart Cards will be available"
      echo "                     s=Only the Summary Chart Card will be available"
      echo "                     i=Only the Individual Chart Cards will be available (default)"
      echo " -T               : Apply theme ONLY - bypass all other processing"
      echo " Update Options:"
      echo " -u               : Check for and download any changes to this script (may be newer than latest release version)"
      echo "                      When specifying the -u option, it must be the ONLY parameter specifed."
      if [ $WRAPPER = y ]; then
      echo " -U               : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                      After download, tch-gui-unhide will be automatically executed."
      fi
      echo " Miscellaneous Options:"
      echo " -r               : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo "                     When specifying the -r option, it must be the ONLY parameter specifed."
      echo " -y               : Bypass confirmation prompt (answers 'y')"
      echo " -V               : Show the release number of this script, the current installed release, and the latest available release on GitHub"
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  # File deployed to incorect location by releases prior to 2021.02.06
  if [ -f /usr/share/transformer/mappings/iperf.map ]; then
    rm /usr/share/transformer/mappings/iperf.map
  fi
  # Need to remove existing version or it doesn't get replaced?? 
  if [ -f /usr/sbin/traffichistory.lua ]; then
    if [ "$1" = "V" ]; then
      echo 010@$(date +%H:%M:%S): Removing file /usr/sbin/traffichistory.lua
    fi
    rm /usr/sbin/traffichistory.lua
  fi
  grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
  if [ $? -eq 0 ]; then
    sed -e '/traffichistory.lua/d' -i /etc/crontabs/root
    SRV_cron=$(( $SRV_cron + 1 ))
  fi
  # Add individual files to be restored here
  for t in /etc/init.d/power /usr/lib/lua/web/post_helper.lua
  do
    s=/rom$t
    if [ -f $s ]; then
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        echo 010@$(date +%H:%M:%S): Restoring file $t
        cp -f -p "$s" "$t"
      fi
    fi
  done
  # Add directories to be restored here
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      t=$(echo "$s" | cut -c5-)
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for f in /etc/tch-gui-unhide.ignored_release /etc/tch-gui-unhide.theme
  do
    if [ -f "$f" ]
    then
      echo 019@$(date +%H:%M:%S): Removing $f
      rm "$f"
    fi
  done
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      echo 019@$(date +%H:%M:%S): Removing empty directory $d
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ -n "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ -n "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  sed -e '/lua_shared_dict *TGU_/d' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
FW_BASE=$(uci get version.@version[0].marketing_version)
if [ "$FW_BASE" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $FW_BASE firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
echo "030@$(date +%H:%M:%S):  - Preserve the password files and SSH configuration to prevent root loss on RTFD"
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - Pretty up the GUI screens a bit"
echo "030@$(date +%H:%M:%S):  - Apply the $THEME theme with $COLOR highlights and $ICONS card icons"
echo "030@$(date +%H:%M:%S):  - Allow $ACROSS cards across the page on wide screens"
case "$CHART_CARDS" in 
  n)  echo "030@$(date +%H:%M:%S):  - All chart cards will be removed";;
  s)  echo "030@$(date +%H:%M:%S):  - Only the Summary Chart Card will be available";;
  i)  echo "030@$(date +%H:%M:%S):  - The Individual Chart Cards will be available";;
esac
if [ -f /www/docroot/landingpage.lp -a $KEEPLP = n ]; then
echo "030@$(date +%H:%M:%S):  - Theme and de-brand the Telstra Landing Page"
fi
if [ -n "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - Set the browser tabs titles to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
echo "030@$(date +%H:%M:%S): New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
echo "030@$(date +%H:%M:%S): New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

grep -q -E "lua_shared_dict *TGU_CPU" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for CPU calculations
  sed -e '/^http/a\    lua_shared_dict TGU_CPU 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

grep -q -E "lua_shared_dict *TGU_MbPS" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for throughput calculations
  sed -e '/^http/a\    lua_shared_dict TGU_MbPS 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

grep -q -E "lua_shared_dict *TGU_Theme" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for theme
  sed -e '/^http/a\    lua_shared_dict TGU_Theme 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

echo 040@$(date +%H:%M:%S): Preserving password files and SSH configuration to prevent root loss on RTFD
for f in /etc/passwd /etc/shadow /etc/config/dropbear /etc/dropbear/* /etc/rc.d/*dropbear
do
  grep -q -E "^$f$" /etc/rtfd_persistent_filelist.conf
  if [ $? -eq 1 ]
  then
    echo "$f">>/etc/rtfd_persistent_filelist.conf
  fi
done

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  MODALRULE=""
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]; then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  if [ -n "$MODAL" ]; then
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    if [ -n "$MODALRULE" -a -n "$(uci -q get web.$MODALRULE.roles | grep -v -E 'admin|guest')" ]; then
      echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
      HIDDEN=1
      uci add_list web.$MODALRULE.roles='admin'
      SRV_nginx=$(( $SRV_nginx + 1 ))
    fi
  elif [ "$CARDRULE" = "card_CPU" ]; then
    MODALRULE='gatewaymodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_gateway.hide)
  elif [ "$CARDRULE" = "card_RAM" ]; then
    MODALRULE='gatewaymodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_gateway.hide)
  elif [ "$CARDRULE" = "card_WANDown" ]; then
    MODALRULE='broadbandmodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_broadband.hide)
  elif [ "$CARDRULE" = "card_WANUp" ]; then
    MODALRULE='broadbandmodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_broadband.hide)
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]; then
    HIDDEN=0
  fi
  [ "$DEBUG" = "V" ] && echo "050@$(date +%H:%M:%S): - Card Rule $CARDRULE: card=$(basename $CARDFILE) hide=$HIDDEN modal=$MODALRULE"
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  if [ -z "$MODALRULE" ]; then
    uci -q delete web.${CARDRULE}.modal
  else
    uci set web.${CARDRULE}.modal="$MODALRULE"
  fi
  SRV_nginx=$(( $SRV_nginx + 1 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo BLD@$(date +%H:%M:%S): Deploying modified GUI code
echo 'QlpoOTFBWSZTWaoPgK4Bt5f/////VWP///////////////8UXKyav6DUSxhWsaVJnDdYY3mePebx
uYHYBSi50ez3CL05dUWw7711eR9NW7zzr1Ap2e63XSxdzUV5sKN7OS1Ewd3OKrLpdgrbFPQequ2t
FQPNiqlClK7e7rlTUdD26tbeOoJ3d687Nux2WrWyZvdw76JmB4X3s9BpS73V9qwPlJ9aAqgE+PSq
F7b7PvrBvfcT3ScCvg0feNtSXTuvez3ZPdO60dauNJQvTaXue8y3N1DtXtkLe7g9aAGKAAD0AF70
C+8Dy+33OawAS+LVem3kw8HT3M3vd5IPPcvd7adk9vXva9628egPTt3ufZ9NbzbzuR96euw0a3nV
vM3bG9y776j6XPOj6H19LmPfPbcZzu8unuGnZ7syc8fbr29b4YqKVs2Y0taIYfeu+3M71rcZfXZ2
jCO+qDvtda+fPnuGAA6KPSR9sdKTb21595t296AB4ewB9FapQ1C2luzE9MKBQ77AH0AAC1uOvtq0
bi2+++rd3z5fYqgBe+pZZRSefO8faAakFaZtlaxo0WwA1X3oGcaeVz774jd9y8H0K+ez3bt9vfas
77m7Z9uvstr67vuelzy4xi9u9VzHeh7gE3c1oAWwADtgDVU6SWKLAK1d3dY2aXLSR993IEQUqIPv
r17w0xtbxuOtGGsKQgAoAAKM5tB43aPJ4AenTZrvLe68dJKChrTve5fYAd7159j1eLefZ18wu7zv
V77ve+HxJ9Pd76talfb6597ve+5e8e3bd76Y7ei422BIoCFsGbADdlDTruzdxygCQUBQALsNPfYP
s6+93vJ5rwUEpBL4Jtk2BtmZztq2+xPGm+3vvd973vB96+u6a6F06667HDV3S2623Te2953Ps7rZ
e7vTelqFBT03d3bc7vGN5b773a0r1hwsa1OzV228dnvNA4NA9a2H2wdX288+0Dt7ij7284G60PRT
rPm33t4+PpF63m0p2XY6VbG74Pvt76+gZJSlO7q6yaoVEksws0q9dbvVq448i73PvN893Dpvebj0
+lm7dDpTphsBpVEpAJ1oqACib73ntvh7uryqCoPvnj7wFYezu9bUegBkDQB54fd696FC7z74fDoA
FVRIEqoFEHtjsDevX1r3Fu+hVc6AK+9W+O59573de8e29M7crY9711yFvfbV5nezplQ+jQ7s+eZ3
bj3uW3Qdb7d4zXvb77arb530fLkr3ffNeU973Hd57x8gPPt87egdd9lzu+nr6fea+3Xfd71AFXbi
Tvfec6ADq6nnS332U8Rb27pM29ndXjRex56+9ut9Pe73j7e26g99orvPoL7CRQO8V8N5qd7u4emm
tu7kqid99x69g99nR2b7Pn3318774xBmo+4vb29o0nPXvepGpba323vdh33uO9su++9yvt85d7z2
n3bu+d99N72e+3R9mXR294dsREAb5gGXHAncbdbclbrhWs7q4OWIOgTtoAKuzGdBtxkRzBRSnQCd
YHTIHfc7y9240x3alu3b069AtmXl9e70uzsO9775cb5tg99XcrVw5FOh0Nll6eON9251qPtG85ri
HTbu13vHp3ug3d2qcuumEhUqRSSPtj5L273U763pW7cZrG4pgbbdqooucGW62zu3Jt0uu5X0Hc0V
6bOa5zgS86bosRCEAoBJthUVUUR9vc9zVA2a7C73tPNOt3c9bnu7saEqfbuKM+77xs97d9dwqk33
3nvAy92vr2trbtJe2MQaK2jbx5qjano9ePNl1i7s13C3NhW6btzqHc1LXXZ6Tsacl17t0usx1M0u
88jYNI1nPDba9c7AADtdxVsbFi++772Btne+pxKeNvluXbLtuA7cLOzcHEgQ13W6d2zbj72uehVB
WgDo4+7o7TTeEFBE2xiO2cLdWbuV09257ZwGKvo6K7s63bCdTfe+vU+mu3u++T3FC+ffD6qqFAUF
e9vpznA2ZrJVAxuOZHd4TXDa9Bud7Xe88KCjrs2G30+vfFEiy58Z6V62fdr2g+6d3b6zG4tA1G29
J7snfe29Z3pNsVJt87UzjpX0UHuG2HtFq0zVap13OjtQ0oSAAipVVS6utQZtu2+vvV99zz77H3M3
01mtrAAPV26s973NL3Bu7tZ0J7e8DwEiCSqh9aRIz6971xbb29A999vb0Ou9zW9tKBe9PFR6ytye
nltqaAF21e73tHqcZKY021zSwBRrQDqmgOlz2e+3vrGr5Pe73dbe1PjGg3Y3VbWZhrWqoGumbB0B
VBbLsfe7vR03boaNDbubpkEWrLt0m6eEeY66+73WPat8w4uvuapLskQV7s7srr67ypvfW9N7u7ub
6OuPJzLZbjUKFBJoVnoV3a8eqztzO9NG9bG7u7Nbm505d1umh63etD2sb3ObxekrQLbCfZugA3sD
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
UgvuV2eTwdmmdHnCDv0dsYPqKIb5tm27dsD9wQgX7IDegMXVoktAYEGYU7McV+kBULhL/hnWLo5R
lUnUEekucelecc88IafZvx7JN7RcifDkqMZrIPlmg03rAuhStOxkBLLSBoMSI9XXGRlkLM/IvzaV
+9Wj4k0+NQuqWPP4uZb6OPn6RlNPliqusDsCQhmBBA1KnZHhAlTgQhtcCOUDvIn/M+zn/U+1G//y
sf6VDX/f/yf9H/m/8//r0/5+v5rP96/9S//dX/z/9H/X/s/0/9X+n/+/v/2ero/5O72Wf+T/zejU
/9H/5//R/1f6v/x/+U/0H/R/J8/+v/2f57/N/4m+r/1f6vu/1/6Of8Pj/2f7//Xw/4/9f8v59fw/
3/k//f/s/8n/Bkf7l/9n+z/t7vs/5f/8/5P/c38Pwz7/7fZ/29n+7/b/s/6f9v/b/u/+H8P/R/vw
/3f6f2f9P+//0/+X/f/zfu/3Wf/9/i4f8//bZP/d/v8Q/2Y/2vvw/5fKciE/z/bn/Rj/QpG5+/H/
k2D/vdCcMQ3Xb/Q5ov2En4OGRdX+jTqLXPBgsH9qwBscjiNYByCEeAJ/Q8hxiQpw7EE9GRrgSDPE
jWV16f68klnAjgOpRwi2a+wSWzVw5fYg6gbmxdzKdt6DR3TEC5EGMrkVMy/93oTNcf1SL7gzrRLU
jgttRQBiaqqsrKNJfzuz0dE81/7woZwv/1VFo0J/B5h58Z0/n7tLh+c13SQc8segPBgcQdSDBJ4T
OmyR2YMjo2IY16G4aHGtiDivI6rl1/7Ptf5I/2PtQxD/ihUB5vi/5wXYzZUEYhsQB/5wRX/goVsK
1p3JmAbX225RgRv/wDiaYob/zVZLkiQvlENE9IjhVvJRA3g8dBy3o4QuP/lmexkD/0A0NW9ERyFo
4VCHTAmiOFfGU/9U+4nPdNmDKMwijz85ivPm9/sOP/CNeP/u/7XZXnrvdXZ/0vJ+n/udglsIEuvP
PPKEkkkl1+HlsbwX/6hslmDlbHIKWGZdVYbkU97rMnfO0XVS3AwxYFvsBERx37zDN7u32N3YFsY7
tMzYtysuK79skZ/0Idzm/dyPl+U03h7eHxkVVXYO9VZ+WB4Hx35+PQf/C/6p0/9fmFNB3S4d89E+
Tj/2M6oitTd9PKnF7n/DIOjUYyL7q8YoonLuvZca9+dIavRffvo0Ci+ocj0GW0m3d/DTpjD9ZdUc
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
Tcxsu4Qe0wXdkYvtihquUzP5OXxq/Tgiyr78emFw/l10wpcnnmpaHeXhcOM8H72da15Sgp7VopjL
pmLlFVpG7Zs2448Ic3pNtjbFGyuJycejlrCG5jXGwJF+7mVu94WIsEmqFM6pHU8Vs7DOofDlK/fO
7WrdXbPTZjZdPSuFNWlOxUwLUNYZuFq+Y61jXbw9dlVnR/TTdub8o7Yo+6o89HtJM6/WjMjr0dny
+Db+NvXjE5y5Z4lyPzf6xa7kmdnlfFZHstKwd6h9dXeqY+MIO98iS3b2SSupOuq9rufU8YuuVZgY
Vczdmuxsbca1MI3OhbGpVqxzK7HAnPWemFg1I9netI2enXFqu/nX3y4pLZxWy1V1vs6+7ppbv32W
VtLrbKfGO+dOUM5txr3xrbvwNbqrq25tc3OLGDKpOlzRL3hBFhNd1hZCutbHueyy8pfXfPPXtavp
1j3ct7RNL6611MMkTDE63V6LCEFEzeWzOdbbq6aVKLBZ3GjT1S99u6bNKDaOb+fHr365Omn+95h8
cO6dcExQkQvJDnTReSb65rL3enJXPNZOMee6Dgm/ddxv6dcR7fLp7u+L6e0uXes9Yq640iEY76Qq
XOmccYrrmb+JxqX6l2366T0SMLt67XCMGHvMc1n2nWGmzZny8POyYzUw8whHAywyUVI1Zwk9hJ4W
OHu3ZLyU8/eYVQtyfQv57oOuE9XJwz6+eMY8Pp3xw+L3FWzvO31t7mZeNeXP6/bz+t33XOkrpuuI
uYwkk8W7LoQu77XI6Tp211a1mcmsKruOcDDFFzPUZUsTNuhw2FkYuFxVLYuVfKj1XHmGeq2qBvWi
8ar9Fad7m6m0tkI7Gx4uMIWQvaXG3SFl0amhWtCpS+UtGQJRW3JRvTUyyKLaxJTv71Vvpz1lxqvw
9ipj6b6vAxp5CBZhmuxuiaS6sZZWXNNWWvPirkK6pPmZrd2FlcKHbc7hxi3K2+4usx6hCLAnjV4q
qoqkEy2Y4XOtlbg3Tp9kemPy9L/bdoyJcu6EvivXcjvMtyl52HVXNGhK+dUWU2KlFWS2NY8dnm6L
P7Kcjwrq6J3WlM/tb11fDZd6YY77I1W0xwjDVtkqtrjL0omsyxjpm8mgxKHu4wLVqWrbYxRT1Rye
iU6G1hC7Gsao8bGnkSGdbWzrlKCYXUgZZ45/EcIFD4a7geKzPq49TUNjx5elBGDpO4jPHGcV6tz+
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' | base64 -d | bzcat | tar -xf - -C /

# Run any extra feature scripts
for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
do
  echo -n 060@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
  . ./$s
done

echo 066@$(date +%H:%M:%S): Fix QoS card for 17.2 FW
sed \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/cards/008_qos.lp

echo 066@$(date +%H:%M:%S): Fix QoS classify modal for 17.2 FW
sed \
  -e 's/uci_classify_path\.\."@."/uci_classify_path/' \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/docroot/modals/qos-classify-modal.lp

echo 066@$(date +%H:%M:%S): Remove QoS Upload Shapers tab \(Not supported on 17.2 FW\)
if [ -f /www/docroot/modals/qos-swshaper-modal.lp ]; then
  rm /www/docroot/modals/qos-swshaper-modal.lp
fi
sed \
  -e '/qos-swshaper-modal.lp/d' \
  -i /www/snippets/tabs-qos.lp

echo 070@$(date +%H:%M:%S): Creating QoS Reclassify Rules modal
sed \
  -e 's/\(classify[\.-_%]\)/re\1/g' \
  -e 's/Classify/Reclassify/' \
  /www/docroot/modals/qos-classify-modal.lp > /www/docroot/modals/qos-reclassify-modal.lp

echo 075@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  -e 's|@wwan.up")\[1\].value|@wwan.up")|' \
  -e 's|if wwan_up|if wwan_up and wwan_up[1].value|' \
  -e 's/count == 5/count < 5/' \
  -e '/ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)/,/^\s*$/d' \
  -e '/proxy.set("rpc.system.lock.free", "0")/i end' \
  -e 's/\(iface_total\[v.iface  .. "_" .. direct\]\)/(tonumber(string.untaint(\1)) or 0)/' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

# Initial invocation of transformer code will fail if history directory does not exist
if [ ! -d /root/trafficmon/history ]; then
  echo 075@$(date +%H:%M:%S): Create directory to retain traffic monitor daily history
  mkdir -p /root/trafficmon/history
fi
if [ ! -f /root/trafficmon/history/.wan_rollover ]; then
  echo 075@$(date +%H:%M:%S): Create WAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wan_rollover
fi
if [ ! -f /root/trafficmon/history/.wwan_rollover ]; then
  echo 075@$(date +%H:%M:%S): Create WWAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wwan_rollover
fi

grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
if [ $? -eq 1 ]; then
  echo 075@$(date +%H:%M:%S): Create cron job to retain traffic monitor daily history
  echo "9,19,29,39,49,59 * * * * /usr/sbin/traffichistory.lua" >> /etc/crontabs/root
  SRV_cron=$(( $SRV_cron + 1 ))
fi

echo 075@$(date +%H:%M:%S): Only lock files for 600 seconds
sed -e 's/lfs.lock_dir(datadir)/lfs.lock_dir(datadir,600)/' -i /usr/share/transformer/mappings/rpc/system.lock.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 080@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"Root access <i>should</i> be preserved when using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button. You can use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to have more control over the factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<div data-toggle=\"modal\" class=\"btn\" data-remote=\"/modals/tch-gui-unhide-update-modal.lp\" data-id=\"tch-gui-unhide-update-modal\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\"></i>&nbsp;'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</div>'" \
    -e '/isBridgedMode/i\        end' \
    -e '/local getargs/a\if getargs and getargs.ignore_update then' \
    -e '/local getargs/a\  local proxy = require("datamodel")' \
    -e '/local getargs/a\  proxy.set("rpc.gui.IgnoreCurrentRelease", getargs.ignore_update)' \
    -e '/local getargs/a\end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management, chart library, and wait indicator when opening modals
sed \
  -e '/<title>/i \    <script src="/js/tch-gui-unhide.js"></script>\\' \
  -e '/<title>/i \    <script src="/js/chart-min.js"></script>\\' \
  -e '/id="waiting"/a \    <script>$(".smallcard .header,.modal-link").click(function(){if ($(this).attr("data-remote")||$(this).find("[data-remote]").length>0){$("#waiting").fadeIn();}});</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Add improved debugging when errors cause cards to fail to load
sed \
  -e '/lp.include(v)/i\         local success,msg = xpcall(function()' \
  -e '/lp.include(v)/a\         end, function(err)' \
  -e '/lp.include(v)/a\          ngx.print("<pre>", debug.traceback(err),"</pre>")' \
  -e '/lp.include(v)/a\          ngx.log(ngx.ERR, debug.traceback(err))' \
  -e '/lp.include(v)/a\         end)' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

LTE_CARD="$(find /www/cards -type f -name '*lte.lp')"
echo 085@$(date +%H:%M:%S): Fix display bug on Mobile card, hide if no devices found and stop refresh when any modal displayed
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/var refreshInterval/a window.intervalIDs.push(refreshInterval);\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $LTE_CARD
echo 085@$(date +%H:%M:%S): Show Mobile Only Mode status
sed \
  -e 's/height: 25/height:20/' \
  -e '/\.card-label/a margin-bottom:0px;\\' \
  -e '/local light/i local proxy = require("datamodel")' \
  -e '/local light/i local primarywanmode = proxy.get("uci.wansensing.global.primarywanmode")' \
  -e "/card_bg/a ');" \
  -e '/card_bg/a if primarywanmode then' \
  -e '/card_bg/a   if primarywanmode[1].value == "MOBILE" then' \
  -e '/card_bg/a     ngx.print(ui_helper.createSimpleLight("1", T("Mobile Only Mode enabled")) );' \
  -e '/card_bg/a   else' \
  -e '/card_bg/a     ngx.print(ui_helper.createSimpleLight("0", T("Mobile Only Mode disabled")) );' \
  -e '/card_bg/a   end' \
  -e '/card_bg/a end' \
  -e "/card_bg/a ngx.print('\\\\" \
  -i $LTE_CARD

echo 085@$(date +%H:%M:%S): Show LTE Network Registration and Service status
sed \
  -e 's/\(, signal_quality\)/\1, registration_status, service_status/' \
  -e '/radio_interface_map/a\			result = utils.getContent(rpc_path .. "network.serving_system.nas_state")' \
  -e '/radio_interface_map/a\			registration_status = utils.nas_state_map[result.nas_state]' \
  -e '/radio_interface_map/a\			result = utils.getContent(rpc_path .. "network.serving_system.service_state")' \
  -e '/radio_interface_map/a\			service_status = utils.service_state_map[result.service_state]' \
  -e '/local data =/a\	registration_status = registration_status or "",' \
  -e '/local data =/a\	service_status = service_status or "",' \
  -i /www/docroot/ajax/mobiletab.lua
sed \
  -e '/"subinfos"/a\				<div style="height: 20px;" data-bind="visible: registrationStatus().length > 0">\\' \
  -e "/\"subinfos\"/a\					<label class=\"card-label\">');  ngx.print( T\"Network\"..\":\" ); ngx.print('</label>\\\\" \
  -e '/"subinfos"/a\					<div class="controls">\\' \
  -e '/"subinfos"/a\						<strong data-bind="text: registrationStatus"></strong>\\' \
  -e '/"subinfos"/a\					</div>\\' \
  -e '/"subinfos"/a\				</div>\\' \
  -e '/"subinfos"/a\				<div style="height: 20px;" data-bind="visible: serviceStatus().length > 0">\\' \
  -e "/\"subinfos\"/a\					<label class=\"card-label\">');  ngx.print( T\"Service\"..\":\" ); ngx.print('</label>\\\\" \
  -e '/"subinfos"/a\					<div class="controls">\\' \
  -e '/"subinfos"/a\						<strong data-bind="text: serviceStatus"></strong>\\' \
  -e '/"subinfos"/a\					</div>\\' \
  -e '/"subinfos"/a\				</div>\\' \
  -e '/this.deviceStatus/a\			this.registrationStatus = ko.observable("");\\' \
  -e '/this.deviceStatus/a\			this.serviceStatus = ko.observable("");\\' \
  -e '/elementCSRFtoken/a\					if(data.registration_status != undefined) {\\' \
  -e '/elementCSRFtoken/a\						self.registrationStatus(data.registration_status);\\' \
  -e '/elementCSRFtoken/a\					}\\' \
  -e '/elementCSRFtoken/a\					if(data.service_status != undefined) {\\' \
  -e '/elementCSRFtoken/a\						self.serviceStatus(data.service_status);\\' \
  -e '/elementCSRFtoken/a\					}\\' \
  -i $LTE_CARD

echo 085@$(date +%H:%M:%S): Add Device Capabilities and LTE Band Selection to Mobile Configuration screen
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/local function get_session_info_section/i \local function get_device_capabilities_section(page, html)' \
  -e '/local function get_session_info_section/i \	local section = {}' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.arfcn_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"ARFCN Selection Support" .. ":", page.device.capabilities.arfcn_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.band_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Band Selection Support" .. ":", page.device.capabilities.band_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.manual_plmn_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Manual PLMN Selection" .. ":", page.device.capabilities.manual_plmn_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.strongest_cell_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Strongest Cell Selection" .. ":", page.device.capabilities.strongest_cell_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_modes ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported Modes" .. ":", page.device.capabilities.supported_modes))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_cdma ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported CDMA Bands" .. ":", page.device.capabilities.supported_bands_cdma))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_gsm ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported GSM Bands" .. ":", page.device.capabilities.supported_bands_gsm))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_lte ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported LTE Bands" .. ":", page.device.capabilities.supported_bands_lte))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.max_data_sessions ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Max Data Sessions" .. ":", page.device.capabilities.max_data_sessions))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_reading ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Reading" .. ":", page.device.capabilities.sms_reading))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_sending ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Sending" .. ":", page.device.capabilities.sms_sending))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if utils.Len(section) > 0 then' \
  -e '/local function get_session_info_section/i \		tinsert(html, "<fieldset><legend>" .. T"Device Capabilities" .. "</legend>")' \
  -e '/local function get_session_info_section/i \		tinsert(html, section)' \
  -e '/local function get_session_info_section/i \		tinsert(html, "</fieldset>")' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \end' \
  -e '/local function get_session_info_section/i \\' \
  -e '/local function get_profile_select/i \local function validate_lte_bands(device)' \
  -e '/local function get_profile_select/i \    local choices = setmetatable({}, untaint_mt)' \
  -e '/local function get_profile_select/i \    local b' \
  -e '/local function get_profile_select/i \    for b in string.gmatch(device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/local function get_profile_select/i \      choices[string.untaint(b)] = true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \    return function(value, object, key)' \
  -e '/local function get_profile_select/i \      local uv' \
  -e '/local function get_profile_select/i \      local concatvalue = ""' \
  -e '/local function get_profile_select/i \      if not value then' \
  -e '/local function get_profile_select/i \        return nil, T"Invalid input."' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      if type(value) == "table" then' \
  -e '/local function get_profile_select/i \        uv = value' \
  -e '/local function get_profile_select/i \      else' \
  -e '/local function get_profile_select/i \        uv = { value }' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      for i,v in ipairs(uv) do' \
  -e '/local function get_profile_select/i \        if v ~= "" then' \
  -e '/local function get_profile_select/i \          if concatvalue ~= "" then' \
  -e '/local function get_profile_select/i \            concatvalue = concatvalue.." "' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \          concatvalue = concatvalue..string.untaint(v)' \
  -e '/local function get_profile_select/i \          if not choices[v] then' \
  -e '/local function get_profile_select/i \            return nil, T"Invalid value."' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \        end' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      object[key] = concatvalue' \
  -e '/local function get_profile_select/i \      return true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \end' \
  -e '/local function get_profile_select/i \\' \
  -e '/p.mapParams\["interface_enabled"\]/a \		if utils.radio_tech_map[device.leds.radio] == "LTE" then' \
  -e '/p.mapParams\["interface_enabled"\]/a \			p.mapParams["lte_bands"] = device.uci_path .. "lte_bands"' \
  -e '/p.mapParams\["interface_enabled"\]/a \			p.mapValid["lte_bands"] = validate_lte_bands(device)' \
  -e '/p.mapParams\["interface_enabled"\]/a \		end' \
  -e '/"Access Technology"/a \	 			if utils.radio_tech_map[page.device.leds.radio] == "LTE" then' \
  -e '/"Access Technology"/a \	 				local b, lte_bands, lte_bands_checked = nil, {}, {}' \
  -e '/"Access Technology"/a \	 				for b in string.gmatch(page.device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/"Access Technology"/a \	 					lte_bands[#lte_bands+1] = { string.untaint(b), b }' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				if not page.content["lte_bands"] or page.content["lte_bands"] == "" then' \
  -e '/"Access Technology"/a \	 					for k,v in ipairs(lte_bands) do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[k] = string.untaint(v[1])' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				else' \
  -e '/"Access Technology"/a \	 					for b in string.gmatch(page.content["lte_bands"], "%d+") do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[#lte_bands_checked+1] = string.untaint(b)' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				tinsert(html, ui_helper.createCheckboxGroup(T"LTE Bands", "lte_bands", lte_bands, lte_bands_checked, {checkbox = { class="inline" }}, nil))' \
  -e '/"Access Technology"/a \	 			end' \
  -e '/^\s*get_device_info_section/a get_device_capabilities_section(page, html)' \
  -i /www/docroot/modals/lte-modal.lp

echo 085@$(date +%H:%M:%S): Add new Mobile tabs
sed \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-autofailover.lp", T"Auto-Failover"},' \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-operators.lp", T"Network Operators"},' \
  -i /www/snippets/tabs-mobiled.lp

echo 085@$(date +%H:%M:%S): Configure transformer for missing WanSensing settings
sed \
  -e 's/\("autofailover\)/\1", \1maxwait/' \
  -e '/timeout/ {n; :a; /timeout/! {N; ba;}; s/\("timeout"\)/\1, "fasttimeout"/;}' \
  -i /usr/share/transformer/mappings/uci/wansensing.map
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
    if [ -f "$f" ]; then
      [ "$DEBUG" = "V" ] && echo "090@$(date +%H:%M:%S):  - $f"
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
    fi
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo "090@$(date +%H:%M:%S): Change 'Gateway' to '$VARIANT'"
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp
sed -e "s/Device/$VARIANT/g" -i /www/docroot/modals/ethernet-modal.lp

echo 091@$(date +%H:%M:%S): Fixing titles
sed -e "s/Gateway/LAN/g" -i /www/cards/005_LAN.lp
sed -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," -i /www/docroot/login.lp

echo 095@$(date +%H:%M:%S): Add webserver wait functions
sed \
  -e '/function resetreboot(msg, msg_dst, action)/i \  var refreshTimeOut = 5000;\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  var refreshDelay = 3000;\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  function wait_for_webserver_running() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    $.ajax({ url: "/", timeout: refreshTimeOut })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .done(function(data) {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.open("text/html");\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.write(data);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.close();\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .fail(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_running, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    });\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  }\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  function wait_for_webserver_down() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    $.ajax({ url: target, timeout: refreshTimeOut })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .done(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_down, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .fail(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_running, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    });\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  }\\' \
  -i /www/docroot/modals/broadband-modal.lp

echo 095@$(date +%H:%M:%S): Fix static leases for FW 17.2
sed \
  -e 's/"uci\.dhcp\.host\.@\."/"uci.dhcp.host."/' \
  -e '/objectName/,/addNamedObject/d' \
  -i /www/docroot/modals/ethernet-modal.lp

echo 095@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 095@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/local content =/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 095@$(date +%H:%M:%S): Make Telstra bridged mode compatible with Ansuel network cards and modals
sed \
  -e "/uci.network.interface.@lan.ifname/i \        [\"uci.network.config.wan_mode\"] = 'bridge'," \
  -i /www/lua/bridgedmode_helper.lua

echo 095@$(date +%H:%M:%S): Check for fake WAN in bridged mode \(nqe bind errors fix\)
sed \
  -e 's/if (proxy.get("uci.network.interface.@wan.")) then/local ifname = proxy.get("uci.network.interface.@wan.ifname")\
    if ifname and ifname[1].value ~= "lo" then/' \
  -i /www/lua/bridgedmode_helper.lua

echo 095@$(date +%H:%M:%S): Allow reset to Routed Mode without RTFD
sed \
  -e '/configBridgedMode/i \function M.configRoutedMode()' \
  -e '/configBridgedMode/i \  local success = proxy.set({' \
  -e '/configBridgedMode/i \    ["uci.wansensing.global.enable"] = "1",' \
  -e '/configBridgedMode/i \    ["uci.network.interface.@lan.ifname"] = "eth0 eth1 eth2 eth3",' \
  -e '/configBridgedMode/i \    ["uci.dhcp.dhcp.@lan.ignore"] = "0",' \
  -e '/configBridgedMode/i \    ["uci.network.config.wan_mode"] = "dhcp",' \
  -e '/configBridgedMode/i \    ["uci.network.interface.@lan.gateway"] = "",' \
  -e '/configBridgedMode/i \  })' \
  -e '/configBridgedMode/i \  if success then' \
  -e '/configBridgedMode/i \    local landns = proxy.getPN("uci.network.interface.@lan.dns.", true)' \
  -e '/configBridgedMode/i \    if landns then' \
  -e '/configBridgedMode/i \      local dns' \
  -e '/configBridgedMode/i \      for _,dns in pairs(landns) do' \
  -e '/configBridgedMode/i \        proxy.del(dns.path)' \
  -e '/configBridgedMode/i \      end' \
  -e '/configBridgedMode/i \    end' \
  -e '/configBridgedMode/i \    local ifnames = {' \
  -e '/configBridgedMode/i \      ppp = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.proto"] = "pppoe",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.metric"] = "10",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.username"] = "newdsluser@bigpond.com",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.password"] = "new2dsl",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.keepalive"] = "4,20",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.iface6rd"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.graceful_restart"] = "1",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      ipoe = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.proto"] = "dhcp",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.metric"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.reqopts"] = "1 3 6 43 51 58 59",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.iface6rd"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.vendorid"] = "technicolor",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wan = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan.auto"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wan6 = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.auto"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.proto"] = "dhcpv6",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.reqopts"] = "23 17",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.reqaddress"] = "force",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.noslaaconly"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.iface_464xlat"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.forceprefix"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.soltimeout"] = "240",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wwan = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wwan.enabled"] = "0"' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      Guest1 = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.proto"] = "static",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ip6assign"] = "64",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ip6hint"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.netmask"] = "255.255.255.128",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ipaddr"] = "192.168.2.126",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ifname"] = "wl0_1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.force_link"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      Guest1_5GHz = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.proto"] = "static",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ip6assign"] = "64",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ip6hint"] = "2",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.netmask"] = "255.255.255.128",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ipaddr"] = "192.168.2.254",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ifname"] = "wl1_1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.force_link"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \    }' \
  -e '/configBridgedMode/i \    local ifname,config' \
  -e '/configBridgedMode/i \    for ifname,config in pairs(ifnames) do' \
  -e '/configBridgedMode/i \      if success and not proxy.get("uci.network.interface.@" .. ifname .. ".") then' \
  -e '/configBridgedMode/i \        proxy.add("uci.network.interface.", ifname)' \
  -e '/configBridgedMode/i \      end' \
  -e '/configBridgedMode/i \      success = success and proxy.set(config)' \
  -e '/configBridgedMode/i \    end' \
  -e '/configBridgedMode/i \    success = success and proxy.apply()' \
  -e '/configBridgedMode/i \  end' \
  -e '/configBridgedMode/i \  return success' \
  -e '/configBridgedMode/i \end' \
  -i /www/lua/bridgedmode_helper.lua

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Removing obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 101@$(date +%H:%M:%S): Missing proxy in relay setup card 
sed -e '/local content_helper/a local proxy = require\("datamodel"\)' -i /www/cards/018_relaysetup.lp

echo 102@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/^  end/d' \
  -e '/convertResultToObject/a \  local htmlLeft = {}' \
  -e '/convertResultToObject/a \  local htmlRight = {}' \
  -e '/convertResultToObject/a \  local attributes = {' \
  -e '/convertResultToObject/a \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/convertResultToObject/a \  }' \
  -e '/convertResultToObject/a \  for _, v in ipairs(helper_uci_content) do' \
  -e '/convertResultToObject/a \      if v.intf ~= "loopback" then' \
  -e '/convertResultToObject/a \          local state = v.enable' \
  -e '/convertResultToObject/a \          local text' \
  -e '/convertResultToObject/a \          if state ~= "0" then' \
  -e '/convertResultToObject/a \              text =" enabled<br>"' \
  -e '/convertResultToObject/a \              state = "1"' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              text = " disabled<br>"' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \          if #htmlRight >= #htmlLeft then' \
  -e '/convertResultToObject/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \      end' \
  -e '/convertResultToObject/a \  end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 102@$(date +%H:%M:%S): Fix NAT ALG modal errors and include in Firewall tabs if card hidden
sed \
  -e '/^local ui_helper/i \local proxy = require("datamodel")' \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -e '/^local UI_helper/i \local proxy = require("datamodel")' \
  -e "/modal-body/a \  ');" \
  -e '/modal-body/a \  local card_hidden = proxy.get("uci.web.card.@card_natalghelper.hide")' \
  -e '/modal-body/a \  if card_hidden and card_hidden[1] and card_hidden[1].value == "1" then' \
  -e '/modal-body/a \    local lp = require("web.lp")' \
  -e '/modal-body/a \    lp.setpath("/www/snippets/")' \
  -e '/modal-body/a \    lp.include("tabs-firewall.lp")' \
  -e '/modal-body/a \  end' \
  -e "/modal-body/a \  ngx.print('\\\\" \
  -e "/createTable/i \        ngx.print('<legend>');  ngx.print( T'NAT Helpers (ALG\\\\'s)' ); ngx.print('</legend>');" \
  -e "s/\"NAT Helpers (ALG's)\"/\"Firewall\"/" \
  -e 's/Dest Port/Destination Port/' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 104@$(date +%H:%M:%S): Fix incorrect error detection in DDNS update when IPv6 address contains 401 or 500 
sed \
  -e 's/\(".\*401"\|".\*500"\)/\1|grep -v Address/' \
  -i /usr/share/transformer/mappings/rpc/ddns.map

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ -n "$ip" ]
    then 
      sed -e "/127.0.0.1/a\    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ -n "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i\    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Allow custom DNS entries
sed \
  -e 's/"addnhosts", "bogusnxdomain"/"addnhosts", "address", "bogusnxdomain"/' \
  -i /usr/share/transformer/mappings/uci/dhcp.map
  SRV_transformer=$(( $SRV_transformer + 1 ))

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/,/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  [ "$DEBUG" = "V" ] && echo "110@$(date +%H:%M:%S): - Fixing $f"
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 110@$(date +%H:%M:%S): Enable various cards that the default user was not allowed to see
for f in $(grep -l -r "and not session:isdefaultuser" /www/cards)
do
  [ "$DEBUG" = "V" ] && echo "110@$(date +%H:%M:%S): - Fixing $f"
  sed -e 's/ and not session:isdefaultuser()//' -i $f
done

echo 115@$(date +%H:%M:%S): Fix Firewall modals for FW 17.2
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-cone-modal.lp
sed \
  -e 's/@defaults\[0\]/1/' \
  -i /www/docroot/modals/firewall-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-port-forwarding-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-rules-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-zones-modal.lp

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule.
sed \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule_v6.
sed \
  -e '/src = {/i \      name = {' \
  -e '/src = {/i \        access = "readWrite",' \
  -e '/src = {/i \        type = "string",' \
  -e '/src = {/i \      },' \
  -e '/src =  function(mapping, paramname, k/i \    name =  function(mapping, paramname, key)' \
  -e '/src =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/src =  function(mapping, paramname, k/i \    end,' \
  -e '/src =  function(mapping, paramname, p/i \    name =  function(mapping, paramname, paramvalue, key)' \
  -e '/src =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/src =  function(mapping, paramname, p/i \    end,' \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule_v6.map
SRV_transformer=$(( $SRV_transformer + 1 ))

# Version 2021.02.22 set an incorrect value for synflood_rate, so have to fix it
synflood_rate="$(uci -q get firewall.@defaults[0].synflood_rate)" 
if [ -n "$synflood_rate" ]; then
  echo $synflood_rate | grep -q -E '^[0-9]+/s$'
  if [ $? = 1 ]; then
    [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Fixing configuration firewall.@defaults[0].synflood_rate"
    synflood_rate="$(echo $synflood_rate | grep -o -E '^[0-9]+')" 
    uci set firewall.@defaults[0].synflood_rate="$synflood_rate/s"
    SRV_firewall=$(( $SRV_firewall + 1 ))
  fi
fi
# Version 2021.02.22 allowed setting of tcp_syncookies but it is not enabled in kernel, so have to remove it
if [ -n "$(uci -q get firewall.@defaults[0].tcp_syncookies)" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Deleting configuration firewall.@defaults[0].tcp_syncookies"
  uci -q delete firewall.@defaults[0].tcp_syncookies
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi

echo 115@$(date +%H:%M:%S): Fix missing values on uci.firewall.include. and uci.firewall.ipset.
sed \
  -e 's/"type", "family"/"type", "path", "family"/' \
  -e 's/\("hashsize", "timeout",\)$/\1 "match",/' \
  -i /usr/share/transformer/mappings/uci/firewall.map

echo 115@$(date +%H:%M:%S): Add transformer mapping for uci.firewall.nat.
sed -n '/-- uci.firewall.redirect/,/MultiMap/p' /usr/share/transformer/mappings/uci/firewall.map | sed -e 's/redirect/nat/g' >> /usr/share/transformer/mappings/uci/firewall.map

echo 115@$(date +%H:%M:%S): Checking firewall configuration for DNS interception
if [ "$(uci -q get firewall.dns_xcptn)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_xcptn"
  uci set firewall.dns_xcptn='ipset'
  uci set firewall.dns_xcptn.name='dns_xcptn'
  uci set firewall.dns_xcptn.family='ipv4'
  uci set firewall.dns_xcptn.storage='hash'
  uci set firewall.dns_xcptn.match='ip'
  uci set firewall.dns_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.dns_xcptn ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.dns_xcptn"
  echo -n > /etc/firewall.ipset.dns_xcptn
fi
if [ "$(uci -q get firewall.dns_int)" != "redirect" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_int"
  uci set firewall.dns_int='redirect'
  uci set firewall.dns_int.name='Intercept-DNS'
  uci set firewall.dns_int.family='ipv4'
  uci set firewall.dns_int.src='lan'
  uci set firewall.dns_int.src_dport='53'
  uci set firewall.dns_int.proto='tcp udp'
  uci set firewall.dns_int.dest='wan'
  uci set firewall.dns_int.target='DNAT'
  uci set firewall.dns_int.ipset='!dns_xcptn src'
  uci set firewall.dns_int.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dns_masq)" != "nat" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_masq"
  uci set firewall.dns_masq='nat'
  uci set firewall.dns_masq.name='Masquerade-DNS'
  uci set firewall.dns_masq.family='ipv4'
  uci set firewall.dns_masq.src='lan'
  uci set firewall.dns_masq.dest_port='53'
  uci set firewall.dns_masq.proto='tcp udp'
  uci set firewall.dns_masq.target='MASQUERADE'
  uci set firewall.dns_masq.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dot_fwd_xcptn)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dot_fwd_xcptn"
  uci set firewall.dot_fwd_xcptn='rule'
  uci set firewall.dot_fwd_xcptn.name='Allow-DoT'
  uci set firewall.dot_fwd_xcptn.src='lan'
  uci set firewall.dot_fwd_xcptn.dest='wan'
  uci set firewall.dot_fwd_xcptn.dest_port='853'
  uci set firewall.dot_fwd_xcptn.proto='tcp udp'
  uci set firewall.dot_fwd_xcptn.target='ACCEPT'
  uci set firewall.dot_fwd_xcptn.family='ipv4'
  uci set firewall.dot_fwd_xcptn.ipset='dns_xcptn src'
  uci set firewall.dot_fwd_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dot_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dot_fwd"
  uci set firewall.dot_fwd='rule'
  uci set firewall.dot_fwd.name='Deny-DoT'
  uci set firewall.dot_fwd.src='lan'
  uci set firewall.dot_fwd.dest='wan'
  uci set firewall.dot_fwd.dest_port='853'
  uci set firewall.dot_fwd.proto='tcp udp'
  uci set firewall.dot_fwd.target='REJECT'
  uci set firewall.dot_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.doh ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.doh"
  echo -n > /etc/firewall.ipset.doh
fi
if [ "$(uci -q get firewall.doh)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh"
  uci set firewall.doh='ipset'
  uci set firewall.doh.name='doh'
  uci set firewall.doh.family='ipv4'
  uci set firewall.doh.storage='hash'
  uci set firewall.doh.match='ip'
  uci set firewall.doh.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.doh6 ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.doh6"
  echo -n > /etc/firewall.ipset.doh6
fi
if [ "$(uci -q get firewall.doh6)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh"
  uci set firewall.doh6='ipset'
  uci set firewall.doh6.name='doh6'
  uci set firewall.doh6.family='ipv6'
  uci set firewall.doh6.storage='hash'
  uci set firewall.doh6.match='ip'
  uci set firewall.doh6.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.ipsets_restore)" != "include" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.ipsets_restore"
  uci set firewall.ipsets_restore='include'
  uci set firewall.ipsets_restore.type='script'
  uci set firewall.ipsets_restore.path='/usr/sbin/ipsets-restore'
  uci set firewall.ipsets_restore.reload='0'
  uci set firewall.ipsets_restore.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /usr/sbin/ipsets-restore ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating script /usr/sbin/ipsets-restore"
  cat<<"END-RESTORE" > /usr/sbin/ipsets-restore
#!/bin/sh
for set in $(ipset -n list)
do
  if [ -f /etc/firewall.ipset.$set ]
  then
    ipset flush $set
    ipset -f /etc/firewall.ipset.$set restore
  fi
done
END-RESTORE
  chmod +x /usr/sbin/ipsets-restore
fi
if [ "$(uci -q get firewall.doh_fwd_xcptn)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh_fwd_xcptn"
  uci set firewall.doh_fwd_xcptn='rule'
  uci set firewall.doh_fwd_xcptn.name='Allow-DoH'
  uci set firewall.doh_fwd_xcptn.src='lan'
  uci set firewall.doh_fwd_xcptn.dest='wan'
  uci set firewall.doh_fwd_xcptn.dest_port='443'
  uci set firewall.doh_fwd_xcptn.proto='tcp udp'
  uci set firewall.doh_fwd_xcptn.family='ipv4'
  uci set firewall.doh_fwd_xcptn.ipset='dns_xcptn src'
  uci set firewall.doh_fwd_xcptn.target='ACCEPT'
  uci set firewall.doh_fwd_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.doh_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh_fwd"
  uci set firewall.doh_fwd='rule'
  uci set firewall.doh_fwd.name='Deny-DoH'
  uci set firewall.doh_fwd.src='lan'
  uci set firewall.doh_fwd.dest='wan'
  uci set firewall.doh_fwd.dest_port='443'
  uci set firewall.doh_fwd.proto='tcp udp'
  uci set firewall.doh_fwd.family='ipv4'
  uci set firewall.doh_fwd.ipset='doh dest'
  uci set firewall.doh_fwd.target='REJECT'
  uci set firewall.doh_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.doh6_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh6_fwd"
  uci set firewall.doh6_fwd='rule'
  uci set firewall.doh6_fwd.name='Deny-v6-DoH'
  uci set firewall.doh6_fwd.src='lan'
  uci set firewall.doh6_fwd.dest='wan'
  uci set firewall.doh6_fwd.dest_port='443'
  uci set firewall.doh6_fwd.proto='tcp udp'
  uci set firewall.doh6_fwd.family='ipv6'
  uci set firewall.doh6_fwd.ipset='doh6 dest'
  uci set firewall.doh6_fwd.target='REJECT'
  uci set firewall.doh6_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /usr/sbin/doh-ipsets-maintain ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating script /usr/sbin/doh-ipsets-maintain"
  cat<<"END-MAINTAIN" > /usr/sbin/doh-ipsets-maintain
#!/bin/sh

if [ "$(uci -q get firewall.doh)" = "ipset" ]
then
  if [ -f /tmp/doh-ipv4.txt ]
  then
    rm /tmp/doh-ipv4.txt
  fi
  curl -s -k -L https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-ipv4.txt > /tmp/doh-ipv4.txt
  if [ -f /tmp/doh-ipv4.txt ]
  then
    sed -e 's/\([^ ]*\) .*/add doh \1/' /tmp/doh-ipv4.txt > /etc/firewall.ipset.doh
    rm /tmp/doh-ipv4.txt
    ipset flush doh
    ipset -f /etc/firewall.ipset.doh restore
  fi
fi

if [ "$(uci -q get firewall.doh6)" = "ipset" ]
then
  if [ -f /tmp/doh-ipv6.txt ]
  then
    rm /tmp/doh-ipv6.txt
  fi
  curl -s -k -L https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-ipv6.txt > /tmp/doh-ipv6.txt
  if [ -f /tmp/doh-ipv6.txt ]
  then
    sed -e 's/\([^ ]*\) .*/add doh6 \1/' /tmp/doh-ipv6.txt > /etc/firewall.ipset.doh6
    rm /tmp/doh-ipv6.txt
    ipset flush doh6
    ipset -f /etc/firewall.ipset.doh6 restore
  fi
fi
END-MAINTAIN
  chmod +x /usr/sbin/doh-ipsets-maintain
fi
if [ $(grep doh-ipsets-maintain /etc/crontabs/root | wc -l) -eq 0 ]; then
  mm=$(awk 'BEGIN{srand();print int(rand()*59);}')
  hh=$(awk 'BEGIN{srand();print int(rand()*2)+3;}')
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Adding /usr/sbin/doh-ipsets-maintain cron job for Sunday $hh:$mm"
  echo "#$mm $hh * * 6 /usr/sbin/doh-ipsets-maintain" >> /etc/crontabs/root
fi

[ $SRV_firewall -gt 0 ] && uci commit firewall
echo 115@$(date +%H:%M:%S): Fix IP Route modals for FW 17.2
sed \
  -e 's/\.@\././' \
  -e '/objectName/,/addNamedObject/d' \
  -i /www/docroot/modals/iproutes-modal.lp

echo 120@$(date +%H:%M:%S): Fix default Telephony tab
# Default telephony tab is DECT!!! 
sed \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    if mmpbx_state == "1" then' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-info-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    else' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-global-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    end' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 120@$(date +%H:%M:%S): Remove extra FXS device from Telephony Codecs tab
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dialplan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp

echo 120@$(date +%H:%M:%S): Handle the Telephony card switch
sed \
  -e '/^local format/a \if ngx.var.request_method == "POST" then' \
  -e '/^local format/a \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/^local format/a \  if mmpbx_enable then' \
  -e '/^local format/a \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/^local format/a \    proxy.apply()' \
  -e '/^local format/a \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/^local format/a \  end' \
  -e '/^local format/a \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 120@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 120@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 120@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 120@$(date +%H:%M:%S): Add missing insert option on dial plan entries
sed \
  -e 's/registerMultiMap/registerNamedMultiMap/' \
  -e 's/modify", "remove/modify", "insert", "remove/' \
  -i /usr/share/transformer/mappings/uci/mmpbx.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -e 's| cellspacing="10%" cellpadding="10%" ||' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp

echo 135@$(date +%H:%M:%S): Fix duplicate ids
sed -e 's/ id="relaysetupcard_relayip"//g' -i /www/cards/018_relaysetup.lp

echo 135@$(date +%H:%M:%S): Add TCP Dump to Diagnostics
sed -e 's/    {"logviewer-modal.lp", T"Log Viewer"},/    {"logviewer-modal.lp", T"Log Viewer"},\n    {"diagnostics-tcpdump-modal.lp", T"TCP Dump"},/' -i /www/snippets/tabs-diagnostics.lp

echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e "s|Output Power|Adjust Output Power<span class='icon-question-sign' title='Increase or decrease radio output transmission power. Increasing transmission power is NOT recommended. It will cause more interference in neighboring channels, and reduce component lifetime by increasing heat generated.'></span>|" \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  [ "$DEBUG" = "V" ] && echo "150@$(date +%H:%M:%S): - Updating $f"
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
if [ -f /www/cards/*_cwmpconf.lp ]; then
  echo 150@$(date +%H:%M:%S): Removing CWMP card switch
  sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp
fi

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Add Mounted USB Devices to Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e 's/class = "span4"/style = "width:100%;"/' \
  -e '/dlna_name/d' \
  -e '/samba_name/d' \
  -e '/^local content /i\
local usb = {}\
local usbdev_data = proxy.getPN("sys.usb.device.", true)\
if usbdev_data then\
  local v\
  for _,v in ipairs(usbdev_data) do\
    local partitions = proxy.get(v.path .. "partitionOfEntries")\
    if partitions then\
      partitions = partitions[1].value\
      if partitions ~= "0" then\
        local partition = proxy.getPN(v.path .. "partition.", true)\
        usb[#usb+1] = {\
          product = proxy.get(v.path .. "product")[1].value,\
          size = proxy.get(partition[1].path .. "AvailableSpace")[1].value,\
        }\
      end\
    end\
  end\
end' \
  -e '/ngx.print(html)/i\
if #usb == 0 then\
  tinsert(html, ui_helper.createSimpleLight("0", T"No USB devices found", attributes))\
else\
  tinsert(html, ui_helper.createSimpleLight("1", format(N("%d USB Device found:","%d USB devices found:",#usb),#usb), attributes))\
  tinsert(html, T"<p class=\\"subinfos\\">")\
  local v\
  for _,v in pairs(usb) do\
    tinsert(html, format("<span class=\\"simple-desc\\"><i class=\\"icon-hdd status-icon\\"></i>&nbsp;%s [%s Free]</span>", v.product, v.size))\
  end\
  tinsert(html, T"</p>")\
end' \
  -i /www/cards/012_contentsharing.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/^            tinsert(html, "<\/fieldset>")/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -e '/DLNA name"/a\                tinsert(html, "</fieldset>")' \
  -i /www/docroot/modals/contentsharing-modal.lp


echo 155@$(date +%H:%M:%S): Enable or disable SAMBA service when file and printer sharing completely enabled or disabled
sed \
  -e '/if samba_available and type/i\
    if samba_available and type(post_data["samba_filesharing"]) == "userdata" then\
      local fs = untaint(post_data["samba_filesharing"])\
      local ps = proxy.get("uci.printersharing.config.enabled")\
      local svc_status\
      if not ps then\
        svc_status = fs\
      else\
        ps = string.untaint(ps[1].value)\
        if ps == fs then\
          svc_status = ps\
        elseif (ps == "0" and fs == "1") or (ps == "1" and fs == "0") then\
          svc_status = "1"\
        end\
      end\
      if svc_status then\
        local svc = proxy.get("uci.samba.samba.enabled")\
        if svc and svc[1].value ~= svc_status then\
          proxy.set("uci.samba.samba.enabled", svc_status)\
          proxy.apply()\
        end\
      end\
    end' \
  -i /www/docroot/modals/contentsharing-modal.lp
sed \
  -e '/proxy.apply/i\
  local ps = string.untaint(postArgs.printersharing_enabled)\
  local fs = proxy.get("uci.samba.samba.filesharing")\
  local svc_status\
  if not fs then\
    svc_status = ps\
  else\
    fs = string.untaint(fs[1].value)\
    if ps == fs then\
      svc_status = ps\
    elseif (ps == "0" and fs == "1") or (ps == "1" and fs == "0") then\
      svc_status = "1"\
    end\
  end\
  if svc_status then\
    local svc = proxy.get("uci.samba.samba.enabled")\
    if svc and svc[1].value ~= svc_status then\
      proxy.set("uci.samba.samba.enabled", svc_status)\
    end\
  end' \
  -i /www/docroot/modals/printersharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
[ -f /www/cards/*_natalghelper.lp ] && sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

echo 160@$(date +%H:%M:%S): Fix some responsive span widths
sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

echo 160@$(date +%H:%M:%S): Add theme processing
for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      [ "$DEBUG" = "V" ] && echo "160@$(date +%H:%M:%S): - Adding $LP theme style sheets to $f"
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      [ "$DEBUG" = "V" ] && echo "160@$(date +%H:%M:%S): - Adding $LP theme style sheets to $f"
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

if [ $ACROSS -eq 5 ]; then
  echo 160@$(date +%H:%M:%S): Allowing 5 cards across on wide screens
  sed \
    -e 's/\(@media screen and (min-width:1200px)\){/\1 and (max-width:1499px){/g' \
    -e '$a\
@media screen and (min-width:1500px){.row{margin-left:-30px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} [class*="span"]{float:left;min-height:1px;margin-left:30px;} .container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:1470px;} .span12{width:1470px;} .span11{width:1370px;} .span10{width:1270px;} .span9{width:1170px;} .span8{width:1070px;} .span7{width:970px;} .span6{width:870px;} .span5{width:770px;} .span4{width:670px;} .span3{width:570px;} .span2{width:470px;} .span1{width:370px;} .offset12{margin-left:1380px;} .offset11{margin-left:1280px;} .offset10{margin-left:1180px;} .offset9{margin-left:1080px;} .offset8{margin-left:980px;} .offset7{margin-left:880px;} .offset6{margin-left:780px;} .offset5{margin-left:680px;} .offset4{margin-left:580px;} .offset3{margin-left:480px;} .offset2{margin-left:380px;} .offset1{margin-left:280px;} .row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.564102564102564%;*margin-left:2.5109110747408616%;} .row-fluid [class*="span"]:first-child{margin-left:0;} .row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.564102564102564%;} .row-fluid .span12{width:100%;*width:99.94680851063829%;} .row-fluid .span11{width:91.45299145299145%;*width:91.39979996362975%;} .row-fluid .span10{width:82.90598290598291%;*width:82.8527914166212%;} .row-fluid .span9{width:74.35897435897436%;*width:74.30578286961266%;} .row-fluid .span8{width:65.81196581196582%;*width:65.75877432260411%;} .row-fluid .span7{width:57.26495726495726%;*width:57.21176577559556%;} .row-fluid .span6{width:48.717948717948715%;*width:48.664757228587014%;} .row-fluid .span5{width:40.17094017094017%;*width:40.11774868157847%;} .row-fluid .span4{width:31.623931623931625%;*width:31.570740134569924%;} .row-fluid .span3{width:23.076923076923077%;*width:23.023731587561375%;} .row-fluid .span2{width:14.52991452991453%;*width:14.476723040552828%;} .row-fluid .span1{width:5.982905982905983%;*width:5.929714493544281%;} .row-fluid .offset12{margin-left:105.12820512820512%;*margin-left:105.02182214948171%;} .row-fluid .offset12:first-child{margin-left:102.56410256410257%;*margin-left:102.45771958537915%;} .row-fluid .offset11{margin-left:96.58119658119658%;*margin-left:96.47481360247316%;} .row-fluid .offset11:first-child{margin-left:94.01709401709402%;*margin-left:93.91071103837061%;} .row-fluid .offset10{margin-left:88.03418803418803%;*margin-left:87.92780505546462%;} .row-fluid .offset10:first-child{margin-left:85.47008547008548%;*margin-left:85.36370249136206%;} .row-fluid .offset9{margin-left:79.48717948717949%;*margin-left:79.38079650845607%;} .row-fluid .offset9:first-child{margin-left:76.92307692307693%;*margin-left:76.81669394435352%;} .row-fluid .offset8{margin-left:70.94017094017094%;*margin-left:70.83378796144753%;} .row-fluid .offset8:first-child{margin-left:68.37606837606839%;*margin-left:68.26968539734497%;} .row-fluid .offset7{margin-left:62.393162393162385%;*margin-left:62.28677941443899%;} .row-fluid .offset7:first-child{margin-left:59.82905982905982%;*margin-left:59.72267685033642%;} .row-fluid .offset6{margin-left:53.84615384615384%;*margin-left:53.739770867430444%;} .row-fluid .offset6:first-child{margin-left:51.28205128205128%;*margin-left:51.175668303327875%;} .row-fluid .offset5{margin-left:45.299145299145295%;*margin-left:45.1927623204219%;} .row-fluid .offset5:first-child{margin-left:42.73504273504273%;*margin-left:42.62865975631933%;} .row-fluid .offset4{margin-left:36.75213675213675%;*margin-left:36.645753773413354%;} .row-fluid .offset4:first-child{margin-left:34.18803418803419%;*margin-left:34.081651209310785%;} .row-fluid .offset3{margin-left:28.205128205128204%;*margin-left:28.0987452264048%;} .row-fluid .offset3:first-child{margin-left:25.641025641025642%;*margin-left:25.53464266230224%;} .row-fluid .offset2{margin-left:19.65811965811966%;*margin-left:19.551736679396257%;} .row-fluid .offset2:first-child{margin-left:17.094017094017094%;*margin-left:16.98763411529369%;} .row-fluid .offset1{margin-left:11.11111111111111%;*margin-left:11.004728132387708%;} .row-fluid .offset1:first-child{margin-left:8.547008547008547%;*margin-left:8.440625568285142%;} input,textarea,.uneditable-input{margin-left:0;} .controls-row [class*="span"]+[class*="span"]{margin-left:30px;} input.span12,textarea.span12,.uneditable-input.span12{width:1156px;} input.span11,textarea.span11,.uneditable-input.span11{width:1056px;} input.span10,textarea.span10,.uneditable-input.span10{width:956px;} input.span9,textarea.span9,.uneditable-input.span9{width:856px;} input.span8,textarea.span8,.uneditable-input.span8{width:756px;} input.span7,textarea.span7,.uneditable-input.span7{width:656px;} input.span6,textarea.span6,.uneditable-input.span6{width:556px;} input.span5,textarea.span5,.uneditable-input.span5{width:456px;} input.span4,textarea.span4,.uneditable-input.span4{width:356px;} input.span3,textarea.span3,.uneditable-input.span3{width:256px;} input.span2,textarea.span2,.uneditable-input.span2{width:156px;} input.span1,textarea.span1,.uneditable-input.span1{width:56px;} .thumbnails{margin-left:-30px;} .thumbnails>li{margin-left:30px;} .row-fluid .thumbnails{margin-left:0;}}\
@media screen and (min-width:1500px){.modal{width:1470px;margin:-290px 0 0 -735px;} .tooLongTitle p{width:190px;} .smallcard:hover .tooLongTitle p{width:160px;} .simple-desc{margin-left:0px;}}\
@media screen and (min-width:1500px){.card-visibility-switch{float:left;width:20%;}}' \
    -i /www/docroot/css/responsive.css
fi

case "$CHART_CARDS" in 
  n)  echo 160@$(date +%H:%M:%S): Removing all chart cards; rm /www/cards/000_*.lp;;
  s)  echo 160@$(date +%H:%M:%S): Removing individual chart cards; rm $(ls /www/cards/000_*.lp | grep -v 000_Charts);;
  i)  echo 160@$(date +%H:%M:%S): Removing summary chart card; rm /www/cards/000_Charts.lp;;
esac

echo 165@$(date +%H:%M:%S): Deploy theme files
echo 'QlpoOTFBWSZTWQrch4cAcC9/////////////////////////////////////////////4IePviSI
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
hw==' | base64 -d | bzcat | tar -xf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

echo 166@$(date +%H:%M:%S): Fixing card backgrounds
sed \
  -e '$ a .card_bg{position:relative;z-index:1;}' \
  -e '$ a .card_bg:after{color:#EAEAEA;font-family:FontAwesome;content:attr(data-bg-text);display:block;font-size:110px;line-height:1;position:absolute;bottom:-5px;right:5px;}' \
  -i /www/docroot/css/gw.css
echo 170@$(date +%H:%M:%S): Adding management tabs
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  [ "$DEBUG" = "V" ] && echo "170@$(date +%H:%M:%S): - Updating $f"
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -f /etc/init.d/cwmpd ]
then
  echo 180@$(date +%H:%M:%S): CWMP found - Leaving in GUI and removing switch from card
  sed -e 's/switchName, content.*,/nil, nil,/' -i /www/cards/090_cwmpconf.lp
else
  echo 180@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 180@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  [ -f /www/cards/010_fon.lp ] && rm /www/cards/010_fon.lp
  [ -f /www/docroot/modals/fon-modal.lp ] && rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 180@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 180@$(date +%H:%M:%S): Checking modal visibility
for f in $(find /www/docroot/modals -type f | grep -vE \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo "180@$(date +%H:%M:%S): - Enabling $MODAL"
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Creating Rule $RULE: target=/modals/$MODAL"
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Fixing Rule $RULE: target=/modals/$MODAL Setting role to admin"
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Checking ajax visibility
for f in $(find /www/docroot/ajax -type f | grep -vE 'internet.lua|wirelesscard.lua')
do
  AJAX=$(basename $f)
  uci show web | grep -q "/ajax/$AJAX"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE="$(basename $f .lua | sed -e 's/-//g')ajax"
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/ajax/$AJAX" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Creating Rule $RULE: target=/ajax/$AJAX"
    echo "180@$(date +%H:%M:%S): - Enabling $AJAX"
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/ajax/$AJAX
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Fixing Rule $RULE: target=/ajax/$AJAX Setting role to admin"
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Checking configured web rules exist
for c in $(uci show web | grep '^web\..*\.target=' | grep -vE 'dumaos|homepage')
do 
  f=/www/docroot$(echo "$c" | cut -d"'" -f2)
  if [ ! -f "$f" ]; then
    RULE=$(echo $c | cut -d. -f2)
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Deleting rule $RULE for missing target $f"
    uci -q delete web.$RULE
    uci -q del_list web.ruleset_main.rules=$RULE
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ "$CARD" = "016_speedservice.lp" ]; then
    rm $CARDFILE
    if [ -n "$CARDRULE" ]; then
      [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Deleting rule $RULE for missing target $f"
      uci -q delete web.${CARDRULE}
    fi
    continue
  fi
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]; then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]; then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Card Rule $CARDRULE: card=$CARD hide=0"
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.hide='0'
    if [ -n "$MODAL" ]; then
      uci set web.${CARDRULE}.modal="$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)"
    fi
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
done

uci commit web

grep -q '^function M.getRandomKey' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing getRandomKey post_helper function
  sed -e '/^return M$/i\
--Generate random key for new rule\
--@return 16 digit random key.\
function M.getRandomKey()\
  local bytes\
  local key = ("%02X"):rep(16)\
  local fd = io.open("/dev/urandom", "r")\
  if fd then\
    bytes = fd:read(16)\
    fd:close()\
  end\
  return key:format(bytes:byte(1, 16))\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateStringIsIPv4' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateStringIsIPv4 post_helper function
  sed -e '/^return M$/i\
-- Validate the given IP address is a valid IPv4 address.\
-- @string value The IPv4 address.\
-- @return true given IP address is valid IPv4 address, nil+error message.\
function M.validateStringIsIPv4(ip)\
  local chunks = {ip:match("^(%d+)%.(%d+)%.(%d+)%.(%d+)$")}\
  if #chunks == 4 then\
    for _,v in pairs(chunks) do\
      if tonumber(v) > 255 then\
        return nil, "Invalid IPv4 address"\
      end\
    end\
    return true\
  end\
  return nil, "Invalid IPv4 address"\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.reservedIPValidation' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing reservedIPValidation post_helper function
  sed -e '/^return M$/i\
-- Validate the given IP address is not in the Reserved IP list.\
-- @string value The IPv4 address.\
-- @return true valid IP address not present in Reserved IP list, nil+error message.\
function M.reservedIPValidation(ip)\
  if inet.isValidIPv4(untaint(ip)) then\
    local reservedIPList = proxy.get("uci.dhcp.host.")\
    reservedIPList = content_helper.convertResultToObject("uci.dhcp.host.", reservedIPList) or {}\
    for _, v in ipairs(reservedIPList) do\
      if match(v.name, "^ReservedStatic") and v.mac == "" then\
        if ip == v.ip then\
          return nil, T"The IP is internally used for other services."\
        end\
      end\
    end\
    return true\
  end\
  return nil, T"Invalid input."\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateDMZ' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateDMZ post_helper function
  sed -e '/^return M$/i\
--- Validator that will check whether the given IP address is in Network Range.\
--- Validate the given IP address is not in the Reserved IP list.\
-- @return true or nil+error message\
function M.validateDMZ(value, object)\
  local network = {\
    gateway_ip = "uci.network.interface.@lan.ipaddr",\
    netmask = "uci.network.interface.@lan.netmask",\
  }\
  if object.DMZ_enable == "1" then\
    content_helper.getExactContent(network)\
    local isDestIP, errormsg = M.getValidateStringIsDeviceIPv4(network.gateway_ip, network.netmask)(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
    isDestIP, errormsg = M.reservedIPValidation(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
    isDestIP, errormsg = M.validateQTN(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
  end\
  return true\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateLXC' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateLXC post_helper function
  sed -e '/^return M$/i\
--- Validate the given IP/MAC is LXC''s IP/MAC\
-- @param value IP/MAC address\
-- @return true if the value is not an LXC''s IP/MAC Address\
-- @return nil+error message if the given input is LXC''s IP/MAC Address\
function M.validateLXC(value)\
  if not value then\
    return nil, "Invalid input"\
  end\
  local lxcMac = { mac = "uci.env.var.local_eth_mac_lxc" }\
  local lxcAvailable = content_helper.getExactContent(lxcMac)\
  if not lxcAvailable then\
    return true\
  end\
  if M.validateStringIsMAC(value) then\
    if lower(lxcMac.mac) == lower(value) then\
      return nil, format(T"Cannot assign, %s in use by system.", value)\
    end\
    return true\
  elseif inet.isValidIPv4(untaint(value)) then\
    local lxcIP = content_helper.getMatchedContent("sys.proc.net.arp.",{ hw_address = lower(lxcMac.mac)})\
    for _, v in ipairs(lxcIP) do\
      if v.ip_address == value then\
        return nil, format(T"Cannot assign, %s in use by system.", value)\
      end\
    end\
    return true\
  end\
  return nil, T"Invalid input."\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ -z "$FILE" ]
  then
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S):  - Removing obsolete configuration $RULE"
    uci delete $RULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
  elif [ "$CARD" != "$FILE" ]
  then
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

echo 195@$(date +%H:%M:%S): Checking configured cards exist
for c in $(uci show web | grep '^web\.card_.*\.card=')
do 
  f=/www/cards/$(echo "$c" | cut -d"'" -f2)
  if [ ! -f "$f" ]; then
    CARDRULE=$(echo $c | cut -d. -f2)
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S): - Deleting card configuration $CARDRULE for missing card $f"
    uci -q delete web.$CARDRULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
done

uci commit web

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  MKTING_VERSION=$(uci get version.@version[0].marketing_name)
  echo BLD@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.09.02 for FW Version 17.2 ($MKTING_VERSION)\]/" -i $l
  done
  echo BLD@$(date +%H:%M:%S): Auto-refreshing browser cache
  for l in $(grep -lrE "['\"][^'\"]+\.(cs|j)s['\"]" /www/cards /www/docroot /www/snippets | grep -v -E '.js$|.sh$|.json$' 2>/dev/null)
  do
    sed -e "s/\(\.css\)\(['\"]\)/\1?-2021.09.02@10:44\2/g" -e "s/\(\.js\)\(['\"]\)/\1?-2021.09.02@10:44\2/g" -i $l
  done
fi

apply_service_changes
echo 210@$(date +%H:%M:%S): Done!!!
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
