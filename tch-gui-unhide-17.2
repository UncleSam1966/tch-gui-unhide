#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 17.2 - Release 2021.10.24
RELEASE='2021.10.24@10:14'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
tmpTITLE="$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)"
echo $tmpTITLE | grep -q ngx.print
if [ $? -eq 1 ]; then
  TITLE="$tmpTITLE"
else
  TITLE=""
fi
unset tmpTITLE

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

grep -q '@media screen and (min-width:1200px) and (max-width:1499px){' /www/docroot/css/responsive.css
if [ $? -eq 0 ]; then
  ACROSS=5
else
  ACROSS=4
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

if [ -z "$INSTALLED_RELEASE" ]; then
  CHART_CARDS='i'
elif [ -e /www/cards/000_Charts.lp ]; then
  CHART_CARDS='s'
elif [ -e /www/cards/000_CPU.lp ]; then
  CHART_CARDS='i'
else
  CHART_CARDS='n'
fi

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n

if [ -z "$INSTALLED_RELEASE" -a -f .defaults.tch-gui-unhide ]; then
  . ./.defaults.tch-gui-unhide
fi

if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_cron=0
SRV_dropbear=0
SRV_firewall=0
SRV_nginx=0
SRV_power=0
SRV_system=0
SRV_transformer=0

check_pwr_setting() {
  section="$1"
  option="$2"
  text="$3"
  if [ -z "$(uci -q get power.$section.$option)" ]; then
    pwrctl show | grep "$text" | grep -q DISABLED
    value=$?
    [ "$DEBUG" = "V" ] && echo "001@$(date +%H:%M:%S): - power.$section.$option=$value"
    uci set power.$section.$option="$value"
    SRV_power=$(( $SRV_power + 1 ))
  fi
}

apply_service_changes() {
  echo 001@$(date +%H:%M:%S): Applying service changes if required...
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop >/dev/null 2>&1
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start >/dev/null 2>&1
  fi
  [ $SRV_cron -gt 0 ] && /etc/init.d/cron restart
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
  [ $SRV_firewall -gt 0 ] && /etc/init.d/firewall reload 2> /dev/null

  echo 001@$(date +%H:%M:%S): Applying power settings...
  if [ -z "$(uci -q get power.cpu)" ];then
    uci set power.cpu='cpu'
  fi

  if [ -z "$(uci -q get power.cpu.cpuspeed)" ]; then
    case "$(pwrctl show | grep "CPU Speed Divisor" | tr -s " " | cut -d" " -f4)" in
      1) uci set power.cpu.cpuspeed="1";;
      2) uci set power.cpu.cpuspeed="2";;
      4) uci set power.cpu.cpuspeed="4";;
      5) uci set power.cpu.cpuspeed="8";;
      *) uci set power.cpu.cpuspeed="256";;
    esac
    SRV_power=$(( $SRV_power + 1 ))
  fi
  check_pwr_setting "cpu" "wait" "CPU Wait"
  check_pwr_setting "ethernet" "ethapd" "Auto Power"
  check_pwr_setting "ethernet" "eee" "Energy Efficient Ethernet"
  check_pwr_setting "ethernet" "autogreeen" "AutoGreeen"
  check_pwr_setting "ethernet" "dgm" "Deep Green Mode"
  [ $SRV_power -gt 0 ] && uci commit power
}

DEBUG=""
RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'
XTRAS=""
UPDATE_XTRAS=n

FILENAME=$(basename $0)

usage() {
  echo "Optional parameters:"
  echo " Control Options:"
  echo " -d y|n           : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
  echo "                     (Default is current setting)"
  echo " -f y|n           : Enable (y) or Disable (n) firmware upgrade in the web GUI"
  echo "                     (Default is current setting)"
  echo " -p y|n           : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
  echo "                     (Default is current setting i.e (n) by default)"
  echo " -v y|n           : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
  echo "                     (Default is current setting or (y) for first time installs)"
  echo " -x <feature>     : Download the specified tch-gui-unhide-xtra.<feature> script."
  echo "                     Specify -x<feature> multiple times to download multiple scripts"
  echo "                     NOTE: This does NOT download or install the feature pre-requisites!"
  echo "                           You must do that BEFORE running this script!"
  echo " -X               : Download the latest version of any existing extra feature scripts."
  echo " Theme Options:"
  echo " -a 4|5           : Set the number of cards across on screen width greater than 1200px"
  echo "                     (Default is current setting, or 4 for first time installs)"
  echo " -c b|o|g|p|r|m|M : Set the theme highlight colour"
  echo "                     b=blue o=orange g=green p=purple r=red m=monochrome M=monochrome (with monochrome charts)"
  echo "                     (Default is current setting, or (m) for light theme or (b) for night theme)"
  echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
  echo "                     (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
  echo " -i y|n           : Show (y) or hide (n) the card icons"
  echo "                      (Default is current setting, or (n) for light theme and (y) for night theme)"
  echo " -l y|n           : Keep the Telstra landing page (y) or de-brand the landing page (n)"
  echo "                      (Default is current setting, or (n) if no theme has been applied)"
  echo " -t l|n|t|m       : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
  echo "                      (Default is current setting, or Telstra Classic if no theme has been applied)"
  echo " -C n|s|i         : Keep or remove chart cards"
  echo "                     n=No Chart Cards will be available"
  echo "                     s=Only the Summary Chart Card will be available"
  echo "                     i=Only the Individual Chart Cards will be available (default)"
  echo " -T               : Apply theme ONLY - bypass all other processing"
  echo " Update Options:"
  echo " -u               : Check for and download any changes to this script (may be newer than latest release version)"
  echo "                      When specifying the -u option, it must be the ONLY parameter specifed."
  if [ $WRAPPER = y ]; then
  echo " -U               : Download the latest release, including utility scripts (will overwrite all existing script versions)."
  echo "                      After download, tch-gui-unhide will be automatically executed."
  fi
  echo " Miscellaneous Options:"
  echo " -r               : Restore changed GUI files to their original state (config changes are NOT restored)"
  echo "                     When specifying the -r option, it must be the ONLY parameter specifed."
  echo " -y               : Bypass confirmation prompt (answers 'y')"
  echo " -V               : Show the release number of this script, the current installed release, and the latest available release on GitHub"
  echo 
  echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
  echo "         between executions (unless you execute with the -r option, which will remove all state information)"
  echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
  echo
  exit
}

while getopts :a:c:d:f:h:i:l:p:rt:uv:x:yC:TVWX-: option
do
 case "${option}" in
   -) case "${OPTARG}" in 
        debug)  DEBUG="V";; 
        *)      usage;; 
      esac;;
   a) if [ "${OPTARG}" -eq 4 -o "${OPTARG}" -eq 5 ]; then ACROSS=$OPTARG; else echo "ERROR: Cards across must be either 4 or 5"; exit 2; fi;;
   c) case "$(echo ${OPTARG} | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        m) COLOR=monochrome;;
        M) COLOR=MONOCHROME;;
        *) echo "ERROR: Unknown color option - $OPTARG"; exit 2;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n'; exit 2;; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n'; exit 2;; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   x) XTRAS="${XTRAS} ${OPTARG}";;
   C) case "${OPTARG}" in
        n|s|i) CHART_CARDS="$OPTARG";; 
        *) echo "ERROR: Unknown chart card option - $OPTARG"; exit 2;;
      esac;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   X) UPDATE_XTRAS=y;;
   ?) usage;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  # File deployed to incorect location by releases prior to 2021.02.06
  if [ -f /usr/share/transformer/mappings/iperf.map ]; then
    rm /usr/share/transformer/mappings/iperf.map
  fi
  # Need to remove existing version or it doesn't get replaced?? 
  if [ -f /usr/sbin/traffichistory.lua ]; then
    if [ "$1" = "V" ]; then
      echo 010@$(date +%H:%M:%S): Removing file /usr/sbin/traffichistory.lua
    fi
    rm /usr/sbin/traffichistory.lua
  fi
  grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
  if [ $? -eq 0 ]; then
    sed -e '/traffichistory.lua/d' -i /etc/crontabs/root
    SRV_cron=$(( $SRV_cron + 1 ))
  fi
  # Add individual files to be restored here
  for t in /etc/init.d/power /usr/lib/lua/web/post_helper.lua
  do
    s=/rom$t
    if [ -f $s ]; then
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        echo 010@$(date +%H:%M:%S): Restoring file $t
        cp -f -p "$s" "$t"
      fi
    fi
  done
  # Add directories to be restored here
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      t=$(echo "$s" | cut -c5-)
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for f in /etc/tch-gui-unhide.ignored_release /etc/tch-gui-unhide.theme
  do
    if [ -f "$f" ]
    then
      echo 019@$(date +%H:%M:%S): Removing $f
      rm "$f"
    fi
  done
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      echo 019@$(date +%H:%M:%S): Removing empty directory $d
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ -n "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ -n "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  sed -e '/lua_shared_dict *TGU_/d' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
FW_BASE=$(uci get version.@version[0].marketing_version)
if [ "$FW_BASE" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $FW_BASE firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
  echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
  echo "030@$(date +%H:%M:%S):  - Preserve the password files and SSH configuration to prevent root loss on RTFD"
if [ $FIX_CFG_PORT = y ]; then
  echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
  if [ "$FW_UPGRD" = "1" ]; then
    echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
  else
    echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
  fi
fi
if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
  else
    echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
  fi
fi
if [ $FIX_PARENT_BLK = y ]; then
  echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
  echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
  echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - Pretty up the GUI screens a bit"
echo "030@$(date +%H:%M:%S):  - Apply the $THEME theme with $COLOR highlights and $ICONS card icons"
echo "030@$(date +%H:%M:%S):  - Allow $ACROSS cards across the page on wide screens"
case "$CHART_CARDS" in 
  n)  echo "030@$(date +%H:%M:%S):  - All chart cards will be removed";;
  s)  echo "030@$(date +%H:%M:%S):  - Only the Summary Chart Card will be available";;
  i)  echo "030@$(date +%H:%M:%S):  - The Individual Chart Cards will be available";;
esac
if [ -f /www/docroot/landingpage.lp -a $KEEPLP = n ]; then
  echo "030@$(date +%H:%M:%S):  - Theme and de-brand the Telstra Landing Page"
fi
if [ -n "$TITLE" ]; then
  echo "030@$(date +%H:%M:%S):  - Set the browser tabs titles to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
  echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
  echo "030@$(date +%H:%M:%S): New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
  echo "030@$(date +%H:%M:%S): New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi
if [ -n "$XTRAS" ]; then
  echo "030@$(date +%H:%M:%S): These extra feature scripts will be downloaded and applied (if the pre-requisites are met):"
  for x in $XTRAS; do
  echo "030@$(date +%H:%M:%S):  - tch-gui-unhide-xtra.$x"
  done
fi
if [ "$UPDATE_XTRAS" = y ]; then
  echo "030@$(date +%H:%M:%S): Any existing extra feature scripts will be updated to the latest version"
else
  echo "030@$(date +%H:%M:%S): Any existing extra feature scripts will NOT be updated to the latest version"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

grep -q -E "lua_shared_dict *TGU_CPU" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for CPU calculations
  sed -e '/^http/a\    lua_shared_dict TGU_CPU 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

grep -q -E "lua_shared_dict *TGU_MbPS" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for throughput calculations
  sed -e '/^http/a\    lua_shared_dict TGU_MbPS 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

grep -q -E "lua_shared_dict *TGU_Theme" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for theme
  sed -e '/^http/a\    lua_shared_dict TGU_Theme 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

echo 040@$(date +%H:%M:%S): Preserving password files and SSH configuration to prevent root loss on RTFD
for f in /etc/passwd /etc/shadow /etc/config/dropbear /etc/dropbear/* /etc/rc.d/*dropbear
do
  grep -q -E "^$f$" /etc/rtfd_persistent_filelist.conf
  if [ $? -eq 1 ]
  then
    echo "$f">>/etc/rtfd_persistent_filelist.conf
  fi
done

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  MODALRULE=""
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]; then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  if [ -n "$MODAL" ]; then
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    if [ -n "$MODALRULE" -a -n "$(uci -q get web.$MODALRULE.roles | grep -v -E 'admin|guest')" ]; then
      echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
      HIDDEN=1
      uci add_list web.$MODALRULE.roles='admin'
      SRV_nginx=$(( $SRV_nginx + 1 ))
    fi
  elif [ "$CARDRULE" = "card_CPU" ]; then
    MODALRULE='gatewaymodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_gateway.hide)
  elif [ "$CARDRULE" = "card_RAM" ]; then
    MODALRULE='gatewaymodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_gateway.hide)
  elif [ "$CARDRULE" = "card_WANDown" ]; then
    MODALRULE='broadbandmodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_broadband.hide)
  elif [ "$CARDRULE" = "card_WANUp" ]; then
    MODALRULE='broadbandmodal'
    [ -z "$HIDDEN" ] && HIDDEN=$(uci -q get web.card_broadband.hide)
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]; then
    HIDDEN=0
  fi
  [ "$DEBUG" = "V" ] && echo "050@$(date +%H:%M:%S): - Card Rule $CARDRULE: card=$(basename $CARDFILE) hide=$HIDDEN modal=$MODALRULE"
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  if [ -z "$MODALRULE" ]; then
    uci -q delete web.${CARDRULE}.modal
  else
    uci set web.${CARDRULE}.modal="$MODALRULE"
  fi
  SRV_nginx=$(( $SRV_nginx + 1 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo BLD@$(date +%H:%M:%S): Deploying modified GUI code
echo 'QlpoOTFBWSZTWQBR5pUBulr/////VWP///////////////8UXO3Yv6DcSxhWsaRJnDdYY4A+er28
b73AnopSi85X0wPL3b2wD1o2t9zUUrz77npSCsbQRhMqqvWhRuzitRfcN72Ohfbvffb2CuRpQey1
aoED29cqqlKCXu3159Z9R9D26s691KCbfTuzffWdzM66odvYY+VmBnze272akp3s+ruuB8pX20BV
AJ55Cn1qvXd728LruIymBTw9D2rbUO914de97vN3ejRQ3hqr0WMM26Zbvd6h7G2XTezAkAPAAAHo
AF0C+4Hy+1bW2UAl5tR9N7k93ruHp7zXnsdFPPc+d76988+3e9fe57zu+XfAUvd9z3fffQ+9vt12
1eOsuotbdW283e92d66589X0e97Kb7Dt9yzD182M83jZdx0Tr09sduNzuTvHioHarX24r3s7sDjv
nvY6mu88vZ69x6r1TeAPevrq8+Pve9vZ4AGih1IkAG26b315O73oAHh7AH0GqUMUi1ubC9MoBRyA
AAAB98946fRQ+OXvvruz3w+gAA+PfN61AJ8970faZCpBSlpi29bsvZusBSq+A9uq7PJz758XV33U
9qqTve8i7vvX2re31y6ptPdp7nfXh7PHfWORPdT7HNHcPQ3c7rQBOYGgd2DQVQclmbLAKx2721eb
KemonvZyhCHoMQX3jcNYVr1bjthi2wpCAAAAEjOYD47tHk8APTpu4vLd28SkpQHqnbG2AHt1vvvB
w9vX27nzKruu4+7vD18+3cGrwe9rba29uRi3p3dMdWe3CuoSACC6ZGwOnTpQ07ncqJICUgEhQKba
7DL77A9unNwvqOCRX2WGrBm2SNC9uLvSvu2w+fFvfc+731vtw+a2dtUPYyavThrq6r66ro3TnYW7
t2Xu70wvIUJe9nbul7effPc98tztrp1UOFgpdartr3zeq9oDaUDtrRvJhd73oGDsw+j77duKu9de
q9tT1t9nb3k+eST199vRV9N7GlSJ4HXu9NDIlKo7NVyaoVVFbLAxVPd13r2rxw8mbufc733dfHp3
fZueQU+0q0V9GE9GqqREoovWJAAUT777z1vB9x5VCU9PMLND6xfTu9bUegBoAAPHqdzd0Az318Hg
AA5KAUpQopVQGxq9eZveuZ3PEq509aFefN44svg7d7re897eqdBXecO3YXPc+7PvtvbVAr0vs+eZ
923MevvsAb7bqz15dCvXp9F9ui+e+n18p52N7d7u983p1Xlz59c++3y23m93o+qcQ3WKBdnE8Sbu
650AD1d1vaO310JCfW9O3Oeu71C7N7Dr7c77fR73dq973fdfL2Gbd989AOsQB3fLfDvm+27fXd12
wu3duKVE3m6rsLvc6PmHw+3avu8Yn0772j3i+8eo1Hnr3vX2x1bW1lNvvj291fLy29PV33zvb63X
Y1ty9S+77r7vue7VPR4496zsfc0gdywEu1zp26dcnNrh23Drr7t3rB21rHQEd24dBh2bK6DW466y
yDuzpbd3cDiFOjdge5nr3Lre7vK8VfL30+7NKaLS83071Zdte+1THet2H31b6TtddlFbtTQbd130
xx757m93QpWe71q7C2b2dbru3YoGo7KrRwkKkQpJPfdz3ru7t272e9JrGwXzTjpyhLcdwC+u99OU
n2ZZWvS67lKdtXY13bubXbIDl8K2G1aZAgAAk2wgqoCX0zs1QNmkPPeeeaE7d7dz7uurNUvbtnHR
j7uGc9ntj7ai+fd18Kl63farUu4J62GANbNvdPtvlsm2D6s3WOQdu33nnrb0yGGXOoYqXOa8el3O
m5lttplPO3dzlHecjYNI1j3hts853QABwuRbENk++772Bo731feMGNvlundksBbmMdu6w6pDrDXV
W3XY3Pc3Kop6G26AaF153E5tp6oKCIoNHbPeM961t3Tdz729bIBlTrlrbu07d2EHd8+d0Brd8+q8
PQn33w+qKpQF9e5192dZWBE6U1IdxsXdZZ3jY8Pe++6e9s6+tu4HQC7ScNqeu82zZm22e9LelerW
aZ4e6Zjp7VuYBSO2V5os++y2t0nbL7ZPtxdLeNAPQe4SCeTNLV27qdY0asNdBj2ADFQqqbvPapTM
r3fffe1vOrenfdw67aNNsAA+u7DPexTqDb3a27cat11HAKawSVUPrdsSrh7uuK21sdWdW5jrvdo+
ulO2N93zCejG71tHoodADoR20da4kq3NVLNI6AGlNCqOgdHDO9d6nqvOfTbXt7fRam2R2N1WqtsD
WIBru3OwHQdaKvt60bqW9dO53O7HQtarTIJbb7d7PSsPhGbVK92sLre7jY3Xt3QpvdQY+ne2ezd3
fe9etPd9vXptXhnrXsSeZLOqUKFFFA6z6FYvHZd6+ue3pkfO2Zta23I3Hc3buOlOprh7TZ7nPOXr
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
ChIACjzSoA==' | base64 -d | bzcat | tar -xf - -C /

if [ "$UPDATE_XTRAS" = y ]; then
  XTRAS=$(echo $XTRAS $(ls tch-gui-unhide-xtra.* 2>/dev/null | cut -d. -f2 | xargs) | tr ' ' "\n" | sort -u | xargs)
fi

if [ -n "$XTRAS" ]; then
  for x in $XTRAS; do
    echo 060@$(date +%H:%M:%S):  Attempting to download tch-gui-unhide-xtra.${x}...
    curl -skLO https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/extras/tch-gui-unhide-xtra.${x}
    if [ "$(cat tch-gui-unhide-xtra.${x})" = "404: Not Found" ]; then
      rm tch-gui-unhide-xtra.${x}
      echo 060@$(date +%H:%M:%S):  ERROR - tch-gui-unhide-xtra.${x} not found?
    fi
  done
fi

for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
do
  chmod +x $s
  echo -n 060@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
  . ./$s
done

echo 066@$(date +%H:%M:%S): Fix QoS card for 17.2 FW
sed \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/cards/008_qos.lp

echo 066@$(date +%H:%M:%S): Fix QoS classify modal for 17.2 FW
sed \
  -e 's/uci_classify_path\.\."@."/uci_classify_path/' \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/docroot/modals/qos-classify-modal.lp

echo 066@$(date +%H:%M:%S): Remove QoS Upload Shapers tab \(Not supported on 17.2 FW\)
if [ -f /www/docroot/modals/qos-swshaper-modal.lp ]; then
  rm /www/docroot/modals/qos-swshaper-modal.lp
fi
sed \
  -e '/qos-swshaper-modal.lp/d' \
  -i /www/snippets/tabs-qos.lp

echo 070@$(date +%H:%M:%S): Creating QoS Reclassify Rules modal
sed \
  -e 's/\(classify[\.-_%]\)/re\1/g' \
  -e 's/Classify/Reclassify/' \
  /www/docroot/modals/qos-classify-modal.lp > /www/docroot/modals/qos-reclassify-modal.lp

echo 075@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  -e 's|@wwan.up")\[1\].value|@wwan.up")|' \
  -e 's|if wwan_up|if wwan_up and wwan_up[1].value|' \
  -e 's/count == 5/count < 5/' \
  -e '/ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)/,/^\s*$/d' \
  -e '/proxy.set("rpc.system.lock.free", "0")/i end' \
  -e 's/\(iface_total\[v.iface  .. "_" .. direct\]\)/(tonumber(string.untaint(\1)) or 0)/' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

# Initial invocation of transformer code will fail if history directory does not exist
if [ ! -d /root/trafficmon/history ]; then
  echo 075@$(date +%H:%M:%S): Create directory to retain traffic monitor daily history
  mkdir -p /root/trafficmon/history
fi
if [ ! -f /root/trafficmon/history/.wan_rollover ]; then
  echo 075@$(date +%H:%M:%S): Create WAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wan_rollover
fi
if [ ! -f /root/trafficmon/history/.wwan_rollover ]; then
  echo 075@$(date +%H:%M:%S): Create WWAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wwan_rollover
fi

grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
if [ $? -eq 1 ]; then
  echo 075@$(date +%H:%M:%S): Create cron job to retain traffic monitor daily history
  echo "9,19,29,39,49,59 * * * * /usr/sbin/traffichistory.lua" >> /etc/crontabs/root
  SRV_cron=$(( $SRV_cron + 1 ))
fi

echo 075@$(date +%H:%M:%S): Only lock files for 600 seconds
sed -e 's/lfs.lock_dir(datadir)/lfs.lock_dir(datadir,600)/' -i /usr/share/transformer/mappings/rpc/system.lock.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 080@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -i /www/docroot/modals/gateway-modal.lp
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i\    html[#html + 1] = ui_helper.createAlertBlock(T"Root access <i>should</i> be preserved when using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button. You can use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to have more control over the factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i\          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -i /www/docroot/modals/gateway-modal.lp
echo 080@$(date +%H:%M:%S): Add tch-gui-unhide version to gateway modal and remove Global Information heading
sed \
  -e '/"uci.versioncusto.override.fwversion_override"/a\   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i\    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp
echo 080@$(date +%H:%M:%S): Allow hostname to be changed via GUI
sed \
  -e '/uci.system.system.@system\[0\].timezone/i\   system_hostname = "uci.system.system.@system[0].hostname",' \
  -e '/system_timezone = function/i\  system_hostname = function(value, object, key)\
    local valid, helpmsg = post_helper.validateNonEmptyString(value)\
    if valid then\
      if string.match(value, "^[a-zA-Z0-9%-]+$") then\
        if #value > 63 then\
          valid, helpmsg = nil, T"Host Name must be less than 64 characters"\
        end\
      else\
        valid, helpmsg = nil, T"Host Name contains invalid characters"\
      end\
    end\
    return valid, helpmsg\
  end,' \
  -e '/^local system_data/i\local old_hostname = proxy.get("uci.system.system.@system[0].hostname")[1].value' \
  -e '/^local system_data/a\if old_hostname ~= system_data["system_hostname"] and not system_helpmsg["system_hostname"] and ngx.req.get_method() == "POST" and ngx.req.get_post_args().action == "SAVE" then\
  local dns\
  for _,dns in pairs(proxy.get("uci.dhcp.dnsmasq.@main.hostname.")) do\
    if dns.value == old_hostname then\
      proxy.set(dns.path.."value",untaint(system_data["system_hostname"]))\
      proxy.apply()\
      break\
    end\
  end\
end' \
  -e '/MAC Address/a\    html[#html + 1] = ui_helper.createInputText(T"Host Name","system_hostname",system_data["system_hostname"],nil,system_helpmsg["system_hostname"])' \
  -i /www/docroot/modals/gateway-modal.lp
sed \
  -e 's|\(/etc/init.d/dnsmasq reload\)|\1;/etc/init.d/system reload|' \
  -i /usr/share/transformer/commitapply/uci_system.ca
echo 080@$(date +%H:%M:%S): Allow additional NTP servers to be added
sed \
  -e "/createMsg/a\  canAdd = true," \
  -e "s/maxEntries = 3,/maxEntries = 6,/" \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<div data-toggle=\"modal\" class=\"btn\" data-remote=\"/modals/tch-gui-unhide-update-modal.lp\" data-id=\"tch-gui-unhide-update-modal\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\"></i>&nbsp;'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</div>'" \
    -e '/isBridgedMode/i\        end' \
    -e '/local getargs/a\if getargs and getargs.ignore_update then' \
    -e '/local getargs/a\  local proxy = require("datamodel")' \
    -e '/local getargs/a\  proxy.set("rpc.gui.IgnoreCurrentRelease", getargs.ignore_update)' \
    -e '/local getargs/a\end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management, chart library, and wait indicator when opening modals
sed \
  -e '/<title>/i\    <script src="/js/tch-gui-unhide.js"></script>\\' \
  -e '/<title>/i\    <script src="/js/chart-min.js"></script>\\' \
  -e '/id="waiting"/a\    <script>$(".smallcard .header,.modal-link").click(function(){if ($(this).attr("data-remote")||$(this).find("[data-remote]").length>0){$("#waiting").fadeIn();}});</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Add improved debugging when errors cause cards to fail to load
sed \
  -e '/lp.include(v)/i\         local success,msg = xpcall(function()' \
  -e '/lp.include(v)/a\         end, function(err)' \
  -e '/lp.include(v)/a\          ngx.print("<pre>", debug.traceback(err),"</pre>")' \
  -e '/lp.include(v)/a\          ngx.log(ngx.ERR, debug.traceback(err))' \
  -e '/lp.include(v)/a\         end)' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

LTE_CARD="$(find /www/cards -type f -name '*lte.lp')"
echo 085@$(date +%H:%M:%S): Fix display bug on Mobile card, hide if no devices found and stop refresh when any modal displayed
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/var refreshInterval/a window.intervalIDs.push(refreshInterval);\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $LTE_CARD
echo 085@$(date +%H:%M:%S): Show Mobile Only Mode status
sed \
  -e 's/height: 25/height:20/' \
  -e '/\.card-label/a margin-bottom:0px;\\' \
  -e '/local light/i local proxy = require("datamodel")' \
  -e '/local light/i local primarywanmode = proxy.get("uci.wansensing.global.primarywanmode")' \
  -e "/card_bg/a ');" \
  -e '/card_bg/a if primarywanmode then' \
  -e '/card_bg/a   if primarywanmode[1].value == "MOBILE" then' \
  -e '/card_bg/a     ngx.print(ui_helper.createSimpleLight("1", T("Mobile Only Mode enabled")) );' \
  -e '/card_bg/a   else' \
  -e '/card_bg/a     ngx.print(ui_helper.createSimpleLight("0", T("Mobile Only Mode disabled")) );' \
  -e '/card_bg/a   end' \
  -e '/card_bg/a end' \
  -e "/card_bg/a ngx.print('\\\\" \
  -i $LTE_CARD

echo 085@$(date +%H:%M:%S): Show LTE Network Registration and Service status
sed \
  -e 's/\(, signal_quality\)/\1, registration_status, unread_sms/' \
  -e '/radio_interface_map/a\			result = utils.getContent(rpc_path .. "network.serving_system.nas_state")' \
  -e '/radio_interface_map/a\			registration_status = utils.nas_state_map[result.nas_state]' \
  -e '/radio_interface_map/a\			result = utils.getContent("rpc.mobiled.sms.info.unread_messages")' \
  -e '/radio_interface_map/a\			if result.unread_messages and tonumber(result.unread_messages) > 0 then' \
  -e '/radio_interface_map/a\			  unread_sms = result.unread_messages' \
  -e '/radio_interface_map/a\			end' \
  -e '/local data =/a\	registration_status = registration_status or "",' \
  -e '/local data =/a\	unread_sms = unread_sms or "",' \
  -i /www/docroot/ajax/mobiletab.lua
sed \
  -e '/"subinfos"/a\				<div style="height: 20px;" data-bind="visible: registrationStatus().length > 0">\\' \
  -e "/\"subinfos\"/a\					<label class=\"card-label\">');  ngx.print( T\"Network\"..\":\" ); ngx.print('</label>\\\\" \
  -e '/"subinfos"/a\					<div class="controls">\\' \
  -e '/"subinfos"/a\						<strong data-bind="text: registrationStatus"></strong>\\' \
  -e '/"subinfos"/a\					</div>\\' \
  -e '/"subinfos"/a\				</div>\\' \
  -e '/<\/p>/i\				<div style="height: 20px;" data-bind="visible: unreadSMS().length > 0">\\' \
  -e "/<\/p>/i\					<label class=\"card-label\">');  ngx.print( T\"Unread SMS\"..\":\" ); ngx.print('</label>\\\\" \
  -e '/<\/p>/i\					<div class="controls">\\' \
  -e '/<\/p>/i\						<strong data-bind="text: unreadSMS"></strong>\\' \
  -e '/<\/p>/i\					</div>\\' \
  -e '/<\/p>/i\				</div>\\' \
  -e '/this.deviceStatus/a\			this.registrationStatus = ko.observable("");\\' \
  -e '/this.deviceStatus/a\			this.unreadSMS = ko.observable("");\\' \
  -e '/elementCSRFtoken/a\					if(data.registration_status != undefined) {\\' \
  -e '/elementCSRFtoken/a\						self.registrationStatus(data.registration_status);\\' \
  -e '/elementCSRFtoken/a\					}\\' \
  -e '/elementCSRFtoken/a\					if(data.unread_sms != undefined) {\\' \
  -e '/elementCSRFtoken/a\						self.unreadSMS(data.unread_sms);\\' \
  -e '/elementCSRFtoken/a\					}\\' \
  -i $LTE_CARD

echo 085@$(date +%H:%M:%S): Add Device Capabilities and LTE Band Selection to Mobile Configuration screen
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/local function get_session_info_section/i\local function get_device_capabilities_section(page, html)' \
  -e '/local function get_session_info_section/i\	local section = {}' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.arfcn_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"ARFCN Selection Support" .. ":", page.device.capabilities.arfcn_selection_support))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.band_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"Band Selection Support" .. ":", page.device.capabilities.band_selection_support))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.manual_plmn_selection ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"Manual PLMN Selection" .. ":", page.device.capabilities.manual_plmn_selection))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.strongest_cell_selection ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"Strongest Cell Selection" .. ":", page.device.capabilities.strongest_cell_selection))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.supported_modes ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"Supported Modes" .. ":", page.device.capabilities.supported_modes))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.supported_bands_cdma ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"Supported CDMA Bands" .. ":", page.device.capabilities.supported_bands_cdma))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.supported_bands_gsm ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"Supported GSM Bands" .. ":", page.device.capabilities.supported_bands_gsm))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.supported_bands_lte ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"Supported LTE Bands" .. ":", page.device.capabilities.supported_bands_lte))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.max_data_sessions ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"Max Data Sessions" .. ":", page.device.capabilities.max_data_sessions))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.sms_reading ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"SMS Reading" .. ":", page.device.capabilities.sms_reading))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if page.device.capabilities.sms_sending ~= "" then' \
  -e '/local function get_session_info_section/i\		tinsert(section, ui_helper.createLabel(T"SMS Sending" .. ":", page.device.capabilities.sms_sending))' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\	if utils.Len(section) > 0 then' \
  -e '/local function get_session_info_section/i\		tinsert(html, "<fieldset><legend>" .. T"Device Capabilities" .. "</legend>")' \
  -e '/local function get_session_info_section/i\		tinsert(html, section)' \
  -e '/local function get_session_info_section/i\		tinsert(html, "</fieldset>")' \
  -e '/local function get_session_info_section/i\	end' \
  -e '/local function get_session_info_section/i\end' \
  -e '/local function get_session_info_section/i\\' \
  -e '/local function get_profile_select/i\local function validate_lte_bands(device)' \
  -e '/local function get_profile_select/i\    local choices = setmetatable({}, untaint_mt)' \
  -e '/local function get_profile_select/i\    local b' \
  -e '/local function get_profile_select/i\    for b in string.gmatch(device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/local function get_profile_select/i\      choices[string.untaint(b)] = true' \
  -e '/local function get_profile_select/i\    end' \
  -e '/local function get_profile_select/i\    return function(value, object, key)' \
  -e '/local function get_profile_select/i\      local uv' \
  -e '/local function get_profile_select/i\      local concatvalue = ""' \
  -e '/local function get_profile_select/i\      if not value then' \
  -e '/local function get_profile_select/i\        return nil, T"Invalid input."' \
  -e '/local function get_profile_select/i\      end' \
  -e '/local function get_profile_select/i\      if type(value) == "table" then' \
  -e '/local function get_profile_select/i\        uv = value' \
  -e '/local function get_profile_select/i\      else' \
  -e '/local function get_profile_select/i\        uv = { value }' \
  -e '/local function get_profile_select/i\      end' \
  -e '/local function get_profile_select/i\      for i,v in ipairs(uv) do' \
  -e '/local function get_profile_select/i\        if v ~= "" then' \
  -e '/local function get_profile_select/i\          if concatvalue ~= "" then' \
  -e '/local function get_profile_select/i\            concatvalue = concatvalue.." "' \
  -e '/local function get_profile_select/i\          end' \
  -e '/local function get_profile_select/i\          concatvalue = concatvalue..string.untaint(v)' \
  -e '/local function get_profile_select/i\          if not choices[v] then' \
  -e '/local function get_profile_select/i\            return nil, T"Invalid value."' \
  -e '/local function get_profile_select/i\          end' \
  -e '/local function get_profile_select/i\        end' \
  -e '/local function get_profile_select/i\      end' \
  -e '/local function get_profile_select/i\      object[key] = concatvalue' \
  -e '/local function get_profile_select/i\      return true' \
  -e '/local function get_profile_select/i\    end' \
  -e '/local function get_profile_select/i\end' \
  -e '/local function get_profile_select/i\\' \
  -e '/p.mapParams\["interface_enabled"\]/a\		if utils.radio_tech_map[device.leds.radio] == "LTE" then' \
  -e '/p.mapParams\["interface_enabled"\]/a\			p.mapParams["lte_bands"] = device.uci_path .. "lte_bands"' \
  -e '/p.mapParams\["interface_enabled"\]/a\			p.mapValid["lte_bands"] = validate_lte_bands(device)' \
  -e '/p.mapParams\["interface_enabled"\]/a\		end' \
  -e '/"Access Technology"/a\	 			if utils.radio_tech_map[page.device.leds.radio] == "LTE" then' \
  -e '/"Access Technology"/a\	 				local b, lte_bands, lte_bands_checked = nil, {}, {}' \
  -e '/"Access Technology"/a\	 				for b in string.gmatch(page.device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/"Access Technology"/a\	 					lte_bands[#lte_bands+1] = { string.untaint(b), b }' \
  -e '/"Access Technology"/a\	 				end' \
  -e '/"Access Technology"/a\	 				if not page.content["lte_bands"] or page.content["lte_bands"] == "" then' \
  -e '/"Access Technology"/a\	 					for k,v in ipairs(lte_bands) do' \
  -e '/"Access Technology"/a\	 						lte_bands_checked[k] = string.untaint(v[1])' \
  -e '/"Access Technology"/a\	 					end' \
  -e '/"Access Technology"/a\	 				else' \
  -e '/"Access Technology"/a\	 					for b in string.gmatch(page.content["lte_bands"], "%d+") do' \
  -e '/"Access Technology"/a\	 						lte_bands_checked[#lte_bands_checked+1] = string.untaint(b)' \
  -e '/"Access Technology"/a\	 					end' \
  -e '/"Access Technology"/a\	 				end' \
  -e '/"Access Technology"/a\	 				tinsert(html, ui_helper.createCheckboxGroup(T"LTE Bands", "lte_bands", lte_bands, lte_bands_checked, {checkbox = { class="inline" }}, nil))' \
  -e '/"Access Technology"/a\	 			end' \
  -e '/^\s*get_device_info_section/a get_device_capabilities_section(page, html)' \
  -i /www/docroot/modals/lte-modal.lp

echo 085@$(date +%H:%M:%S): Fix uneven SMS messages in night mode
sed \
  -e '/background-color: *#eee;/a\    color: #000;\\' \
  -i /www/docroot/modals/lte-sms.lp

echo 085@$(date +%H:%M:%S): Add SMS send capability
sed \
  -e '/^local ui_helper/a\local post_helper = require("web.post_helper")' \
  -e '/^local ui_helper/a\local message_helper = require("web.uimessage_helper")' \
  -e '/^local ui_helper/a\local proxy = require("datamodel")' \
  -e '/messages().length > 0">/i\  <fieldset><legend>Received Messages</legend>\\' \
  -e "/<\/form>/i\  </fieldset>\\\\" \
  -e "/<\/form>/i\  <fieldset><legend>Send a Message</legend>\\\\" \
  -e "/<\/form>/i\  ');" \
  -e '/<\/form>/i\  ngx.print(ui_helper.createAlertBlock(T"Sending SMS messages is <b>NOT</b> supported with the Telstra Backup SIM."))\
  local mapParams = {\
    to_number = "rpc.gui.sms.number",\
    sms_msg = "rpc.gui.sms.message",\
  }\
  local mapValid = {\
    to_number = function(value, object, key)\
      local valid,helpmsg = post_helper.validateNonEmptyString(value)\
      if valid and not string.match(value, "^%+%d+$") then\
        valid,helpmsg = nil,T"Number must be in international dialling format including leading + and country code"\
      end\
      return valid,helpmsg\
    end,\
    sms_msg = function(value, object, key)\
      local valid,helpmsg = post_helper.validateNonEmptyString(value)\
      if valid and #value > 160 then\
        valid,helpmsg = nil,T"Message must not exceed 160 characters"\
      end\
      return valid,helpmsg\
    end,\
  }\
  local sms,helpmsg = post_helper.handleQuery(mapParams,mapValid)\
  message_helper.popMessages() -- remove changes saved message\
  local req = ngx.req\
  if req.get_method() == "POST" and req.get_post_args().action == "SAVE" and sms["to_number"] ~= "" and sms["sms_msg"] ~= "" and not helpmsg["to_number"] and not helpmsg["sms_msg"] then\
    local result,errors = proxy.set("rpc.gui.sms.sent", "1")\
    if result then\
      message_helper.pushMessage(T("SMS message successfully sent to "..sms["to_number"]),"success")\
      sms["to_number"] = ""\
      sms["sms_msg"] = ""\
    else\
      local err\
      for _,err in ipairs(errors) do\
        message_helper.pushMessage(T(err.errmsg),"error")\
      end\
    end\
  end\
  ngx.print(ui_helper.createMessages(message_helper.popMessages()))\
  ngx.print(ui_helper.createInputText(T"To Number","to_number",sms["to_number"],{input={class="span2",maxlength="20"}},helpmsg["to_number"]))\
  ngx.print(ui_helper.createInputText(T"Message","sms_msg",sms["sms_msg"],{input={class="span7",maxlength="160"}},helpmsg["sms_msg"]))' \
  -e "/<\/form>/i\  ngx.print('\\\\" \
  -e "/<\/form>/i\  </fieldset>\\\\" \
  -i /www/docroot/modals/lte-sms.lp

echo 085@$(date +%H:%M:%S): Add new Mobile tabs
sed \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a\	{"lte-autofailover.lp", T"Auto-Failover"},' \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a\	{"lte-operators.lp", T"Network Operators"},' \
  -i /www/snippets/tabs-mobiled.lp

echo 085@$(date +%H:%M:%S): Configure transformer for missing WanSensing settings
sed \
  -e 's/\("autofailover\)/\1", \1maxwait/' \
  -e '/timeout/ {n; :a; /timeout/! {N; ba;}; s/\("timeout"\)/\1, "fasttimeout"/;}' \
  -i /usr/share/transformer/mappings/uci/wansensing.map
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
    if [ -f "$f" ]; then
      [ "$DEBUG" = "V" ] && echo "090@$(date +%H:%M:%S):  - $f"
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
    fi
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo "090@$(date +%H:%M:%S): Change 'Gateway' to '$VARIANT'"
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp
sed -e "s/Device/$VARIANT/g" -i /www/docroot/modals/ethernet-modal.lp

echo 091@$(date +%H:%M:%S): Fixing titles
sed -e "s/Gateway/LAN/g" -i /www/cards/005_LAN.lp
sed -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," -i /www/docroot/login.lp

echo 095@$(date +%H:%M:%S): Add webserver wait functions
sed \
  -e '/function resetreboot(msg, msg_dst, action)/i \  var refreshTimeOut = 5000;\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  var refreshDelay = 3000;\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  function wait_for_webserver_running() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    $.ajax({ url: "/", timeout: refreshTimeOut })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .done(function(data) {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.open("text/html");\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.write(data);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      document.close();\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .fail(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_running, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    });\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  }\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  function wait_for_webserver_down() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    $.ajax({ url: target, timeout: refreshTimeOut })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .done(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_down, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    })\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    .fail(function() {\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \      window.setTimeout(wait_for_webserver_running, refreshDelay);\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \    });\\' \
  -e '/function resetreboot(msg, msg_dst, action)/i \  }\\' \
  -i /www/docroot/modals/broadband-modal.lp

echo 095@$(date +%H:%M:%S): Fix static leases for FW 17.2
sed \
  -e 's/"uci\.dhcp\.host\.@\."/"uci.dhcp.host."/' \
  -e '/objectName/,/addNamedObject/d' \
  -i /www/docroot/modals/ethernet-modal.lp

echo 095@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 095@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/local content =/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 095@$(date +%H:%M:%S): Make Telstra bridged mode compatible with Ansuel network cards and modals
sed \
  -e "/uci.network.interface.@lan.ifname/i \        [\"uci.network.config.wan_mode\"] = 'bridge'," \
  -i /www/lua/bridgedmode_helper.lua

echo 095@$(date +%H:%M:%S): Check for fake WAN in bridged mode \(nqe bind errors fix\)
sed \
  -e 's/if (proxy.get("uci.network.interface.@wan.")) then/local ifname = proxy.get("uci.network.interface.@wan.ifname")\
    if ifname and ifname[1].value ~= "lo" then/' \
  -i /www/lua/bridgedmode_helper.lua

echo 095@$(date +%H:%M:%S): Allow reset to Routed Mode without RTFD
sed \
  -e '/configBridgedMode/i \function M.configRoutedMode()' \
  -e '/configBridgedMode/i \  local success = proxy.set({' \
  -e '/configBridgedMode/i \    ["uci.wansensing.global.enable"] = "1",' \
  -e '/configBridgedMode/i \    ["uci.network.interface.@lan.ifname"] = "eth0 eth1 eth2 eth3",' \
  -e '/configBridgedMode/i \    ["uci.dhcp.dhcp.@lan.ignore"] = "0",' \
  -e '/configBridgedMode/i \    ["uci.network.config.wan_mode"] = "dhcp",' \
  -e '/configBridgedMode/i \    ["uci.network.interface.@lan.gateway"] = "",' \
  -e '/configBridgedMode/i \  })' \
  -e '/configBridgedMode/i \  if success then' \
  -e '/configBridgedMode/i \    local landns = proxy.getPN("uci.network.interface.@lan.dns.", true)' \
  -e '/configBridgedMode/i \    if landns then' \
  -e '/configBridgedMode/i \      local dns' \
  -e '/configBridgedMode/i \      for _,dns in pairs(landns) do' \
  -e '/configBridgedMode/i \        proxy.del(dns.path)' \
  -e '/configBridgedMode/i \      end' \
  -e '/configBridgedMode/i \    end' \
  -e '/configBridgedMode/i \    local ifnames = {' \
  -e '/configBridgedMode/i \      ppp = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.proto"] = "pppoe",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.metric"] = "10",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.username"] = "newdsluser@bigpond.com",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.password"] = "new2dsl",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.keepalive"] = "4,20",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.iface6rd"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ppp.graceful_restart"] = "1",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      ipoe = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.proto"] = "dhcp",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.metric"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.reqopts"] = "1 3 6 43 51 58 59",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.iface6rd"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@ipoe.vendorid"] = "technicolor",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wan = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan.auto"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wan6 = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.auto"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.proto"] = "dhcpv6",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.reqopts"] = "23 17",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.reqaddress"] = "force",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.noslaaconly"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.iface_464xlat"] = "0",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.forceprefix"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wan6.soltimeout"] = "240",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      wwan = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@wwan.enabled"] = "0"' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      Guest1 = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.proto"] = "static",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ip6assign"] = "64",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ip6hint"] = "1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.netmask"] = "255.255.255.128",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ipaddr"] = "192.168.2.126",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.ifname"] = "wl0_1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1.force_link"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \      Guest1_5GHz = {' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.proto"] = "static",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ip6assign"] = "64",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ip6hint"] = "2",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.netmask"] = "255.255.255.128",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ipaddr"] = "192.168.2.254",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.ifname"] = "wl1_1",' \
  -e '/configBridgedMode/i \        ["uci.network.interface.@Guest1_5GHz.force_link"] = "0",' \
  -e '/configBridgedMode/i \      },' \
  -e '/configBridgedMode/i \    }' \
  -e '/configBridgedMode/i \    local ifname,config' \
  -e '/configBridgedMode/i \    for ifname,config in pairs(ifnames) do' \
  -e '/configBridgedMode/i \      if success and not proxy.get("uci.network.interface.@" .. ifname .. ".") then' \
  -e '/configBridgedMode/i \        proxy.add("uci.network.interface.", ifname)' \
  -e '/configBridgedMode/i \      end' \
  -e '/configBridgedMode/i \      success = success and proxy.set(config)' \
  -e '/configBridgedMode/i \    end' \
  -e '/configBridgedMode/i \    success = success and proxy.apply()' \
  -e '/configBridgedMode/i \  end' \
  -e '/configBridgedMode/i \  return success' \
  -e '/configBridgedMode/i \end' \
  -i /www/lua/bridgedmode_helper.lua

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e 's/if rule and/if/' \
  -e 's/\(rule.target\)/rule and \1/' \
  -e 's/\(not access\) and/(card.modal and \1) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Removing obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 101@$(date +%H:%M:%S): Missing proxy in relay setup card 
sed -e '/local content_helper/a local proxy = require\("datamodel"\)' -i /www/cards/018_relaysetup.lp

echo 102@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/^  end/d' \
  -e '/convertResultToObject/a \  local htmlLeft = {}' \
  -e '/convertResultToObject/a \  local htmlRight = {}' \
  -e '/convertResultToObject/a \  local attributes = {' \
  -e '/convertResultToObject/a \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/convertResultToObject/a \  }' \
  -e '/convertResultToObject/a \  for _, v in ipairs(helper_uci_content) do' \
  -e '/convertResultToObject/a \      if v.intf ~= "loopback" then' \
  -e '/convertResultToObject/a \          local state = v.enable' \
  -e '/convertResultToObject/a \          local text' \
  -e '/convertResultToObject/a \          if state ~= "0" then' \
  -e '/convertResultToObject/a \              text =" enabled<br>"' \
  -e '/convertResultToObject/a \              state = "1"' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              text = " disabled<br>"' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \          if #htmlRight >= #htmlLeft then' \
  -e '/convertResultToObject/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \      end' \
  -e '/convertResultToObject/a \  end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 102@$(date +%H:%M:%S): Fix NAT ALG modal errors and include in Firewall tabs if card hidden
sed \
  -e '/^local ui_helper/i \local proxy = require("datamodel")' \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -e '/^local UI_helper/i \local proxy = require("datamodel")' \
  -e "/modal-body/a \  ');" \
  -e '/modal-body/a \  local card_hidden = proxy.get("uci.web.card.@card_natalghelper.hide")' \
  -e '/modal-body/a \  if card_hidden and card_hidden[1] and card_hidden[1].value == "1" then' \
  -e '/modal-body/a \    local lp = require("web.lp")' \
  -e '/modal-body/a \    lp.setpath("/www/snippets/")' \
  -e '/modal-body/a \    lp.include("tabs-firewall.lp")' \
  -e '/modal-body/a \  end' \
  -e "/modal-body/a \  ngx.print('\\\\" \
  -e "/createTable/i \        ngx.print('<legend>');  ngx.print( T'NAT Helpers (ALG\\\\'s)' ); ngx.print('</legend>');" \
  -e "s/\"NAT Helpers (ALG's)\"/\"Firewall\"/" \
  -e 's/Dest Port/Destination Port/' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 104@$(date +%H:%M:%S): Fix incorrect error detection in DDNS update when IPv6 address contains 401 or 500 
sed \
  -e '/local logFile/a\        local adrFile = "/var/log/ddns/" .. service .. ".ip"' \
  -e 's^"cat "^"sed -e \\"s/$(cat " .. adrFile ..")//\\" "^' \
  -i /usr/share/transformer/mappings/rpc/ddns.map

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ -n "$ip" ]
    then 
      sed -e "/127.0.0.1/a\    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ -n "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i\    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Allow custom DNS entries
sed \
  -e 's/"addnhosts", "bogusnxdomain"/"addnhosts", "address", "bogusnxdomain"/' \
  -i /usr/share/transformer/mappings/uci/dhcp.map
  SRV_transformer=$(( $SRV_transformer + 1 ))

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/,/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  [ "$DEBUG" = "V" ] && echo "110@$(date +%H:%M:%S): - Fixing $f"
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 110@$(date +%H:%M:%S): Enable various cards that the default user was not allowed to see
for f in $(grep -l -r "and not session:isdefaultuser" /www/cards)
do
  [ "$DEBUG" = "V" ] && echo "110@$(date +%H:%M:%S): - Fixing $f"
  sed -e 's/ and not session:isdefaultuser()//' -i $f
done

echo 115@$(date +%H:%M:%S): Fix Firewall modals for FW 17.2
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-cone-modal.lp
sed \
  -e 's/@defaults\[0\]/1/' \
  -i /www/docroot/modals/firewall-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-port-forwarding-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-rules-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-zones-modal.lp

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule.
sed \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule_v6.
sed \
  -e '/src = {/i \      name = {' \
  -e '/src = {/i \        access = "readWrite",' \
  -e '/src = {/i \        type = "string",' \
  -e '/src = {/i \      },' \
  -e '/src =  function(mapping, paramname, k/i \    name =  function(mapping, paramname, key)' \
  -e '/src =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/src =  function(mapping, paramname, k/i \    end,' \
  -e '/src =  function(mapping, paramname, p/i \    name =  function(mapping, paramname, paramvalue, key)' \
  -e '/src =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/src =  function(mapping, paramname, p/i \    end,' \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule_v6.map
SRV_transformer=$(( $SRV_transformer + 1 ))

# Version 2021.02.22 set an incorrect value for synflood_rate, so have to fix it
synflood_rate="$(uci -q get firewall.@defaults[0].synflood_rate)" 
if [ -n "$synflood_rate" ]; then
  echo $synflood_rate | grep -q -E '^[0-9]+/s$'
  if [ $? = 1 ]; then
    [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Fixing configuration firewall.@defaults[0].synflood_rate"
    synflood_rate="$(echo $synflood_rate | grep -o -E '^[0-9]+')" 
    uci set firewall.@defaults[0].synflood_rate="$synflood_rate/s"
    SRV_firewall=$(( $SRV_firewall + 1 ))
  fi
fi
# Version 2021.02.22 allowed setting of tcp_syncookies but it is not enabled in kernel, so have to remove it
if [ -n "$(uci -q get firewall.@defaults[0].tcp_syncookies)" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Deleting configuration firewall.@defaults[0].tcp_syncookies"
  uci -q delete firewall.@defaults[0].tcp_syncookies
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi

echo 115@$(date +%H:%M:%S): Fix missing values on uci.firewall.include. and uci.firewall.ipset.
sed \
  -e 's/"type", "family"/"type", "path", "family"/' \
  -e 's/\("hashsize", "timeout",\)$/\1 "match",/' \
  -i /usr/share/transformer/mappings/uci/firewall.map

echo 115@$(date +%H:%M:%S): Add transformer mapping for uci.firewall.nat.
sed -n '/-- uci.firewall.redirect/,/MultiMap/p' /usr/share/transformer/mappings/uci/firewall.map | sed -e 's/redirect/nat/g' >> /usr/share/transformer/mappings/uci/firewall.map

echo 115@$(date +%H:%M:%S): Checking firewall configuration for DNS interception
if [ "$(uci -q get firewall.dns_xcptn)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_xcptn"
  uci set firewall.dns_xcptn='ipset'
  uci set firewall.dns_xcptn.name='dns_xcptn'
  uci set firewall.dns_xcptn.family='ipv4'
  uci set firewall.dns_xcptn.storage='hash'
  uci set firewall.dns_xcptn.match='ip'
  uci set firewall.dns_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.dns_xcptn ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.dns_xcptn"
  echo -n > /etc/firewall.ipset.dns_xcptn
fi
if [ "$(uci -q get firewall.dns_int)" != "redirect" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_int"
  uci set firewall.dns_int='redirect'
  uci set firewall.dns_int.name='Intercept-DNS'
  uci set firewall.dns_int.family='ipv4'
  uci set firewall.dns_int.src='lan'
  uci set firewall.dns_int.src_dport='53'
  uci set firewall.dns_int.proto='tcp udp'
  uci set firewall.dns_int.dest='wan'
  uci set firewall.dns_int.target='DNAT'
  uci set firewall.dns_int.ipset='!dns_xcptn src'
  uci set firewall.dns_int.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dns_masq)" != "nat" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dns_masq"
  uci set firewall.dns_masq='nat'
  uci set firewall.dns_masq.name='Masquerade-DNS'
  uci set firewall.dns_masq.family='ipv4'
  uci set firewall.dns_masq.src='lan'
  uci set firewall.dns_masq.dest_port='53'
  uci set firewall.dns_masq.proto='tcp udp'
  uci set firewall.dns_masq.target='MASQUERADE'
  uci set firewall.dns_masq.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dot_fwd_xcptn)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dot_fwd_xcptn"
  uci set firewall.dot_fwd_xcptn='rule'
  uci set firewall.dot_fwd_xcptn.name='Allow-DoT'
  uci set firewall.dot_fwd_xcptn.src='lan'
  uci set firewall.dot_fwd_xcptn.dest='wan'
  uci set firewall.dot_fwd_xcptn.dest_port='853'
  uci set firewall.dot_fwd_xcptn.proto='tcp udp'
  uci set firewall.dot_fwd_xcptn.target='ACCEPT'
  uci set firewall.dot_fwd_xcptn.family='ipv4'
  uci set firewall.dot_fwd_xcptn.ipset='dns_xcptn src'
  uci set firewall.dot_fwd_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.dot_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.dot_fwd"
  uci set firewall.dot_fwd='rule'
  uci set firewall.dot_fwd.name='Deny-DoT'
  uci set firewall.dot_fwd.src='lan'
  uci set firewall.dot_fwd.dest='wan'
  uci set firewall.dot_fwd.dest_port='853'
  uci set firewall.dot_fwd.proto='tcp udp'
  uci set firewall.dot_fwd.target='REJECT'
  uci set firewall.dot_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.doh ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.doh"
  echo -n > /etc/firewall.ipset.doh
fi
if [ "$(uci -q get firewall.doh)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh"
  uci set firewall.doh='ipset'
  uci set firewall.doh.name='doh'
  uci set firewall.doh.family='ipv4'
  uci set firewall.doh.storage='hash'
  uci set firewall.doh.match='ip'
  uci set firewall.doh.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /etc/firewall.ipset.doh6 ]
then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating file /etc/firewall.ipset.doh6"
  echo -n > /etc/firewall.ipset.doh6
fi
if [ "$(uci -q get firewall.doh6)" != "ipset" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh"
  uci set firewall.doh6='ipset'
  uci set firewall.doh6.name='doh6'
  uci set firewall.doh6.family='ipv6'
  uci set firewall.doh6.storage='hash'
  uci set firewall.doh6.match='ip'
  uci set firewall.doh6.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.ipsets_restore)" != "include" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.ipsets_restore"
  uci set firewall.ipsets_restore='include'
  uci set firewall.ipsets_restore.type='script'
  uci set firewall.ipsets_restore.path='/usr/sbin/ipsets-restore'
  uci set firewall.ipsets_restore.reload='0'
  uci set firewall.ipsets_restore.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /usr/sbin/ipsets-restore ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating script /usr/sbin/ipsets-restore"
  cat<<"END-RESTORE" > /usr/sbin/ipsets-restore
#!/bin/sh
for set in $(ipset -n list)
do
  if [ -f /etc/firewall.ipset.$set ]
  then
    ipset flush $set
    ipset -f /etc/firewall.ipset.$set restore
  fi
done
END-RESTORE
  chmod +x /usr/sbin/ipsets-restore
fi
if [ "$(uci -q get firewall.doh_fwd_xcptn)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh_fwd_xcptn"
  uci set firewall.doh_fwd_xcptn='rule'
  uci set firewall.doh_fwd_xcptn.name='Allow-DoH'
  uci set firewall.doh_fwd_xcptn.src='lan'
  uci set firewall.doh_fwd_xcptn.dest='wan'
  uci set firewall.doh_fwd_xcptn.dest_port='443'
  uci set firewall.doh_fwd_xcptn.proto='tcp udp'
  uci set firewall.doh_fwd_xcptn.family='ipv4'
  uci set firewall.doh_fwd_xcptn.ipset='dns_xcptn src'
  uci set firewall.doh_fwd_xcptn.target='ACCEPT'
  uci set firewall.doh_fwd_xcptn.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.doh_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh_fwd"
  uci set firewall.doh_fwd='rule'
  uci set firewall.doh_fwd.name='Deny-DoH'
  uci set firewall.doh_fwd.src='lan'
  uci set firewall.doh_fwd.dest='wan'
  uci set firewall.doh_fwd.dest_port='443'
  uci set firewall.doh_fwd.proto='tcp udp'
  uci set firewall.doh_fwd.family='ipv4'
  uci set firewall.doh_fwd.ipset='doh dest'
  uci set firewall.doh_fwd.target='REJECT'
  uci set firewall.doh_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ "$(uci -q get firewall.doh6_fwd)" != "rule" ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating configuration firewall.doh6_fwd"
  uci set firewall.doh6_fwd='rule'
  uci set firewall.doh6_fwd.name='Deny-v6-DoH'
  uci set firewall.doh6_fwd.src='lan'
  uci set firewall.doh6_fwd.dest='wan'
  uci set firewall.doh6_fwd.dest_port='443'
  uci set firewall.doh6_fwd.proto='tcp udp'
  uci set firewall.doh6_fwd.family='ipv6'
  uci set firewall.doh6_fwd.ipset='doh6 dest'
  uci set firewall.doh6_fwd.target='REJECT'
  uci set firewall.doh6_fwd.enabled='0'
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ ! -e /usr/sbin/doh-ipsets-maintain ]; then
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Creating script /usr/sbin/doh-ipsets-maintain"
  cat<<"END-MAINTAIN" > /usr/sbin/doh-ipsets-maintain
#!/bin/sh

if [ "$(uci -q get firewall.doh)" = "ipset" ]
then
  if [ -f /tmp/doh-ipv4.txt ]
  then
    rm /tmp/doh-ipv4.txt
  fi
  curl -s -k -L https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-ipv4.txt > /tmp/doh-ipv4.txt
  if [ -f /tmp/doh-ipv4.txt ]
  then
    sed -e 's/\([^ ]*\) .*/add doh \1/' /tmp/doh-ipv4.txt > /etc/firewall.ipset.doh
    rm /tmp/doh-ipv4.txt
    ipset flush doh
    ipset -f /etc/firewall.ipset.doh restore
  fi
fi

if [ "$(uci -q get firewall.doh6)" = "ipset" ]
then
  if [ -f /tmp/doh-ipv6.txt ]
  then
    rm /tmp/doh-ipv6.txt
  fi
  curl -s -k -L https://raw.githubusercontent.com/dibdot/DoH-IP-blocklists/master/doh-ipv6.txt > /tmp/doh-ipv6.txt
  if [ -f /tmp/doh-ipv6.txt ]
  then
    sed -e 's/\([^ ]*\) .*/add doh6 \1/' /tmp/doh-ipv6.txt > /etc/firewall.ipset.doh6
    rm /tmp/doh-ipv6.txt
    ipset flush doh6
    ipset -f /etc/firewall.ipset.doh6 restore
  fi
fi
END-MAINTAIN
  chmod +x /usr/sbin/doh-ipsets-maintain
fi
if [ $(grep doh-ipsets-maintain /etc/crontabs/root | wc -l) -eq 0 ]; then
  mm=$(awk 'BEGIN{srand();print int(rand()*59);}')
  hh=$(awk 'BEGIN{srand();print int(rand()*2)+3;}')
  [ "$DEBUG" = "V" ] && echo "115@$(date +%H:%M:%S): Adding /usr/sbin/doh-ipsets-maintain cron job for Sunday $hh:$mm"
  echo "#$mm $hh * * 6 /usr/sbin/doh-ipsets-maintain" >> /etc/crontabs/root
fi

[ $SRV_firewall -gt 0 ] && uci commit firewall
echo 115@$(date +%H:%M:%S): Fix IP Route modals for FW 17.2
sed \
  -e 's/\.@\././' \
  -e '/objectName/,/addNamedObject/d' \
  -i /www/docroot/modals/iproutes-modal.lp

echo 120@$(date +%H:%M:%S): Fix default Telephony tab
# Default telephony tab is DECT!!! 
sed \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    if mmpbx_state == "1" then' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-info-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    else' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-global-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    end' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 120@$(date +%H:%M:%S): Remove extra FXS device from Telephony Codecs tab
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dialplan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp

echo 120@$(date +%H:%M:%S): Handle the Telephony card switch
sed \
  -e '/^local format/a \if ngx.var.request_method == "POST" then' \
  -e '/^local format/a \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/^local format/a \  if mmpbx_enable then' \
  -e '/^local format/a \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/^local format/a \    proxy.apply()' \
  -e '/^local format/a \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/^local format/a \  end' \
  -e '/^local format/a \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 120@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 120@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 120@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 120@$(date +%H:%M:%S): Add missing insert option on dial plan entries
sed \
  -e 's/registerMultiMap/registerNamedMultiMap/' \
  -e 's/modify", "remove/modify", "insert", "remove/' \
  -i /usr/share/transformer/mappings/uci/mmpbx.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -e 's| cellspacing="10%" cellpadding="10%" ||' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp

echo 135@$(date +%H:%M:%S): Fix duplicate ids
sed -e 's/ id="relaysetupcard_relayip"//g' -i /www/cards/018_relaysetup.lp

echo 135@$(date +%H:%M:%S): Add TCP Dump to Diagnostics
sed -e 's/    {"logviewer-modal.lp", T"Log Viewer"},/    {"logviewer-modal.lp", T"Log Viewer"},\n    {"diagnostics-tcpdump-modal.lp", T"TCP Dump"},/' -i /www/snippets/tabs-diagnostics.lp

echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e "s|Output Power|Adjust Output Power<span class='icon-question-sign' title='Increase or decrease radio output transmission power. Increasing transmission power is NOT recommended. It will cause more interference in neighboring channels, and reduce component lifetime by increasing heat generated.'></span>|" \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  [ "$DEBUG" = "V" ] && echo "150@$(date +%H:%M:%S): - Updating $f"
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
if [ -f /www/cards/*_cwmpconf.lp ]; then
  echo 150@$(date +%H:%M:%S): Removing CWMP card switch
  sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp
fi

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Add Mounted USB Devices to Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e 's/class = "span4"/style = "width:100%;"/' \
  -e '/dlna_name/d' \
  -e '/samba_name/d' \
  -e '/^local content /i\
local usb = {}\
local usbdev_data = proxy.getPN("sys.usb.device.", true)\
if usbdev_data then\
  local v\
  for _,v in ipairs(usbdev_data) do\
    local partitions = proxy.get(v.path .. "partitionOfEntries")\
    if partitions then\
      partitions = partitions[1].value\
      if partitions ~= "0" then\
        local partition = proxy.getPN(v.path .. "partition.", true)\
        usb[#usb+1] = {\
          product = proxy.get(v.path .. "product")[1].value,\
          size = proxy.get(partition[1].path .. "AvailableSpace")[1].value,\
        }\
      end\
    end\
  end\
end' \
  -e '/ngx.print(html)/i\
if #usb == 0 then\
  tinsert(html, ui_helper.createSimpleLight("0", T"No USB devices found", attributes))\
else\
  tinsert(html, ui_helper.createSimpleLight("1", format(N("%d USB Device found:","%d USB devices found:",#usb),#usb), attributes))\
  tinsert(html, T"<p class=\\"subinfos\\">")\
  local v\
  for _,v in pairs(usb) do\
    tinsert(html, format("<span class=\\"simple-desc\\"><i class=\\"icon-hdd status-icon\\"></i>&nbsp;%s [%s Free]</span>", v.product, v.size))\
  end\
  tinsert(html, T"</p>")\
end' \
  -i /www/cards/012_contentsharing.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/^            tinsert(html, "<\/fieldset>")/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -e '/DLNA name"/a\                tinsert(html, "</fieldset>")' \
  -i /www/docroot/modals/contentsharing-modal.lp


echo 155@$(date +%H:%M:%S): Enable or disable SAMBA service when file and printer sharing completely enabled or disabled
sed \
  -e '/if samba_available and type/i\
    if samba_available and type(post_data["samba_filesharing"]) == "userdata" then\
      local fs = untaint(post_data["samba_filesharing"])\
      local ps = proxy.get("uci.printersharing.config.enabled")\
      local svc_status\
      if not ps then\
        svc_status = fs\
      else\
        ps = string.untaint(ps[1].value)\
        if ps == fs then\
          svc_status = ps\
        elseif (ps == "0" and fs == "1") or (ps == "1" and fs == "0") then\
          svc_status = "1"\
        end\
      end\
      if svc_status then\
        local svc = proxy.get("uci.samba.samba.enabled")\
        if svc and svc[1].value ~= svc_status then\
          proxy.set("uci.samba.samba.enabled", svc_status)\
          proxy.apply()\
        end\
      end\
    end' \
  -i /www/docroot/modals/contentsharing-modal.lp
sed \
  -e '/proxy.apply/i\
  local ps = string.untaint(postArgs.printersharing_enabled)\
  local fs = proxy.get("uci.samba.samba.filesharing")\
  local svc_status\
  if not fs then\
    svc_status = ps\
  else\
    fs = string.untaint(fs[1].value)\
    if ps == fs then\
      svc_status = ps\
    elseif (ps == "0" and fs == "1") or (ps == "1" and fs == "0") then\
      svc_status = "1"\
    end\
  end\
  if svc_status then\
    local svc = proxy.get("uci.samba.samba.enabled")\
    if svc and svc[1].value ~= svc_status then\
      proxy.set("uci.samba.samba.enabled", svc_status)\
    end\
  end' \
  -i /www/docroot/modals/printersharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
[ -f /www/cards/*_natalghelper.lp ] && sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

echo 160@$(date +%H:%M:%S): Fix some responsive span widths
sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

echo 160@$(date +%H:%M:%S): Add theme processing
for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      [ "$DEBUG" = "V" ] && echo "160@$(date +%H:%M:%S): - Adding $LP theme style sheets to $f"
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      [ "$DEBUG" = "V" ] && echo "160@$(date +%H:%M:%S): - Adding $LP theme style sheets to $f"
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

if [ $ACROSS -eq 5 ]; then
  echo 160@$(date +%H:%M:%S): Allowing 5 cards across on wide screens
  sed \
    -e 's/\(@media screen and (min-width:1200px)\){/\1 and (max-width:1499px){/g' \
    -e '$a\
@media screen and (min-width:1500px){.row{margin-left:-30px;*zoom:1;}.row:before,.row:after{display:table;content:"";line-height:0;} .row:after{clear:both;} [class*="span"]{float:left;min-height:1px;margin-left:30px;} .container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:1470px;} .span12{width:1470px;} .span11{width:1370px;} .span10{width:1270px;} .span9{width:1170px;} .span8{width:1070px;} .span7{width:970px;} .span6{width:870px;} .span5{width:650px;} .span4{width:550px;} .span3{width:570px;} .span2{width:170px;} .span1{width:370px;} .offset12{margin-left:1380px;} .offset11{margin-left:1280px;} .offset10{margin-left:1180px;} .offset9{margin-left:1080px;} .offset8{margin-left:980px;} .offset7{margin-left:880px;} .offset6{margin-left:780px;} .offset5{margin-left:680px;} .offset4{margin-left:580px;} .offset3{margin-left:480px;} .offset2{margin-left:380px;} .offset1{margin-left:280px;} .row-fluid{width:100%;*zoom:1;}.row-fluid:before,.row-fluid:after{display:table;content:"";line-height:0;} .row-fluid:after{clear:both;} .row-fluid [class*="span"]{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:left;margin-left:2.564102564102564%;*margin-left:2.5109110747408616%;} .row-fluid [class*="span"]:first-child{margin-left:0;} .row-fluid .controls-row [class*="span"]+[class*="span"]{margin-left:2.564102564102564%;} .row-fluid .span12{width:100%;*width:99.94680851063829%;} .row-fluid .span11{width:91.45299145299145%;*width:91.39979996362975%;} .row-fluid .span10{width:82.90598290598291%;*width:82.8527914166212%;} .row-fluid .span9{width:74.35897435897436%;*width:74.30578286961266%;} .row-fluid .span8{width:65.81196581196582%;*width:65.75877432260411%;} .row-fluid .span7{width:57.26495726495726%;*width:57.21176577559556%;} .row-fluid .span6{width:48.717948717948715%;*width:48.664757228587014%;} .row-fluid .span5{width:40.17094017094017%;*width:40.11774868157847%;} .row-fluid .span4{width:31.623931623931625%;*width:31.570740134569924%;} .row-fluid .span3{width:23.076923076923077%;*width:23.023731587561375%;} .row-fluid .span2{width:14.52991452991453%;*width:14.476723040552828%;} .row-fluid .span1{width:5.982905982905983%;*width:5.929714493544281%;} .row-fluid .offset12{margin-left:105.12820512820512%;*margin-left:105.02182214948171%;} .row-fluid .offset12:first-child{margin-left:102.56410256410257%;*margin-left:102.45771958537915%;} .row-fluid .offset11{margin-left:96.58119658119658%;*margin-left:96.47481360247316%;} .row-fluid .offset11:first-child{margin-left:94.01709401709402%;*margin-left:93.91071103837061%;} .row-fluid .offset10{margin-left:88.03418803418803%;*margin-left:87.92780505546462%;} .row-fluid .offset10:first-child{margin-left:85.47008547008548%;*margin-left:85.36370249136206%;} .row-fluid .offset9{margin-left:79.48717948717949%;*margin-left:79.38079650845607%;} .row-fluid .offset9:first-child{margin-left:76.92307692307693%;*margin-left:76.81669394435352%;} .row-fluid .offset8{margin-left:70.94017094017094%;*margin-left:70.83378796144753%;} .row-fluid .offset8:first-child{margin-left:68.37606837606839%;*margin-left:68.26968539734497%;} .row-fluid .offset7{margin-left:62.393162393162385%;*margin-left:62.28677941443899%;} .row-fluid .offset7:first-child{margin-left:59.82905982905982%;*margin-left:59.72267685033642%;} .row-fluid .offset6{margin-left:53.84615384615384%;*margin-left:53.739770867430444%;} .row-fluid .offset6:first-child{margin-left:51.28205128205128%;*margin-left:51.175668303327875%;} .row-fluid .offset5{margin-left:45.299145299145295%;*margin-left:45.1927623204219%;} .row-fluid .offset5:first-child{margin-left:42.73504273504273%;*margin-left:42.62865975631933%;} .row-fluid .offset4{margin-left:36.75213675213675%;*margin-left:36.645753773413354%;} .row-fluid .offset4:first-child{margin-left:34.18803418803419%;*margin-left:34.081651209310785%;} .row-fluid .offset3{margin-left:28.205128205128204%;*margin-left:28.0987452264048%;} .row-fluid .offset3:first-child{margin-left:25.641025641025642%;*margin-left:25.53464266230224%;} .row-fluid .offset2{margin-left:19.65811965811966%;*margin-left:19.551736679396257%;} .row-fluid .offset2:first-child{margin-left:17.094017094017094%;*margin-left:16.98763411529369%;} .row-fluid .offset1{margin-left:11.11111111111111%;*margin-left:11.004728132387708%;} .row-fluid .offset1:first-child{margin-left:8.547008547008547%;*margin-left:8.440625568285142%;} input,textarea,.uneditable-input{margin-left:0;} .controls-row [class*="span"]+[class*="span"]{margin-left:30px;} input.span12,textarea.span12,.uneditable-input.span12{width:1156px;} input.span11,textarea.span11,.uneditable-input.span11{width:1056px;} input.span10,textarea.span10,.uneditable-input.span10{width:956px;} input.span9,textarea.span9,.uneditable-input.span9{width:856px;} input.span8,textarea.span8,.uneditable-input.span8{width:756px;} input.span7,textarea.span7,.uneditable-input.span7{width:656px;} input.span6,textarea.span6,.uneditable-input.span6{width:556px;} input.span5,textarea.span5,.uneditable-input.span5{width:456px;} input.span4,textarea.span4,.uneditable-input.span4{width:356px;} input.span3,textarea.span3,.uneditable-input.span3{width:256px;} input.span2,textarea.span2,.uneditable-input.span2{width:156px;} input.span1,textarea.span1,.uneditable-input.span1{width:56px;} .thumbnails{margin-left:-30px;} .thumbnails>li{margin-left:30px;} .row-fluid .thumbnails{margin-left:0;}}\
@media screen and (min-width:1500px){.modal{width:1470px;margin:-290px 0 0 -735px;} .tooLongTitle p{width:190px;} .smallcard:hover .tooLongTitle p{width:160px;} .simple-desc{margin-left:0px;}}\
@media screen and (min-width:1500px){.card-visibility-switch{float:left;width:20%;}}' \
    -i /www/docroot/css/responsive.css
fi

case "$CHART_CARDS" in 
  n)  echo 160@$(date +%H:%M:%S): Removing all chart cards; rm /www/cards/000_*.lp;;
  s)  echo 160@$(date +%H:%M:%S): Removing individual chart cards; rm $(ls /www/cards/000_*.lp | grep -v 000_Charts);;
  i)  echo 160@$(date +%H:%M:%S): Removing summary chart card; rm /www/cards/000_Charts.lp;;
esac

echo 165@$(date +%H:%M:%S): Deploy theme files
echo 'QlpoOTFBWSZTWcfRbeoAcEP/////////////////////////////////////////////4Ie33wBS
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
/viZ2wQ5RpMv/F3JFOFCQx9Ft6g=' | base64 -d | bzcat | tar -xf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

echo 166@$(date +%H:%M:%S): Fixing card backgrounds
sed \
  -e '$ a .card_bg{position:relative;z-index:1;}' \
  -e '$ a .card_bg:after{color:#EAEAEA;font-family:FontAwesome;content:attr(data-bg-text);display:block;font-size:110px;line-height:1;position:absolute;bottom:-5px;right:5px;}' \
  -i /www/docroot/css/gw.css
echo 170@$(date +%H:%M:%S): Adding management tabs
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  [ "$DEBUG" = "V" ] && echo "170@$(date +%H:%M:%S): - Updating $f"
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -f /etc/init.d/cwmpd ]
then
  echo 180@$(date +%H:%M:%S): CWMP found - Leaving in GUI and removing switch from card
  sed -e 's/switchName, content.*,/nil, nil,/' -i /www/cards/090_cwmpconf.lp
else
  echo 180@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 180@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  [ -f /www/cards/010_fon.lp ] && rm /www/cards/010_fon.lp
  [ -f /www/docroot/modals/fon-modal.lp ] && rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 180@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 180@$(date +%H:%M:%S): Checking modal visibility
for f in $(find /www/docroot/modals -type f | grep -vE \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo "180@$(date +%H:%M:%S): - Enabling $MODAL"
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Creating Rule $RULE: target=/modals/$MODAL"
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Fixing Rule $RULE: target=/modals/$MODAL Setting role to admin"
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Checking ajax visibility
for f in $(find /www/docroot/ajax -type f | grep -vE 'internet.lua|wirelesscard.lua')
do
  AJAX=$(basename $f)
  uci show web | grep -q "/ajax/$AJAX"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE="$(basename $f .lua | sed -e 's/-//g')ajax"
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/ajax/$AJAX" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Creating Rule $RULE: target=/ajax/$AJAX"
    echo "180@$(date +%H:%M:%S): - Enabling $AJAX"
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/ajax/$AJAX
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Fixing Rule $RULE: target=/ajax/$AJAX Setting role to admin"
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Checking configured web rules exist
for c in $(uci show web | grep '^web\..*\.target=' | grep -vE 'dumaos|homepage')
do 
  f=/www/docroot$(echo "$c" | cut -d"'" -f2)
  if [ ! -f "$f" ]; then
    RULE=$(echo $c | cut -d. -f2)
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Deleting rule $RULE for missing target $f"
    uci -q delete web.$RULE
    uci -q del_list web.ruleset_main.rules=$RULE
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done

echo 180@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ "$CARD" = "016_speedservice.lp" ]; then
    rm $CARDFILE
    if [ -n "$CARDRULE" ]; then
      [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Deleting rule $RULE for missing target $f"
      uci -q delete web.${CARDRULE}
    fi
    continue
  fi
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]; then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]; then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    [ "$DEBUG" = "V" ] && echo "180@$(date +%H:%M:%S): - Card Rule $CARDRULE: card=$CARD hide=0"
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.hide='0'
    if [ -n "$MODAL" ]; then
      uci set web.${CARDRULE}.modal="$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)"
    fi
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
done

uci commit web

grep -q '^function M.getRandomKey' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing getRandomKey post_helper function
  sed -e '/^return M$/i\
--Generate random key for new rule\
--@return 16 digit random key.\
function M.getRandomKey()\
  local bytes\
  local key = ("%02X"):rep(16)\
  local fd = io.open("/dev/urandom", "r")\
  if fd then\
    bytes = fd:read(16)\
    fd:close()\
  end\
  return key:format(bytes:byte(1, 16))\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateStringIsIPv4' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateStringIsIPv4 post_helper function
  sed -e '/^return M$/i\
-- Validate the given IP address is a valid IPv4 address.\
-- @string value The IPv4 address.\
-- @return true given IP address is valid IPv4 address, nil+error message.\
function M.validateStringIsIPv4(ip)\
  local chunks = {ip:match("^(%d+)%.(%d+)%.(%d+)%.(%d+)$")}\
  if #chunks == 4 then\
    for _,v in pairs(chunks) do\
      if tonumber(v) > 255 then\
        return nil, "Invalid IPv4 address"\
      end\
    end\
    return true\
  end\
  return nil, "Invalid IPv4 address"\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.reservedIPValidation' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing reservedIPValidation post_helper function
  sed -e '/^return M$/i\
-- Validate the given IP address is not in the Reserved IP list.\
-- @string value The IPv4 address.\
-- @return true valid IP address not present in Reserved IP list, nil+error message.\
function M.reservedIPValidation(ip)\
  if inet.isValidIPv4(untaint(ip)) then\
    local reservedIPList = proxy.get("uci.dhcp.host.")\
    reservedIPList = content_helper.convertResultToObject("uci.dhcp.host.", reservedIPList) or {}\
    for _, v in ipairs(reservedIPList) do\
      if match(v.name, "^ReservedStatic") and v.mac == "" then\
        if ip == v.ip then\
          return nil, T"The IP is internally used for other services."\
        end\
      end\
    end\
    return true\
  end\
  return nil, T"Invalid input."\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateDMZ' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateDMZ post_helper function
  sed -e '/^return M$/i\
--- Validator that will check whether the given IP address is in Network Range.\
--- Validate the given IP address is not in the Reserved IP list.\
-- @return true or nil+error message\
function M.validateDMZ(value, object)\
  local network = {\
    gateway_ip = "uci.network.interface.@lan.ipaddr",\
    netmask = "uci.network.interface.@lan.netmask",\
  }\
  if object.DMZ_enable == "1" then\
    content_helper.getExactContent(network)\
    local isDestIP, errormsg = M.getValidateStringIsDeviceIPv4(network.gateway_ip, network.netmask)(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
    isDestIP, errormsg = M.reservedIPValidation(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
    isDestIP, errormsg = M.validateQTN(value)\
    if not isDestIP then\
      return nil, errormsg\
    end\
  end\
  return true\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

grep -q '^function M.validateLXC' /usr/lib/lua/web/post_helper.lua
if [ $? -eq 1 ];then
  echo 190@$(date +%H:%M:%S): Add missing validateLXC post_helper function
  sed -e '/^return M$/i\
--- Validate the given IP/MAC is LXC''s IP/MAC\
-- @param value IP/MAC address\
-- @return true if the value is not an LXC''s IP/MAC Address\
-- @return nil+error message if the given input is LXC''s IP/MAC Address\
function M.validateLXC(value)\
  if not value then\
    return nil, "Invalid input"\
  end\
  local lxcMac = { mac = "uci.env.var.local_eth_mac_lxc" }\
  local lxcAvailable = content_helper.getExactContent(lxcMac)\
  if not lxcAvailable then\
    return true\
  end\
  if M.validateStringIsMAC(value) then\
    if lower(lxcMac.mac) == lower(value) then\
      return nil, format(T"Cannot assign, %s in use by system.", value)\
    end\
    return true\
  elseif inet.isValidIPv4(untaint(value)) then\
    local lxcIP = content_helper.getMatchedContent("sys.proc.net.arp.",{ hw_address = lower(lxcMac.mac)})\
    for _, v in ipairs(lxcIP) do\
      if v.ip_address == value then\
        return nil, format(T"Cannot assign, %s in use by system.", value)\
      end\
    end\
    return true\
  end\
  return nil, T"Invalid input."\
end\' -i /usr/lib/lua/web/post_helper.lua
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ -z "$FILE" ]
  then
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S):  - Removing obsolete configuration $RULE"
    uci delete $RULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
  elif [ "$CARD" != "$FILE" ]
  then
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

echo 195@$(date +%H:%M:%S): Checking configured cards exist
for c in $(uci show web | grep '^web\.card_.*\.card=')
do 
  f=/www/cards/$(echo "$c" | cut -d"'" -f2)
  if [ ! -f "$f" ]; then
    CARDRULE=$(echo $c | cut -d. -f2)
    [ "$DEBUG" = "V" ] && echo "195@$(date +%H:%M:%S): - Deleting card configuration $CARDRULE for missing card $f"
    uci -q delete web.$CARDRULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
done

uci commit web

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  MKTING_VERSION=$(uci get version.@version[0].marketing_version)
  echo BLD@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.10.24 for FW Version 17.2 ($MKTING_VERSION)\]/" -i $l
  done
  echo BLD@$(date +%H:%M:%S): Auto-refreshing browser cache
  for l in $(grep -lrE "['\"][^'\"]+\.(cs|j)s['\"]" /www/cards /www/docroot /www/snippets | grep -v -E '.js$|.sh$|.json$' 2>/dev/null)
  do
    sed -e "s/\(\.css\)\(['\"]\)/\1?${MKTING_VERSION}_2021.10.24@10:14\2/g" -e "s/\(\.js\)\(['\"]\)/\1?${MKTING_VERSION}_2021.10.24@10:14\2/g" -i $l
  done
fi

apply_service_changes
echo 210@$(date +%H:%M:%S): Done!!!
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
