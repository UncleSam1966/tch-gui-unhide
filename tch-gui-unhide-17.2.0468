#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 17.2.0468 - Release 2021.01.21
RELEASE='2021.01.21@10:10:45'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :c:d:f:h:i:l:p:rt:uv:yTVW option
do
 case "${option}" in
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   ?) echo "Optional parameters:"
      echo " Control Options:"
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -p y|n         : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
      echo "                    (Default is current setting i.e (n) by default)"
      echo " -v y|n         : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
      echo "                    (Default is current setting or (y) for first time installs)"
      echo " Theme Options:"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -t l|n|t|m     : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                    (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " Update Options:"
      echo " -u             : Check for and download any changes to this script (may be newer than latest release version)"
      echo "                    When specifying the -u option, it must be the ONLY parameter specifed."
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo " Miscellaneous Options:"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo "                    When specifying the -r option, it must be the ONLY parameter specifed."
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -V             : Show the release number of this script, the current installed release, and the latest available release on GitHub"
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      t=$(echo "$s" | cut -c5-)
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
echo "030@$(date +%H:%M:%S):  - New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
echo "030@$(date +%H:%M:%S):  - New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified firewall GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified lte GUI code
echo H4sIAAAAAAAAA+1X+2/bNhDOz/4rCA6BZUCWX4m9tUnQIM2wAku6RzpgyAqBlmibCEVqFBUnLfK/746S/E4f62MYqgMSieTd8SPvu9N5Pp939r6wdEFGo5F7gmw+3XtvMBoNe4fDg1F/r9vrHvSHe+TwSwNDyTPLDCF7Rmv7Lr33rf9PZQ7xj3WEp/tiPPj4+PdBv47/15DV+Cc6ZjL7/DT4oPgfdLv93uCgNwS93mAw6Nfx/xqyI/7S8rZOuWFWmyyQ6SfvgQEeDoePxR/Svr8RfygDgz3S/Qzne6984/Fvt1PDrWEqk8zy+AmJNVHakmjG1JQTOxMZmQjJGw2pIyZJZo1QU3JcvpSzlo0lh8m3RKiMGwuvbioohw+lnpre+cTep9wnE20SZn0i4P6Fgq3BZmW5cB9UWuVwodxotNvkXLltnWvxhlmhVWPKreV3NsB/sU5A22vO+TgX7USP4Rxxs1UdJdLgSdlwxiWwHbY3/O9cGO5RMAjWV2mrNEqNvrtf1Y2ZZZA4XC5VdPaY05WlhXouHlFeLCxVrZDZphqmq1ugi5OlzLAEFd18AHcSFlPeQiXPeBymMlEYtSo8Mb8VEUdDd0w09GgeiaC8u0DlyfNCBzYTk4UBUzGxGlbH3Hjl5HXvdXDLZM5b5IR0gUlcNSCcRID7nv+4tt8DDpaAkigC7YIEHt3PqP8YssJN8IySIIAt4B8NwJq2lo4rn+qTfKp1n4t7vEasoAIKr/GEDa5i91duW1XUEAwFkv1t45oqlnCK6ivEQBx/oA7k4++O9j9zNbWzF+o3TEmv55Nef9TywRwPiNab5qcqLj1ASngf4Xvgk0HLX3N3W6r/ojNhxS2/zJNibxXtQv6vt+5/6NYP1Y1OchXhLsurhUJlkVKQko6ey+CshRvXA5xuvS5oiRPXFLXdka7on0Dwpw0ojLlRUNQips5jgVVtAh9IqE4w8ZxLbnk1BRWOw2Pb06Xe7ciafMMPzqCbR2gTaZknKnPEeduYcRa7inFFX5Ya5BLJ5DeQU7BQcMtvuMRfGWN5xSEWSBgya01ZuNPcurdIsiw7plnKVB9uK2F30kXqmALvKHkAkA/+OoYLlzHkTOfKmnt4xqtIkKYrQIrhBo6YT1guEQA97B7uBoYmx7SoGwhMqArYYB3n4J0oL7mda3OzhVKto1Q7UH4UqP4HgXqhyKtsFYcjzwqQcryBxIAHreR9RSVIi4ctzugU86PgjPseu8JDIUnCRYMHvsYs4ymzM7fbSv2rdIJnAWgBV0/jeLHfJnVhBjBZfpFN3blQV/H5Agx4gLs5B34I94Xp7cCL2eMvh1gGEudutSpAYxJLfoXH+TXn5t7bTBF/6wL8zRLhEyWkv1GT4dsIDUiQQm2yXvOvRrP1lJDlzPJDHRQn/ckF0Su+rIFrnkMrrMTmpigTeC8tAm7W/B7F4rZKMmfVHuv4nuQp1jpKRHyMEXKT9ATUsXZV+vjenmkj3kB7wiQlCbczDRZ4Q5QwVxBLt9udPLpzpyovXqZbzUSKzUYaZNwiIzzawR8ImRJpym3WKRaFimQegwVwKqv6qsK0dDyziSwai9U20MNpn9CjieAyhi1OjiSfQrE7cV/YZSnL3Jgedarl1i4/m/FwlHgXGzbotSDHOhdK1rV27gmYFuB3o6JHDHpfA1+742Y4lkzdNMnM8Mlxc2Ztmj3pdLgK5uJGpDwWLNBm2sFRpyhOYVmcQixOWShU+OLqVWj4FJCGh3d3ofcy4kwJ1vruFH65GOAtC/fP+/vfd/d/GISnr5onZ1JEN2TGDccmhxTtxsXZmWvSLi7PiOtcsqMOwxMsmYnwW+sZAIcFviEHO8DZk/enxI/wIwlSYpvzYPhf/9KppZZaaqmlllpqqaWWWmqppZZaaqmllm9P/gF9tmnnACgAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo H4sIAAAAAAAAA+0ca3PbNjKf9StwbHqm5iha8iO+c5pMndS9ei6tfbGbfLA9GpqEJDYUySMp0a7H/e23C4AkwIdEOU46N0d8sEhgsVjsC8Bi6TRNt5994TKEcnBwwH6hlH/Z82j3YO/F3u7OCOtHw73h3jOy/6UJw7KIEysi5FkUBMkquHXt/6MlBfnbVuTEX1ALWsl/bzjcGe3ujQ5Q/qM9+Onk/xVKIf/hP0bj+C5O6Nz0wicdAwX84sWLJvnvHeyOSvIHZ3DwjAyflIqG8n8u/8EgjGgSWX7sWQl1DokTED9IiD2z/CklycyNycT1aK83GJBj37rxKPEC2/Lc363EDfzelCYJvU1M/OMEc8v19a2U3izcgR1EdKvf6zFw4k9vySv8K95jGsfQn9eZdnJrihrRPgmiuZVAc5xErj81+btoXLjjGfVCGkF7RP+zcCOqazCqmTdofQEaRsHtnQzmWIk1Dxzq5SDwZnlnVjIDMG2bvcXb3BQG7A0MQsvIvou9YDoGpsXUR/K0H9wYueLkEPHMs/wxZbxyGiDS1RAuzGCyCiBx/ZhGOH6C9SZ/zXh9zoiERjZ5E0SkawvbNYV5i5/v+e/l8NrEKbmhZpD1YKAMCY0QOmPf+flPY5hxdTgnCsIbakXFw/cAZ/JpKd3Tlt3TanfGqmpnVi3+5j3cScYay3eIzp8vR9fm0vIWlPwBjNZIEAmgyx2loQ/GQP1eVQG4VYBoqO+wIQQ/+Bj8pRjkFfQY5cgqulKHLJWRpauQpauRcV4xVOyxAVFF+xQ8gu+eO50l47kVAsB9L9NPhA4mE83oHRfdpxGlPlQ9qDYEjjehdRguNA5BnEzrZXR5qyBQRszZuQIxcJC8O/qlCXPWXIs6XY/642rUH2tRc3avwMzF1oCXN8pYUdLClx7OrPjItuFFb3RsQuiSKxx7rv8JkHOXq2u2Z8XxqyuNNQ6w8Uoj6EYHSTCdejRrymojOg8SrP02zqpcB14dunRtOhCwmpH73X4P14AQ/Hyib131vnPcJeGDanFo+bva61Ll3PI83LVgw1b/JSFF/2JtMO2IAk/fAtxP1HJopIMU2OTJ8S0seTH4u4IEAmgaqbADP0FrxzHHN1MxqZvpAFe9V9pfv7mdDP++/1KQI3g5S+YeCvOhJ7y1jjVGhcBzdx569B3ak+67AFBW40vVTVwb5J6bH2LnJMJTbpBlcPJAHmB6j6AiLVORbkZF+gRUlHzFpep/11OhgmdU5M6Q6f6GNJUM9lLxl2spUqEzgtCzFuqHhJSNYhv08XX1F/VN7bzFKlvu/3D/7wQ27m6/2Alws/M/wI12hi+68/9XKbL8xQLx5GNsfv7f3d3p5P9VSo38SxuEzx9j9fl/98VwZ6ck/xe7w53u/P81ytc8/xviLM/P/Nlb+3P6Bqf+OWx5rSlthFfb825in9fQTW0tIgxB3NRDasrB+a4atp5WYs/K8Y2MKSZrzebtJ8BWKRYiKjLWTk8/4AG4GAuPwachisfyPoCoHC4qAf3h5Pi8Ci/g6Il/7C/m59SjdlL0ODt519gFUJ9MzuCMfuK/c+Os0/JNqcNSDPAmCDxqZdQsf6kQkwH+EvjH8zC5O5fVZHl+ctIAz+FO4pOzAvZsDexZECUS9PsW4O/RMHq14aB8uyqCJHGKx98hxlWG2ufGZjYLzeShjrbhjaboxkiTcK3ookx5xEMFLFwAvXFvurQiE22DAnfnNJkFDgs6nJ2eX2jyCRTgYhEUBHDkz5hJxIqmsc7mhRCXmmWj4mnXDMv50YfjphlwcLVau64jW4HMGwCWiypuLyoQwCZ9CsFJXa0w9O70fsFI4T4WPps5yXTzR9ZZZ3IxSHDzGxiuQT7Ru34PPPsi8kkSLaiCgg9nB95i7scs3nDfm7EjMgspcIya0fOtOUVxZrxgVgD1oRVZc2xgg0JFchcyQFwEWAziQR2K0coGUlAxnsuzKPcLmBPjJLJAJ8OiigiO8b0bK6ahCOC25Lb5vQkd+Qnv53jKJn7kOMSnaWajOR/mLjhFoJgiJSN4t26l96FRJhuXLiN7QVcyZwPIngWWV8ejFzinfy9odKerQjFKHDAIO3myPzJP+2VHhJLh/FL12A034A3TxNySAhZnXt8XAYtuLQdkI5UCg4W2VI35jVFruW/UcfmKpWc/px90XDf6BqlaNxzXwTk/SG2Zj8CWEbbUsXLDEUbtRhC8FljZirSqV7ul6qFORfKlapV6cs2s76eqH7isJBjbs8C1qfAo2sXbM6D1gv0+GFDx6w+8An8fWKRSDoBaS8v12P6yXTBf7stpU6oYfUqNmGke+5FGlMLekgXJkZpMmWtIMbKekqHIYA4uecI4BCRyqw6UNTCDkCZRRwsqvDIq6koZPdvp6Ypo+gXuTJ4Kc1aoQV0voQTS2mItkJeJa7N9YUkjYL1G+b+lUeJOEITiduTMiuM0iByuJOz2oASkv6d2MJ/DMNTpK6oTx7NxEWWEYcTWWN/sLinfJPVLeAV3N8OKprcCZxzZ3Ie0w3bkeUFKnbeeC3w9OYs1GZ/s7+HVk1nR4g7OyHuFqTNG2a3pl8nqCECl3ng4boviPcDWoEnbkJ6WSZdktFYiUo/1lKb1k003mGxaP1npRkle6crSY0taVTjcpuutrN8skBbd0rrRJf5yD1PDwpa4NyTpgV1jqSaTXXMKtYe9utKOh4GV0qiYUi8XQi2ufFlnHq5sdeyKpM36WeqRrZyDAZkGMKcoWExnJFp44CfBb09c38Fr3wG/9g38u3mwiElM+bYf9+QlhzJJx9h7DB0pJlloWr4djWhqed6YI694nKzdxHaziFAo3cZiY61GPzAYsgQX/Z7GCy+5CE7ZuaMWraHiaxjFDhZshzfMQjFsZz4uzRETHvA0M4F1Y2yQJXF9WIosN4r1Gqr7xAl6DePUVv+NjFDt9OWlhnzOTpdcGOzsXGlB6qQb+FqBQCemAOwdzpONc5tYXkx7N9D8KT/3SWZQwiudwesAXmnf48ulZpp1kzVN7Vr7U47odUv3GM9dxUIrjuIKiHZdtzqv7Mh2XZVu3MJXdsycQF9mv0TpH6/KWw/QjQpZEhRzogCjY3C15NYwIaOGNpF1Ap0yGlWgYoMhDyQhkJidgGxo0jAZnvwhrkIZIDqRo7dvj88uQENQJYvqH96fnmm9WlZqeaJJg4JLBH2id7k/shynwR8BqiTwF/MbGukY0WAYCDjOHz+S0YG5Q+JFiJxttLwsheFbvOxnMRGksBSbKQ1rmrXYwF5MZvpG4REqYZ72qIBziIljKdm5vNx9zgA8p6sqq8/kgnSgqej8Z3CE6xjg5A9NcbC6WBiejJOI3sAWQ0fHb4iNd0ELqyWiGj0Xj3flMf0sgoWjic3I9m8xeC/5Yv0ezuILlk6jHWq4DmnkYYujS9w5YANVGxo5WXrNFDg0vXUTHR9+urg4G5/+SxyhQLF/YhsHMkkX4TQCCreBwIk7defIYPFCb5k3iUNq4wmJ/PP4YhuddGxmnjxzy9yL6/16P879c7MnNzkAIs1AefAtofMx8joU6EScUZYCgpkMJt+wY4JZpulVfHHqJrD7gz3FCqRRaOfhpAK+wCzpBm8fs/yLYl8LB2k/XLDUjF6WmqHNA99NgmjA77xiEcCsZFTIWUblHJHGBCO2oouffp+Q5hwjnl11Ezh3ZBFiJCfLJmoe9Wd+ixXr6nWWGQZh3tTvlxNJ0Cdmg+LzYBZE7u9gB5anEa4xrzRUA02ISdBWTR3DNJSJSz0HRITPHp2CBF6XM7IwsLq0fJs65D0TpFZKtvpuW/SU06eY8owtj6e53veKp1xwrGrg+pOAzFyHRWJYfJh1HcCuXJNC0ayS9Z/CjjtUMaWWmwyAGQOuadDP6N0skoSZx32GNvEHggVc+40Cgb2IkwBYycw3ksctFPVxkyn6l2dUtDzVtGSjajO3IsUNny6/Ye+wicbDU1lZ37BxwUQwwfJXruEY6HlzenqBcUHNBe82oLfcCqGC8bjfAvMRcu4NUPQJsB+DP2d3CwyvQUKPWjElyAkTVhlD1qs2yHOyzxlv3lj+J0b2ucSqKu0FIzeeAEeMM7iBsWomUFao/rrEMdlEW5kr5qrytNFWlpoFHQrXWlHF3MeW4hxZ9QidrhobSTfAmK7FyPYnVpJELui/CEg+FmdBVbZr4FtUflPE7z/ZJRE+vtjf393H6FFyx0Nbqesks8ODYXir3JSJ3dmTkwhkeNSfJjMYem9fNmtMrd1XaNjEnLmacnNGC1AFK3aGcpxGarw26pbnNpZygvPiyQmZJ4nB/R0pUSSZnCzgBHX1oaZ6QvNu14aq3krQpw7+cbPAOOGKWSixsw2novZtOZ9SpzaTyhXiY6EQ6SqFSJ9eIT6uVoj0cQqR1ihEuoKB6WcqxMfVClEJpm44lVqFWDefRygEm9QFvc2mhKsKD8QTNUDTwHEWuzHKnruJ3yLS03CK3oxaEScmPFBMTs5kkpVzdVMg2qj68wbCi0hTixTwzVdyfhx5F0xbreSPWgBEViBPmtDq7qsrWVJ1tl5zbON36OsWQjVHoHEhXHPck7OzWm07Wg4rr7+jyvq7o+5SpOFBdyZe8tjJkxJAkSzxpQj9E6ndH9ZuayppOakV+TzraN0B7CkI5gQUdvQ3ZkWXl+qZfw2aYf6EZ8IKnPb6+royxCrPdk4jPC4Kj5ZlzEgmmvmzvAlcmSTsctqIAtmvmy37TOUJqJQykxqILSBUmoWCNpIu9avOYJ3Xy3LEavN+ylVGnXvb/IQLvLkTOk3cmFgkotOFZ0WE3qKmss+qeYLdS3KeWKDnMOqMbP1lC+8XXXZvR2K22+DbCtU+6ggScfSt8kdxUeANmL1rr7/zrBvqlRt55VPY0+tvY1izEN3rGipi7fWWwRe8InUPcyXWCZSl4DVl3ymJfHkqXoPzK2f81fFxi9sD/7v1GKPId1BFxlijRWRbqDYGnG2g2u9AcNvQlEtViji22aowPK12KXzENou0kjX1JJGBVRi/SFzgUVsy/m0j1xgWnpKo1gwlae5SbfzMk5jQ1UxJixS1hlHbbfJl2M2PU2eYAAeWLRHE0+zUrMUGAhnotSErXT11HHBTAwLdflkBAWcrf+kZ25EbYge9uFki91e9Jbj8iE7Amc4u3Dk9Zcq3PxwOXyptP1DPwsvW3aIlv859rmsmC+czD6/1TZSBnt3c9wE8v2PDAOQYoMYpvYmZZo2jhY8LBqfmuWn9Zt3q92QReYdE28aLPKAqWCSHJSoN9vn0IX4dO6P2p0O0C/wM9qpnOoFPi1kiGMPtBPZiDiuGGYTU11ma+TZyl1GYN6aRm1DeSa62vSCmOlaxISbgqEqMTF3fCVK8J7zgFOvNkzUUtnKs+Gc1pwC9X8cmLogNOVXHqvbzQFLqJvFVWCPf5oHxGAT+jJ0YJspVjo0p6kxrgh824Er6klWa+I8FlvQtOiZdY5ckogWzycFKAs878ZPgg0tTJu/n7AMs/UqkLxhXvXsxzqH4Ncjb8/c/JsEnClVgDHOaWJd4y/8qr7/OrULcFWt98gComlh71dPYxfFVD0kQt5js/o/zAkb5pnKT1DeB4ZrtuTbeLqgiwIQkdvEbzXWttG5eaBf4hV7qerCQgf3fBYuITMEFpmDyABAQ6bZFXVq1fh+Qg6c341mQgpOc4t5Rv9qqDMEv7fDDM9MsIbnakiYpC5fNMr+G6xvAXPyWUCTBFxfIQkGYopQ4I11GPQV7ODrcnjDZLym7X+FbY6wMQauwFszqq3OqdMdXxy6ZGyrPuL6W/tFBxrLsQqrg2X21kxsi/NLydE2rQ5qfkFSwWgLyrftqElBqz3X+fSnHyZMUhtpqAteS1t9gAvVgOYxjgb/xM3ZjHlQNaRXUzbTXkvZZNHH/yhF/t53vE9YkK/wIageOtY9QpJzl0Puzv0juSle60pWudKUrXelKV7rSla50pStd6UpXutKVrnSlK13pSle60pWudKUrXelKV7rSla60Kf8FUa9fvgB4AAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo H4sIAAAAAAAAA+0ZXXPbNtLP+hUYtjcmp/q2Jc3EVh7icRtP7drXpOlDmvFAJCThQoEsSFpxM/7vtwuAn5Iuts9x7qbYB4lcLBa72A9gl1kie3tfGfoAk8lE/QM0/9Xz4GAyGQzH48PJwV5/0D8cDPbI6GsLhpAlKZWE7MkoSv8T3ZfG/08hA/snSyrZV/SCh9t/MBocWPs/B5T2TyUVyTySK/bUGeHh9j/sj0bW/s8B2+2/onHMxSJ5Gkd4uP1H44mN/2eBL9hfxv5/7wMPsf8IDv7+YHw46lv7Pwfcw/6LjHfTJVuxLqAfs8YX7D8eDibK/sPhaDAejvb6Q7gAjvdI/6mV3QZ/c/uHkU9DEs4TMiWS/ZlxyVwHXh2v1dJjyvTXsWTz5HrOQwaETo+lfi/1lx3wjU4mljxg2kWc2qSAzWkWpjjj7evTi9NpysIE/OyInFyeX/46nYUZOyJnJ5e/vJne8ITPQnj9+fT06vxqKo7qvHzqL3Htzy1CUBgmmfBZ0obXkCbpRRTwOWdBm3Q6JOUrViUia5qAdnPJkiULWne5avNM+CmPBFmw9Kokdz1kqiiU2rjqXYFSzKe4ZV2appLPshSmNHepTZyVEsmnuAJuJ0HRfksYKlRTCoKOJNksge1nIlVmYEkK9HxepetWNaIiMJJMazTVvcABAWwIsEwzKXYxAxImglapIZK1zPq4RsHHbJv2Ah51o5iJbapLx1P0wEARFwyIZg6zEf9CMhq4nhlRGD+MEmZQKFT+q6URUWoYwJYZTuBcTrlAzr7mgA+SfW1kV+KsJU+ZW2NWGa0K+1i3KPYeveBjm9wQLggECaTf7mJFIcg0E5jp/mP9gzdVv45Hgkitq3i///gB1r4pme1ym6mmb1DUnGaqVGlQSBZGFMcED5G/cSjNTK3ZiKikGlHuR3YLmlEId6/uZddAl+JJA6y3BGGd5j2wUXoio1bVom3CpLxeJYv7mHbDKSuWNnnKId1uc3E95HzAISfPYFsJ1VBBqNPbVkI1VBCaxLeVUo/lpM4OH8zDXKrtgVzLqmgwHezBjxRmQWqISMxkwpM8oCpe8oIoGcyWwhx4iqRjvKti7Z9+O7tWu3JtEnM0+xfz07e3cZ6pCRFUxYUDN4lueZNw2mqQ+rBcooYhE1yK8NYMrLg4FRAEymUHBkc/beBiKoF/CpoUCxKiRKq8N9f5HU1tFlKhq+V1dNQ5Bn+XEyhzPh07ZfSnY6c946n44TF3hwdkadouxCXmaxPZrrkbtvXeo3nbBALTK7NCM5DfF5QftPdUmCeKOcqeW21jITW7rYK+bRZSQawwKv+HfLFMHTwTSpzYgjPXj+1YyMtMCqd6Vhl96rnM5IFKPquEWiPYzgQQ8cCE2L4KK70wxvG+Uz/m0AS5sz1iF/A21VBtIRkTDVwE9/xFkzDOZBw2kZIFDcwqEpG/lBFc9L68TzoNPmif/CiE9e6zT3kUPWKfzE2zoRrcYQN2H/PrpH0/tfxIJMSngkSQ2siMEcaBP2ioV9tHEfaNPNu0LIL7EWo27X57D93MMXMv5X5mLCbncA8FccgVXbBSUQxqOGD2b7WCYlM1yDCSLeD0YdIts4HX+tbl0N8O1uv1/8r3n8PJpH84Ohip7z9D2/97FkD7B5GP2n01P3i4/Yf9yaG1/3NA1f5wA6LhE/X8q3Av+x/2+8PBweFgAvjBwcHQ2v9ZYIv91WW1o1664aMavg1QTd7xeJf9R0Pwjbr9x334s/3fZ4BOBwp/1foPacqCFySIVJfNX2KVADdGnqg+Q6vV6ZBzrPr5X6p11YIqL2Wf0i7+BNGKcuHur9ks4x0/kmy/6B/DHThlIr1esjCGq2+lzQzU3fqo45lJKyhg4Uq5Y1LG6+PFtDhKdi1UGSrIM75zgSapbsW1SSZS0BRr1lqPrp2/mvF81ruzU6xSKotjOf0Oix3Y7jNxKrLVGxYyP62327FY1i2Nz6a6bZO3zrl6glL9sylvEflLiczrW0S/1c/klTRXdPckpEnCfa9Ga6re7TMu1KCacFdvxkOdlslcQFV4IodX+KC468ITcT+pJ4U0lSdiL/WjQpvaE9FX+lGhsfpE3K/wrxCV4hPxF+VrRT6fyuCaY911HcXop7mQedWHU9+ZZ8XWFH6If60fFbvcEWl8haWWZlMaZ7OlZdoCreoObVKZorhVyrlJYyrMQieQQXnMpgjKv9yKy3gb61dJjNm8xvKaZHPnvKbZ835km6Av63Zr1bUhZwQh+2fG5K1bbFy7kB9SQj1uu3GWLC80ynXeZKpvNc/MciYHJWTNwxCLZ2NCcjx7SedQOR73Zi/JbZSRhN4w9UVENUN10lpzEUTrLtjV4WIe4QcYsfjUjSFKU3f/j9a+d0RIiSkivutLBqH5mlHwfRfcjAqQbgU5CljN4Xxk5s/zSJUBsDwO+A2IAFE2ddTx2ZlFwS3JYox156Va0+xnGDdTThhjromxIRbTdOk6PTyaE8HjmKVJTw9y4YdZADNSOks6q0I0PbsuDH7KzaXB584ykvwvSLc0dCC/pssomDpoPYdQ1VswQjcvALngu/fKWDBxm9aN4mLI8zbk4ywMQFtgfxyyBRPBy4ZNMCcpR9AZEr+XEKCosDnumZnVvV2mq1B/ssOn99+p9x/IAD8dNEU/E3GWavZg61cUvEctiW5ThhW8VWKsvdGdr1B+aOv2iAmQ+pj3YIleQ3JX+Z+cqNgt5fLz91po75LNUO+QLh99uHwnkDSIanOhZGUKgbfNfLIpXGXChmjVsarvoHBNX+pVnamH3q4eIB7xP/Elj3HoexeuuhkGjNfF1vitW3yvcj3y+Y8WnxP3e9f5rmI0r3tDQ9fr4jUxTX7nGJr5OeupSeUEs496ij4WvaOtBLGMYtcJeEIhoeE5h99skPauSm4E0Hlwu6yY655fROwJ7uC7MU0nSz3vTv3jz3GvsEoz6pse9yPcvCEVe43YVxO/9fXZggULFixYsGDBggULFixYsGDBggULFixYsGDBggULFixYsGDBgoVvCv8GPObBMwBQAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified wireless GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    -e 's#/booster.lp#/modals/wireless-boosters-boosters-modal.lp#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.broadbandstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling broadband-status.lua
  uci add_list web.ruleset_main.rules='broadbandstatusajax'
  uci set web.broadbandstatusajax='rule'
  uci set web.broadbandstatusajax.target='/ajax/broadband-status.lua'
  uci set web.broadbandstatusajax.normally_hidden='1'
  uci add_list web.broadbandstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.devicesstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling devices-status.lua
  uci add_list web.ruleset_main.rules='devicesstatusajax'
  uci set web.devicesstatusajax='rule'
  uci set web.devicesstatusajax.target='/ajax/devices-status.lua'
  uci set web.devicesstatusajax.normally_hidden='1'
  uci add_list web.devicesstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway-status.lua
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci set web.gatewaystatusajax.normally_hidden='1'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.internetstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling internet-status.lua
  uci add_list web.ruleset_main.rules='internetstatusajax'
  uci set web.internetstatusajax='rule'
  uci set web.internetstatusajax.target='/ajax/internet-status.lua'
  uci set web.internetstatusajax.normally_hidden='1'
  uci add_list web.internetstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.telephonystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling telephony-status.lua
  uci add_list web.ruleset_main.rules='telephonystatusajax'
  uci set web.telephonystatusajax='rule'
  uci set web.telephonystatusajax.target='/ajax/telephony-status.lua'
  uci set web.telephonystatusajax.normally_hidden='1'
  uci add_list web.telephonystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.ssidstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling ssid-status.lua
  uci add_list web.ruleset_main.rules='ssidstatusajax'
  uci set web.ssidstatusajax='rule'
  uci set web.ssidstatusajax.target='/ajax/ssid-status.lua'
  uci set web.ssidstatusajax.normally_hidden='1'
  uci add_list web.ssidstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method may cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<a href=\"https://github.com/seud0nym/tch-gui-unhide/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"btn\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\"></i>&nbsp;<small>'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</small></a>'" \
    -e '/isBridgedMode/i\        end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management
sed \
  -e '/<title>/a \<script>\\' \
  -e '/<title>/a \window.intervalIDs=new Array();\\' \
  -e '/<title>/a \function clearRegisteredIntervals(){\\' \
  -e '/<title>/a \  for(let i=0;i<window.intervalIDs.length;i++){\\' \
  -e '/<title>/a \    clearInterval(window.intervalIDs[i]);\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \}\\' \
  -e '/<title>/a \var modalLoaded=false;\\' \
  -e '/<title>/a \$(document).bind("DOMSubtreeModified",function(){\\' \
  -e '/<title>/a \  if(!modalLoaded){\\' \
  -e '/<title>/a \    if($(".modal").length>0){\\' \
  -e '/<title>/a \      modalLoaded=true;\\' \
  -e '/<title>/a \      clearRegisteredIntervals();\\' \
  -e '/<title>/a \    }\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \});\\' \
  -e '/<title>/a \</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

echo 085@$(date +%H:%M:%S): Add Network Operators to Mobile tabs
sed \
 -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-operators.lp", T"Network Operators"},' \
 -i /www/snippets/tabs-mobiled.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change Gateway to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp

sed -e "s/Gateway/LAN/g" -i /www/cards/005_LAN.lp
sed -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," -i /www/docroot/login.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix display bug on Mobile card and hide if no devices found
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix: "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask is/<br>Subnet Mask:/' \
  -e "s/IP is/IP:/" \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong style=\"letter-spacing:-1px\">%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/local disabled/d' \
  -e '/ipairs/i \  local htmlLeft = {}' \
  -e '/ipairs/i \  local htmlRight = {}' \
  -e '/ipairs/i \  local attributes = {' \
  -e '/ipairs/i \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/ipairs/i \  }' \
  -e '/if v.enable/,/end/d' \
  -e '/loopback/a \          local state = v.enable' \
  -e '/loopback/a \          local text' \
  -e '/loopback/a \          if state ~= "0" then' \
  -e '/loopback/a \              text =" enabled"' \
  -e '/loopback/a \              state = "1"' \
  -e '/loopback/a \          else' \
  -e '/loopback/a \              text = " disabled"' \
  -e '/loopback/a \          end' \
  -e '/loopback/a \          if #htmlRight >= #htmlLeft then' \
  -e '/loopback/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/loopback/a \          else' \
  -e '/loopback/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/loopback/a \          end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 101@$(date +%H:%M:%S): Missing proxy in relay setup card 
sed -e '/local content_helper/a local proxy = require\("datamodel"\)' -i /www/cards/018_relaysetup.lp

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/,/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv4 = "rpc.network.firewall.internetpingipv4",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    wan6_ip = "rpc.network.interface.@wan6.ip6addr",' \
  -e '/"rpc.network.firewall.mode"/i \    wwan_ip = "rpc.network.interface.@wwan.ip6addr",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      local ping_ipv4_status' \
  -e '/subinfos/i \      if content.ping_ipv4 == "1" then' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping enabled"' \
  -e '/subinfos/i \      else' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping disabled"' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \      ngx.print(ui_helper.createSimpleLight(content.ping_ipv4, ping_ipv4_status))' \
  -e '/subinfos/i \      if content["wan6_ip"] ~= "" or content["wwan_ip"] ~= "" then' \
  -e '/subinfos/i \        local ping_ipv6_status' \
  -e '/subinfos/i \        if content.ping_ipv6 == "1" then' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping enabled"' \
  -e '/subinfos/i \        else' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping disabled"' \
  -e '/subinfos/i \        end' \
  -e '/subinfos/i \        ngx.print(ui_helper.createSimpleLight(content.ping_ipv6, ping_ipv6_status))' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \    end' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
 -e 's/--       {"mmpbx-service/       {"mmpbx-service/' \
 -e '/mmpbx-contacts/d' \
 -e '/T"Service"/i \       {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
 -e '/T"Service"/a \       {"mmpbx-codec-modal.lp", T"Codecs"},' \
 -e '/T"Service"/a \       {"mmpbx-dial-plan-modal.lp", T"Dial Plans"},' \
 -e '/T"DECT"/a    \       {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
 -i /www/snippets/tabs-voice.lp
echo 120@$(date +%H:%M:%S): Fix default Telephony tab
# Default telephony tab is DECT!!! 
sed \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    if mmpbx_state == "1" then' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-info-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    else' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-global-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    end' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 125@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 125@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 135@$(date +%H:%M:%S): Add TCP Dump to Diagnostics
sed -e 's/    {"logviewer-modal.lp", T"Log Viewer"},/    {"logviewer-modal.lp", T"Log Viewer"},\n    {"diagnostics-tcpdump-modal.lp", T"TCP Dump"},/' -i /www/snippets/tabs-diagnostics.lp

echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg{position:relative;z-index:1;}' \
  -e '$ a .card_bg:after{color:#EAEAEA;font-family:FontAwesome;content:attr(data-bg-text);display:block;font-size:110px;line-height:1;position:absolute;bottom:-5px;right:5px;}' \
  -i /www/docroot/css/gw.css
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.01.21 for FW Version 17.2.0468\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
