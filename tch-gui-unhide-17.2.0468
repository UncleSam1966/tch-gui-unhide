#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 17.2.0468 - Release 2020.11.20
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  . /usr/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts Wt:s:Tryui:c:h:l:f:d: option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   t) case "$(echo ${OPTARG} | tr "GNOPLT" "gnoplt" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   r) RESTORE=y;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t       : Set a light (l), night (n), or Telstra-branded (t) theme"
      echo "                    (Default is current setting, or Telstra if no theme has been applied)"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) Firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      t=$(echo "$s" | cut -c5-)
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo H4sIAAAAAAAAA+0ba3PbNjKf+SswdFORE0qW/JDv0jiTh5NUc43ri9P2ZlyfhiIhiWeKZAlStuvx/fbbBUASfEiWncjX6wkfLAJYAIvdxT6w8OXl5faTNZculIODA/4LpfrLv3u7BzvdvR7A9Z50e929bv8J2V83YlhSltgxIU/iMEyWwd3V/z9aLoH/jh27bI1SsCL/9/cPurvdPvK/t9892PD/MUrB/25vf+hFcZgmlHX86CuugQzu9/uL+N/v7+xW+L+329t5QrpfEYeF5f+c/+12FNMktgPm2wl1nxM3JEGYEGdqBxNKkqnHyNjzqaa12+RdYI98SvzQsX3vdzvxwkCb0CShV0kH/7jhzPYCo3VJR6nXdsKYtkxN4+BkHMYzOyGHhCWxF0w6oi47U284pX5EY+iP6W+pF1NDh1k6eYduSlAnDBIaJAvgy735IBDrq2sV1rUTexa61M9BGGUM9gNAweSq4yRXHdki+wHa9k/sZAoQ+javse3svLR5HU6NrmneOJvr+dRmrx0HKkY+2gSS0gCIeXQd2DPPIZ/4BHIR9zoYOmEaIJ04zh0g78mxobNr1nF8m7FOfkR1iyRxSk1NHVR824FLtopqGJMu8nBwMt8jpwnwrrK0F833mtdOHa8T0OQyjC86fO1i6dIgpcIXV+rZ6kfHp5o2TgMHRYewyPcS48piNDK1K5ghCYVwGFcFVyIL5I/6LkPRoRFOpT8HBG5uM97aIIAxMk6IlKEbZ/98ys6fmQAlpn4+YenIkIAwn0TAcEw599mW+H3WO4d5HEID19TgXKQwr+jRoCkTZTdgwzhyhpGUBvjOCeSB/MVj2wEiZYTNWoZRUCGtOlFG0nwJRuM5jRnvxM3DhmGDZGiROcwJ2/ZiZpQmh96bWxNOMMrgvMPR49JWne1sqzb/M8K3Lkd1OkQvQHS++QYCyNOm7spIg8h2LozqAqZJQIGkjBIBgMwiCG/CiZ4BiDfyQBqulRUyuerW902MKgrlvXMBnHfmtp9S8m9gkS4IIYUqHWVzCxHMBOcp0y05yrR0C3SDikfx/YxsZXMUpEG1EYH0JkbrV+1X7YXrzQk/soc6i+xgV39ZaZzZvo+mFzta5neEFDMUCrHjxBQU81uA+57aLo2Nz/rghB9dOCgg4Ut0kUlg1hJa6voZ5RCF4WiiE9SJ7dGkjZr8UP9262rc7f3luyra8JmgFeDtuLF8P94s8mnbpczhfR6ZxnR8qG/pL78NRix6se2JjaoKdeh7wcWhpH9LzsR72tgjkUrCycSnskO2xXQWJtAGPBMNngvI0bnnUEEBvWUVWlfhjiZXI8dG6wXomzCYkKe9b9jLpzvfuC+2RctLoRxblpbD4PwZjTnNgjAci6q+cAJGWlahlE1LK3attptl6YFJgLB3EPgPQMlWI5NbqD4aiNxIQDQSjJujJaSsGa07+fKwaRkwq7BaFW4pHQ9l14NJ14A8mFJyyjXsUmIoWnz5LLj3XMNVBTVvX7TzVm64QgbLJ9QpWwXuRBR9nYkfjkBpdSj3KF3QtKC2lbGov4vqWe881+VlVV5armkAugtdvQY9ROFImbZ0WXIIlqMn16uNhQU/60fhKTmR0NleNOozugK867FsANiPJcr/lEvSD95kmhjFtFZ9O6DwVTM99sNLx3amtM6KseMkgGWCRoR1cDQt86IYizTJa02cUJdpACxxIO/PGLB4qRL1q+M4Md9DI3nLYcu0vwv6QZTPJ7Vqu8joXjkbYCpfLv5FhVAbhI2PGv9h/O+GDka3a7sBWvH+p9fv7+8e9Pcg/t8B+M39z2MUlf/Skfzqa9z//m93d293w//HKA38L8xKHkp82Rp33P/t7PcPKvw/6B1s7v8epdzr/u+Hh1z83eNub0YZsyd0IXy5v7jdC9mi+0Clq7jp43dMFkbG+XUkr2UYz9+gw1SMREfGg8iIvglDn9qBVriTwxM7tmf8egY9vqHwQ/BS6A6H1+LgcQS0TTjaiwZkIDDiVl2Y41Rfd/6mNjM2lYbKyJ87kHyLkq6VXYMEuD79e0rja6PYqlWsbtYuPSrXGFV3Kr/BUN3gHyMUJx28KtgulT+mScjiqwsR1o5C95qkETKmHA/7UVUM8DJE86MOeLx4G2Xo26j3WOBFEU3Ytuj0AsdPXRiR2CPW5jdrAU3E2DIqGKFluOB3exrG3u9AVYypZzSZhhCGISl1YvObRolyo26tB4dVsn0U7GFGWf5BuKO8y6yFZuLekiYl0kyTmS/uEvHrbIvX5d1f64VPJ+CRiij0s34qwwMdq60X21lvw9Ca33zpJc4UGP0uE3eiF2KqW6oYnqk95+Z9Zv9EMXClhF/Lv5fHRKxUHJv6WnnfuUozXLEW3ipEhAqwuuzAL72zew8WA6S9fgsHA//baj8vDfa/dpH4pWsst/+Y692r2H+MBDb2/zHKGu3/Cnm/ByXz/nAOxQrZxfnpYLDAqTjldBmwwYmEjUNuyStpyOdAb+wxcjIE3m8p/Ru9rswLcJ/Acocz6MqBJ69/roO9DtyfBRLITyUFyc8/6Ew/nQXCt7nRptx285uUQZZ0Ap8ksGfc3RnIeoROgtqQXEccAMUEqqAZ3TDwEWnMd1manSQ46w3xgihN+JeSNdkhDsXVwISQW3ILjoxVxuWIMjBStnAhcmzKrTlO5eY1Y/bRZhcKSrKa4yLra0biAwjYpX2t4FG05KgUTWvG5jRM45LU5A05LnnLurkDp8lzVP5kDQWHspavj8pt/bSF3A0Wp82xg3euhzMJnxgbXrtuqX5EfZrQookn5XhEoLviaYHMfFjayGY0y1U3PiRowgd1mKXUeZzAJo0xwmdcWwYKVfVh1fdYvAmpvgQQ+foHpP5LxqX+AgATyHwqzCBfPZ8AEDiQcjjPGje9A+Df/I524VMAmfa/x3MAdUSRPy+bOlTOHxFF6r6VIEZ1pZyIl3YwhGXGDW8EPJksb1iTbzqn4jRPhTclxPlylv5KN892zi29IzIE8444F7BjQEFH7ihNPjbxq3vxFgGCnpBn4t2pE837uszQF+392JUD8g2dbeWfgiE3HNez3rlFPhvy0yS3eQ5eYYxI/t1lye5lPcBPBL7U9cF67QTwbtZoKh7DMkwWWYaVF7cI6qQ8Jymyitm05PZhmnm2QDN/IUlW8ms8BcilYzv1cSF9HnqRghAD7ewgSjwHhpKXi7KCpoBa0WC0269yfQlnJnMfyVEKR9bBLzWVjeAC53D0L1zkte9nny5NbM9n+PAGlCYZx+GMUNuZgud5yVBvfPhpgEeR2KNwDjEAv1pqOlAdXEXqxq2RuByzyJZQxlUdnyGc48vxNAROQkVfACl6MEGGZ8hbUb9fPCu3g1IRlbOL8zPUDYdZPeB11C4FwE4FYKcKsFsB2K0C7FUA9qoA+xUAqHNlJqkTeD7YLS5MQvE0Mo28D9PA1csKTc6ArsZCBac6D4ojUHoBUfYD6o/6XqEjIC+cuJ3/rKPPEdBLuZZ4L8GBAVJs9RiPSbGURIffGOXxCQi86yKg+6PgX+Y3ZVeYzZKheCU1Gfrwi+FFgF0MsZFFMhGSoc7l4ARfa7yL+eUnBF4FLDdcCFBiDgRHhurU2O7cDhzqDk6K8MgquT0wFz6aWAKRYfrDP96aTbgqnOWygdpH0EMqR6B2R1/I8OL2VzFWCwLMwQkEeqfpCNhtaWheFsLN946FtbE0aQwU7nz4BUZzxVuPJCUV6HE6G9F4EHzCywOj/VcoFsG/pqXl2nXx8EHwLkhnp1wrGrnCNBVJKBFBuKilphW91CZlZjUeKUuwh/+pc8BUX0TeM17Gr3LALFvWHTEfn5KfGE9BZMgoj4QUhEqta0bqbcoSsEKAm4KWpDfStgG9xt4vdghuVY42x2Riw/cMyQLmBeOwooQXRArLNB8n1FHADO5YZPrEIhf0OhdG0CsWoXGcB1KcOrmLL0by560yWBAQxatiOYLHCNlkmS4VfVyR4j0hdNcNHa6d++ML7BfSt9BidWYqmifbc4U7eC2JaOXPuVEfmOJJF3zVw5NyaxGhaLxDnD+Yj9e4mHmBS+Xjcf2fr4BiQLL6frLgEJle3aGMogO2cvxcKBJLlUGr2LKFNM7JZz40B1d6RSxzb/wJei319mdJvtVfSK8/9Zbn1CrJIqQ/eFOf5OvUcoooz7XVno1W8eOSs/zSpXqRUzZstQseU1uWBLvX5kpPa8nbMBh7kzQWcfUX7ngFA97gHZS33uQ4fJ3doxn7UpZW9UChSdRdkJJyuRP7agrzT5LE3JQHl5IqXtMa93//t7PT727e/z1GKfG/anu/0hp3vP/rHuxV8//7e93eJv//GGX1/P+K+f6lyfDsXyITKt/M3eh1p4xfhpyQd1eAFtMxUtRn4MKXAaTrSk5C33OuBdQo9twJbU9gwgj6ygPe8E7yQXbqt1qWRXq0f1nh8SB4uhDhJAangUVu9KYnYVb5X0X0WzMLNSRR2dSGsPUjwoO/8L18j5A5rbJZrGE+7j8UbMqmbMqmbMqmbMqmbMqmbMoftvwH3TG7KgBQAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo H4sIAAAAAAAAA+1X/2/TOBTfz/0rLMNpiWjT7mslWJGOadzQDTaxiV8GqrzEbaxz7WA7KwPt/vZ7tpM2SdtxSMAJXZ60xbHfl4/fx34vnc/n/a0fLAOQ4XDoniDNpxvv7A33h8PB/sHewdZgZ7C/u7eFDn40MCu5NkQhtKWkNA/pfW39F5U58J/I2O7uh52Db+d/dzDcb/n/GVLlfyYTwvX3Pwb/kv+Dg+Fgb3C4C/zv7e23/P8UWcO/SemM9txLxLPvEMMSfHh4uIn/w91hk//DncHuFhp8h9hflf85/71epqhRRGhODE2eokQiIQ2KUyKmFJmUaTRhnHY6vR46kzHh7DMxTIrOlBpDP5nI/kvkjDARbM/pTc56sVR0O+x0uFVHsRSGCjNOKc+oQiOk6MecKRpg0I7qqzgsjGZUazKlG4xyVl9fmOVso0VTdTojJk67KBcGoBsw0EYxMY3KheK1WF/sJlfK4nWXBIzq+CNFSWLTFeB+rlUfHPWmkJFcpCyhkTPCXcyZoAsgbnKsIZsQToPLL/ediVTory66RUwUQINa4C7CwW/zJ+HI/cchsNap+7n+6wO4KsAHt2GHiqQWUBDIoY3W+QJ4pqnBXXSFz9zovguTYjH5ZjlpKIe8EDd95cfoBZyeBGJajftajFhymasyyg3PqTN8YQfO3VRRKtzcH27kJqWyR8/Nnvuhm85ylXE/feGHblrRxM29haebmEkh41TJmdd9vXyt4IuJSsYMyNNjmdnjXIK8ZZrdFGHeFWPnFghMCqynfujcddgEiemn6JZY8j/mVJvxjJpUJmg0Qvji/PIK22yIIjDo2VDWBNQjuETjTIINUVMdhNab1bjGJLao8Afn5fL3dyc1L0sKqyQ7w+US/hCuYWODgV8EEwRHz1O1kqoV0+WSjQXYK7j+HjVO9jW+Oj15fQJbggg1RGtUj8/Pzt961Ur8NYqvjs/fXIKiS86mgKMKsBWlMtSoBmpFrQw0qgAqMmQvfBdRpcYzPQUFJiOZUfFgDUB4jl3KrLFHb0dP54oZqB4O+QijKNqYRVjCz5BDv16x3JhXdPjXK5Zb84p/npxcnF2s1/RrpSpswGGOudQUDm+9KEdZrtPXfirAx66faKTzOIa5Sc75HdLkliaRTUYxjR92cuWKbtGa5oxzdENRcWPRHHKI7mSOHBzfueZMJHLuIjAxkeAeahZ9MMZLAltKkJEIljTTxicBQZucUKjAAPMpcskpCAffMJK2s9gaW/3r2GueKXthtt93tsNnCC1nFi0piqFrGHoKrYOqACoWEYBkBsUecE/gi4wWjzBEVQfg8ihht7BfovUIuw+23o1M7lCeJeAQP3cxi0PKs2ZP5JntQVkE9GbEpHBc7cegFizLqNF9v8hEzPMELAy50b3ZApq3roOBrjUr0dhxL5WKfYYGSThGviiOsK12GPnyVoBufnKWwDfnqmBLB00mZbZYCsMVfIzyBHYL7o84nQJDzxuc2K7m2L6knPoKjECj4uaoX1hWc5uaGfeN246uH7n3J2jHteAG9Fciy413D1y/IHBUr8qSUKnd3Wqb7m4qAuE3BzyFXu7aPTr2FX8RNi7fa717NXRRVr499DHUTfTKdQsIWukd3TXteDVuUaWqpNrYTZL7VZb79hi6AVwU+9SxYpldehzAr57cnuTQfbTdBZNcOMZREKIv721pDh4H+FGFkxC6PIdV25LLDyGnu9Qrkug1fRsNn61VyJTMApwwTaB42U8Yo3Jqde+r6kVcX/LWQ7SF7qchs+Vzg98VM1+zvN29e9p/R/0FB83L1zw+L+EnF1TEsHEFneF//buplVZaaaWVVlpppZVWWmmllVZaaaWVVn4F+QdA3BWVACgAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\&nbsp;</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -i /www/docroot/modals/gateway-modal.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change the Gateway card title to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp

sed -e "s/Gateway/$VARIANT/g" -i /www/cards/005_LAN.lp
sed -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," -i /www/docroot/login.lp

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
  -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
  -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
  -e '$ a end' \
  -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
  -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
  -e '/^local mode_active = "default"/d' \
  -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
  -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
  -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
  -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
  -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Add IPv6 address to Internet card if assigned
for f in $(ls /www/cards/snippets/003_internet_* | grep -E '(dhcp|pppoe|static)')
do
  prefix="$(echo $f | grep -o -E '(dhcp|ppp|static)')"
  if [ $prefix = "ppp" ]
  then
    table=content_rpc
  else
    table=cs
  fi
  sed \
    -e '/network.interface.@wan.ipaddr/a \    ip6addr = "rpc.network.interface.@wan6.ip6addr",' \
    -e "/${table}\[\"ipaddr\"\])/a \          format(T' <nobr><strong>%s</strong></nobr>', ${table}[\"ip6addr\"])," \
    -i $f
done

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix is "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask/<br>Subnet Mask/' \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong>%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 101@$(date +%H:%M:%S): Missing proxy in relay setup card 
sed -e '/local content_helper/a local proxy = require\("datamodel"\)' -i /www/cards/018_relaysetup.lp

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/,/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
 -e 's/--       {"mmpbx-service/       {"mmpbx-service/' \
 -e '/mmpbx-contacts/d' \
 -e '/T"Service"/i \       {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
 -e '/T"Service"/a \       {"mmpbx-codec-modal.lp", T"Codecs"},' \
 -e '/T"DECT"/a    \       {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
 -i /www/snippets/tabs-voice.lp
echo 120@$(date +%H:%M:%S): Fix default Telephony tab
# Default telephony tab is DECT!!! 
sed \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    if mmpbx_state == "1" then' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-info-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    else' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-global-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    end' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 135@$(date +%H:%M:%S): Add TCP Dump to Diagnostics
sed -e 's/    {"logviewer-modal.lp", T"Log Viewer"},/    {"logviewer-modal.lp", T"Log Viewer"},\n    {"diagnostics-tcpdump-modal.lp", T"TCP Dump"},/' -i /www/snippets/tabs-diagnostics.lp

echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /usr/tch-gui-unhide.theme
chown nobody:nogroup /usr/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg{position:relative;z-index:1;}' \
  -e '$ a .card_bg:after{color:#EAEAEA;font-family:FontAwesome;content:attr(data-bg-text);display:block;font-size:110px;line-height:1;position:absolute;bottom:-5px;right:5px;}' \
  -i /www/docroot/css/gw.css
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2020.11.20\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
