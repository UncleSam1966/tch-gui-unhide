#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 17.2.0468 - Release 2020.11.29
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  . /usr/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts Wt:s:Tryui:c:h:l:f:d: option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   t) case "$(echo ${OPTARG} | tr "GNOPLT" "gnoplt" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   r) RESTORE=y;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t       : Set a light (l), night (n), or Telstra-branded (t) theme"
      echo "                    (Default is current setting, or Telstra if no theme has been applied)"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) Firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      t=$(echo "$s" | cut -c5-)
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo H4sIAAAAAAAAA+1X/2/TOBTfz/0rLMNpiWjTjm2tNFakYxoM3WATm/hloMpL3MYisYPtrAy0+9vv2U7aJG3HTQJO6PKkLY79vnz8PvZ76Xw+72/9ZBmAjEYj+wRpPu14Z3e0NxoN9vZ397cGO4O9p7tbaP9nAzOSK00kQltSCH2f3vfWf1OZA/+RCM3ufto5eDj/TwejvZb/XyFV/lMRkUT9+GPwL/kfDoa7+6Mdw//u7v5Oy/+vkDX865imtGdfgiT7ATEMwcPhcBP/w6ejJv/DncFoCw1+QOzvyv+c/14vk1RLwlVCNI0OUCQQFxqFMeEzinTMFJqyhHY6vR46FSFJ2FeimeCdGdWaftGB+ReJlDDubc/pdc56oZB02+90EqOOQsE15XoS0ySjEo2RpJ9zJqmHQTuor2K/MEqpUmRGNxjlrL6+MMvZRoum6iwlOoy7KOcaoGswUFoyPgvKheK1WF/sJpfS4LWXBIzq+ANJSWTS5eF+rmQfHPVmkJGcxyyigTXCXZwwThdA7OREQTYhnAKX3+46UyHRpy66QYwXQL1a4C7C3h/zJ/7Y/sc+sNap+7n69BFcFeC9G79DeVQLyAnk0ETrfAM8s1jjLrrEp3Z014VJvph8u5zUNIG8EDt96cboBZyeCGIajbtajFAkIpdllOskp9bwhRlYdzNJKbdzr+zITgppjp6dPXNDO53lMkvc9Lkb2mlJIzv3Dp52IhVchLEUqdN9s3yt4AuJjCYMyFMTkZnjXIK8YYpdF2HeF2PrFgiMCqwnbmjdddgU8dmX4IYY8j/nVOlJSnUsIjQeI3x+dnGJTTZ4ERj0TChjAuoBXKJJJsCGyJnyfOPNaFxhEhpU+KP1cvHn++OalyWFVZKt4XIJf/TXsLHBwC2CCYKj56haSdWK6XLJxALsFVx/jxsn+wpfnhy/OYYtQYQaojWqR2enZ++caiX+GsXXR2dvL0DRJmdTwHEF2IpSGWpcA7WiVgYaVwAVGTIXvouolJNUzUCBiUBklN9bAxCeY5syY+zQm9HBXDIN1cMiH2MUBBuzCEv4GbLo1yuWG3OKFv96xXJrTvGv4+Pz0/P1mm6tVIUNWMxhIhSFw1svykGWq/iNm/Lwke0nCqk8DGFumifJLVLkhkaBSUYxje93cmmLbtGa5ixJ0DVFxY1Fc8ghuhU5snBc55ozHom5jcD4VIB7qFn03hgvCWwpQlogWFJMaZcEBG1ySqECA8wDZJNTEA6+YSRMZzE1tvrXMdc8k+bCbH/obPvPEFrOLFpSEELX0PQEWgeVHlQswgFJCsUecE/hi4wWD99HVQfg8jBiN7BfotQY2w+23rWIblGeReAQP7cxi0OaZM2emGSmB2UB0JsRHcNxNR+DirMso1r13SLjYZJHYKHJteqlC2jOug4GulZaojHjXiwk+woNkiQYuaI4xqbaYeTKWwG6+clZAt+cq4It5TWZFNliyfdX8DGaRLBbcH+Y0Bkw9LzBielqlu0LmlBXgRFoVNwc9gvLam5jnSaucZvR1SP7/gTt2BbcgP6aZ7l27oHrFwSO6mVZEiq1u1tt091NRcB/cMAT6OW23aMjV/EXYcPyvda7V0MXZeXhoY+gbqLXtltA0Erv6K5px6txiypVJdXEbpLcr7LcN8fQDuCimKcKJcvM0mMPfvXk5iT79qPt1pvm3DKOPB99+2BKs/fYw48qnPjQ5RNYNS25/BCyuku9IolO07VR/9lahUyKzMMRUwSKl/mE0TKnRveuql7EdSVvPURT6H4ZMlM+N/hdMXM1y9nd2af5d9hfcNC8fM3j8xJ+ckFF9BtX0Br+17+bWmmllVZaaaWVVlpppZVWWmmllVZaaeV3kH8AccQvNQAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\&nbsp;</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -i /www/docroot/modals/gateway-modal.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change the Gateway card title to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp

sed -e "s/Gateway/$VARIANT/g" -i /www/cards/005_LAN.lp
sed -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," -i /www/docroot/login.lp

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
  -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
  -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
  -e '$ a end' \
  -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
  -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
  -e '/^local mode_active = "default"/d' \
  -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
  -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
  -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
  -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
  -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Add IPv6 address to Internet card if assigned
for f in $(ls /www/cards/snippets/003_internet_* | grep -E '(dhcp|pppoe|static)')
do
  prefix="$(echo $f | grep -o -E '(dhcp|ppp|static)')"
  if [ $prefix = "ppp" ]
  then
    table=content_rpc
  else
    table=cs
  fi
  sed \
    -e '/network.interface.@wan.ipaddr/a \    ip6addr = "rpc.network.interface.@wan6.ip6addr",' \
    -e "/${table}\[\"ipaddr\"\])/a \          format(T' <nobr><strong>%s</strong></nobr>', ${table}[\"ip6addr\"])," \
    -i $f
done

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix is "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask/<br>Subnet Mask/' \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong>%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 101@$(date +%H:%M:%S): Missing proxy in relay setup card 
sed -e '/local content_helper/a local proxy = require\("datamodel"\)' -i /www/cards/018_relaysetup.lp

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/,/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
 -e 's/--       {"mmpbx-service/       {"mmpbx-service/' \
 -e '/mmpbx-contacts/d' \
 -e '/T"Service"/i \       {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
 -e '/T"Service"/a \       {"mmpbx-codec-modal.lp", T"Codecs"},' \
 -e '/T"DECT"/a    \       {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
 -i /www/snippets/tabs-voice.lp
echo 120@$(date +%H:%M:%S): Fix default Telephony tab
# Default telephony tab is DECT!!! 
sed \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    if mmpbx_state == "1" then' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-info-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    else' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-global-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    end' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 135@$(date +%H:%M:%S): Add TCP Dump to Diagnostics
sed -e 's/    {"logviewer-modal.lp", T"Log Viewer"},/    {"logviewer-modal.lp", T"Log Viewer"},\n    {"diagnostics-tcpdump-modal.lp", T"TCP Dump"},/' -i /www/snippets/tabs-diagnostics.lp

echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /usr/tch-gui-unhide.theme
chown nobody:nogroup /usr/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg{position:relative;z-index:1;}' \
  -e '$ a .card_bg:after{color:#EAEAEA;font-family:FontAwesome;content:attr(data-bg-text);display:block;font-size:110px;line-height:1;position:absolute;bottom:-5px;right:5px;}' \
  -i /www/docroot/css/gw.css
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2020.11.29\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
