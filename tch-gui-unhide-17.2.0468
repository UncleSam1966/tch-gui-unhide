#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 17.2.0468 - Release 2021.02.06
RELEASE='2021.02.06@16:38'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_power=0
SRV_system=0
SRV_transformer=0

check_pwr_setting() {
  section="$1"
  option="$2"
  text="$3"
  if [ -z "$(uci -q get power.$section.$option)" ]; then
    pwrctl show | grep "$text" | grep -q DISABLED
    uci set power.$section.$option="$?"
    SRV_power=$(( $SRV_power + 1 ))
  fi
}

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart

  if [ -z "$(uci -q get power.cpu)" ];then
    uci set power.cpu='cpu'
  fi

  if [ -z "$(uci -q get power.cpu.cpuspeed)" ]; then
    case "$(pwrctl show | grep "CPU Speed Divisor" | tr -s " " | cut -d" " -f4)" in
      1) uci set power.cpu.cpuspeed="1";;
      2) uci set power.cpu.cpuspeed="2";;
      4) uci set power.cpu.cpuspeed="4";;
      5) uci set power.cpu.cpuspeed="8";;
      *) uci set power.cpu.cpuspeed="256";;
    esac
    SRV_power=$(( $SRV_power + 1 ))
  fi
  check_pwr_setting "cpu" "wait" "CPU Wait"
  check_pwr_setting "ethernet" "ethapd" "Auto Power"
  check_pwr_setting "ethernet" "eee" "Energy Efficient Ethernet"
  check_pwr_setting "ethernet" "autogreeen" "AutoGreeen"
  check_pwr_setting "ethernet" "dgm" "Deep Green Mode"
  [ $SRV_power -gt 0 ] && uci commit power
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :c:d:f:h:i:l:p:rt:uv:yTVW option
do
 case "${option}" in
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   ?) echo "Optional parameters:"
      echo " Control Options:"
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -p y|n         : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
      echo "                    (Default is current setting i.e (n) by default)"
      echo " -v y|n         : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
      echo "                    (Default is current setting or (y) for first time installs)"
      echo " Theme Options:"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -t l|n|t|m     : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                    (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " Update Options:"
      echo " -u             : Check for and download any changes to this script (may be newer than latest release version)"
      echo "                    When specifying the -u option, it must be the ONLY parameter specifed."
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo " Miscellaneous Options:"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo "                    When specifying the -r option, it must be the ONLY parameter specifed."
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -V             : Show the release number of this script, the current installed release, and the latest available release on GitHub"
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  # File deployed to incorect location by releases prior to 2021.02.06
  if [ -f /usr/share/transformer/mappings/iperf.map ]; then
    rm /usr/share/transformer/mappings/iperf.map
  fi
  # Add individual files to be restored here
  for t in /etc/init.d/power
  do
    s=/rom$t
    if [ -f $s ]; then
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        echo 010@$(date +%H:%M:%S): Restoring file $t
        cp -f -p "$s" "$t"
      fi
    fi
  done
  # Add directories to be restored here
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      t=$(echo "$s" | cut -c5-)
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
echo "030@$(date +%H:%M:%S):  - New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
echo "030@$(date +%H:%M:%S):  - New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified eco GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified firewall GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified lte GUI code
echo H4sIAAAAAAAAA+1Ze2/bOBLP3/oUhBZFrFtZfsiu79ok2DTb3hZo071NuotDLjBoi7aJyJROomxni3z3naEelmQ7rzYtdpcDtBbJ4XBI/mY4M1kul629J6Y20KDfV79A9V/13XEHg+ed/vPeoLvX7rR73e4e6T+1YkhJLGlEyF4UBPI2vrvG/6S0hPv3gjHu7slw8PD777YHrr7/r0Hl+58HHvXjLw+De91/D3h63X5vMID7d92etv+vQlvu35esSRMZTCj3gwWLHD/8vDXwgp/3ejvuv9Pudnq1+x90+oM90v4yW7yd/ub332yGEZMRFbFPJfNeEC8gIpBkPKNiyoic8ZhMuM8Mww/G1CeSjnxGDsknwkXMIgmfqsvJmjcZn5iubCKvQ+Qtvg2j2SSvhRKh2PjvVPJAGFMmJVtJB//zgjnlorG/ZKOEN+fBCFb39q1cgXEgJBNyOGN+yCKQHrH/JzxiDRMmONVR08omhVGwui7zelRSgDvz1yxBvEtoaahgn7M4plO2Y0bCq+PFtITvnLHBKrkf19nQNtWAWRxISCM6R0bV78BRDtOuRsGyeAXDpV04Czh6OAL2Kgh8RkXGNv319O0vNU4Q92vGfJrMRyx6K35BZOSi5zT8OVfgk1F2G3O6WlKOADGTMXeWADEmYi6mztQPRtR3tjCbtnFTkqxWvkWwUrjRsd22VZqYYcAmuIV5PK3tCIDt+ew/CYuuG4X2drFccWh+FzyDZMNx4Cdzke7vEwEAX3QujRmjnrrEc/OUzhnoLeAH9yrSprqCUjszBRMRDs0I5gfCR0zKKGGgvZ0J71aEvwdTiEvS51m7EJ933Fu+W5H/WsjouvV6xWV5FYa9LOsslqr03nu9XmW9czCMIJEHo+ioccbgprzYKi0s0+Hyquuu2pJUyihzRGEi1VfOIRRSTbhULrDdwU+6wk+33YbG2KdxfGjGIRVdaMbyWjk1c8k9OXvRb4crk9yQG7WNmzogghB9VgoI5fsURs1sGDQb0ZiFVM62QP9d9wyZnB8c4BtTcezh3Ak8u0y1f2Q+k2zdFQcReGUUxIXHVuamNovCRi6Ks7qs2EbFOPJp6ADtonWbpZzjFlNzqZmEXT8SmwjuZ/9V9FsblbthVDfGJIjIlb2AiyQ8pDyK6wtZ8CoZtakXV7jLhcGEtzH0Xa3j+86lwgfisV/B4xsaS3IHKCfAswWY1e5vAs76qe5CpnsfZLpfDJnuQ5B5UTnI25DrVpDrPgy5bh257m7kutuQC7ECvS5UyS5TxRX4RjZ2vHEpJzzWfJLPAtWyT3hIIMBi+fOLMCkG8IlOmDKNYdU0Sseg7AIkL1DSIbheJXwBGE/lKp1BakN1/YN0Ohb5Pn8fL8xtD/ClMQJffqXMKv9nQADnhBEXsrEOYJwx8En2k7KlRhpxOCqDGEoufWZnQFHvgUWsl2QtZf9/xoHHFznS1azmKPCuSRJipGES7h2aGOtgp3kE7HAQ85wfv5uzIOK/w06ob0IwJmcBzEAImISO8UozsVvTGZS4DxqVVKrv630av8WNaiAHsWBYDFmW9TJHRLgRqYUYyYVOzCRaXMNsYaoVCx6GTMatdJCLsZ94MAOsNc5j3XRqJpj6EFUP0Z3wUSJZFmb5aeT9yVAngkaouppcTAIw38JloDdqAoyn4gUZw52z6KWZvmmpdLzyuvDCYxl1j2WsPZaReaxOu7xc6qEG6KFwjcJ0Z3Lup66+nCs0sNsm5sGEM9+Dczo68NkUAHdkEscB53wMt9Z8k10b+beyKHIGqQIYWKx4zINWPsXaJrt+q29xb+dwKA0MrVbkN4wjSz6fbLUJ+w6TsevnWISeOyZYW5WFzRQnsX07u4/qNyrOUs9D3nWJ8uSPOiDlMne/89Wooeo7a7HE0+7R/fw97noRqu9LbY/uw/cI/jn1w8ol30O/YzTlV2A5V43zRgyYgucEXR6FVwZAy+fJnLAYXkxM2AkCrJkjLFsJcvYDmBiI6dGz+KCVfZI4xTmhE3AEqA7iWjDlLokXBWEMb38qwrLsDdcDu8XXYO0zUX3LqLr1FmqKDrsFDn7TzW5s9k0QgDINfCCMb10L+TvSjvpfADdEZRDFn13827ur/td+3unX67/P++2Orv99DXpo/S/1R/CYpx+PrQpCdKg8mg2+SlLwDCqVKA1X/F7RLJj/QpXEb1MSTGLmDUN/LtK4LM9xFnyswsBaYpNHphAJ/pjy5A9bOgHTDhmkcWIj6yySGIsckXb6+mE6w0F8x97NbXdUtp/WAMdjzDizx+9ZDM/TDs1SMc4PKiLgKixwYLZprQXnMsVnyRRVmcU5XqCuwAIMmMR21tlTumzuUStpsSoOXu4uuZ4p2L9jYipnWeEVEmPS6Q5U5owbxNn16cfCyySASTQeINu1iQsv/7ZS8c9BzCVfYBU4XVuMt2n+6KW79126yComiUhDl+JowVFhMKFSY4Tn+nIq143jDnZbeZ4MHRcmcqstnZv/BYC/NMAxJpEApzam4rWnKs5ZTrtRDwEPx+BnU9JpsF2QqpJW5GAPitkBm0oZulzC+pBxkEcVorcUqmr1J8hafHVThybgTpWeVHW3UqZWFkNOggRrxPDrlTVBmJZL1qpZ08NjE5r46q8F/XZ/dwXtsFI/yxVzq3q6t2p5yuQyiK42tBRVLcUWLR+kVPdeSr0V5GNc1kOBp6RI1r6z4L42jAIzu+qBKq/JArwtVcHc/+U8tZpgul4dutCTFk5UMQ6Sd+AVbFkok5YP8O8NXL0wnS36pqlX0bxnba9uIvbGAdh1F5Glc1WfbBnVXOau1OXPUfoqR/JZ3eupa1aPLPd8KCD5+Kz+FizUwFVN7OuYe3z1gkLkG8Fbd7g/HPlUXO2TWcQmh/szKcP4RavFhLPkVzxkHqdOEE1b2GqlrmmYuaYhuqZ4yMXw7fnHYcSmoOmwv1oNGx/GjApOre+OIW+JALV0+Ox199k/28/+5Q6PP+4fnfh8fEVmLGIY4pA02Hh/cqJCtPenJ0TFLfFBi+IOniyXJ3VL+tZ5jiZNmjRp0qRJkyZNmjRp0qRJkyZNmjRp0qRJkyZNmjRp0qRJkyZNmjRp0vRXoj8A8saRwwBQAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo H4sIAAAAAAAAA+08XXPbOJLzrF+B40zOZC1FS7Gd3DqT1NgZZ+O67NgXe5MH26WiRUjihCK5JGXa6/L+9usGQBIgQYlynEztrvAgiUCj0egvAI2m8jzf/uEblwGUl3t77BtK/Zv9Hu683H2xu/N8iPXDwS58kb1vTRiWRZq5CSE/JFGULYNb1f4vWnKQ/9hNvPQbakEn+YPEX+4+39tj8h/uvhxu5P89SiX/wZ+Ho/QuzejcCeInHQMF/GJ3t03+L4Y7OzX5ozP4gQyelIqW8h8u/34/TmiWuGEauBn19okXkTDKyHjmhlNKspmfkokf0F6v3ydHoXsdUBJEYzfw/+FmfhT2pjTL6G3m4IcXzV0/NLdyer3w++MooVtWr8fASTi9Ja/xUzynNE2hP69zxtmtI2pE+yRK5m4GzWmW+OHU4c+iceGPZjSIaQLtCf37wk+oacCoTtlgWAI0TqLbOxnMczN3Hnk0KEHgyQ1O3WwGYMY2e0q3uSn02RMYhFGQfZcG0XQETEtpiOQZv/opcsUrIdJZ4IYjynjltUDkKyHcyXQZhA9znCwDyPwwpQlSmGG9wx8LaZyxaUAjY48DQjSNxdh3hAMQX7/w74vBlYOT9mPDJqvBQF0ymiC0VU1nBDxpDuclUXxN3aT68QvAOXxaSve8Y/dc3x242ak7wNW7M043O7Nq8Vn28CcFZ93QIyb/fTG8cm7cYEHJP0FOBokSAXTxXGmwwNpo2GtqGDc7kCwNPRyiYCcbQzxUg7yGHsMSWUMZdchyGVm+DFm+GhmymoGLOs4/hp79bEHeUGgFt5BF4E9n2WjuxgBw3ytUHqGjycSwe0dV92lCaQhVDz3VcsHdZ1SH4tzgEMQrLEnGV7YKChlmxeCXID47e08+HPzWhrlo1qLOV6P+vBz1Zy1qzu8lmLncWvDyRhkrEz/34PszNz0Yj+HBbHWnQuqSAx4FfvgFkHNHbxrjwE3T15cGa+xj46VB0Hn3s2g6DWjRVNQmdB5lWPssLap8Dx49euOPaV/AGnbp7a0erjwxrC6ZuXXZ+9nzbwgf1EhjN9wx3tQq524Q4F4JG7asV4RU/asVyRknFHj6FuDeU9ejiQlSYJMnR7ew0KbgQysSCKBppWIchRm6ABxzdD0Vk7qe9nGtfW3894+3k8H/7L0S5AhezrJ5gMJ86IkVwMQau0HgmT+PA/oBDcoMfQCoq/GF6juubHLP7Q+xcxLhV2mRdXDyQB5geg2vUD3XHUHpZGpLn+IIlPXR1/jlFqd+DKxMJu5YeOkKgTwow1foHzGfpRYIS+w/FjHwziwBS+Itq0eDlCooDA2t7ZZmFiOisR68+8uzVLK6Eq1lKRao6VRao9LnMXqg0HuhSqSLHsjghR4gQ9anJK9rZL6eRuYajVyXitq6caEu0KupUMElu+BOlCngmjTVnPeFsniupEiFlgVUuSIkpO4gt8E3vWl+o+9RO2+xyj/6aLMpHQqe/71ojKfbbxYBWi/+9xLO/88HLzbxv+9SZPmLrdqTj7F+/G9n5/neRv7fo2jkX9uqf/0Yy+N/u2Dt9fjfix2M/2/if9++fM/4X7GX5jG/4ql7nG6NqN8cDp/ulLbCq+1lN3HiaummtlYRxiht6yE1leB84w6HQDcbz+rxzfK4wVqLeYcZsFWKhYqKgrXTk094DqrGwtPQSYzicYNPICqPi0pAfzo+OmvCCzh6HB6Fi/kZDeg4q3qcHn9o7QKojyencNo6Dj/4adHp5rDW4UYMcBhFAXULam5+axBTAP4WhUfzOLs7k9Xk5uz4uAWewx2nx6cV7OkK2NMoySTojx3AP6Jh1IJKYnNfHhZECDTN8TA4wKjpwPjayOt6gdcyEtk1+tgWfBwaEq4lXZQpD/kBmEXuoDeeDG7gJI62QYG7c5rNIo8d+09Pzs4NORYEcKm4FABw5M+IScRNpqnJ5oUQF4Y7RsUzrhiWs4NPR20z4OBqtXGlI1uBLBsAlosq7S4qEMA6fSrBSV3dOA7uTKtipHAfi5DNnBS6+Y51NplcbBJd/w6Ga5Mv9M7qgWdfJCHJkgVVUPDhxlGwmIcpi0fc92YsWMWCexyjYfdCd05RnAUvmBVAfewm7hwb2KBQkd3FDBAXARYNfFCHYrSygRRUjOfyLOr9IubEOInsGoNhUUWUwoDXbkpjcYHTkdvOLw505Ofrv6ZTNvEDzyMhzQsbLfkw98EpAsUUKRnCs3srPQ/sOtm4dNnFA7qSORtA9iywvHoBPcc5/d+CJnemKhS7xgGbsHM/+5B5atUdEUqG80vVYz9egzdME0tLitgt0uq+CFh16zggG+lBnUSlLU1jPrS1lnuojstXLLP4Ovlk4rph2aRp3Ta5B+f8ILUVPgJbhtiiY+WaIwy7jSB4LbCyFWlZr25L1YNORcqlapl6cs3U91PVD1xWFo3Gs8gfU+FRjPO3p0DrOft+sKHib7/yCvx+kG5meDzKvXH9gO0vu921yX05bUoVo0+pETMtI2/SiNINlGRBcpysUGYNKXbRUzIUGczDJU8Yh4BEbulAWQMzCGkSOlpQ4ZVRUVfq6NlOz1REY1W4C3kqzFmiBrpeQgmktcVdIC8zf8z2hTWNgPUa5f+WJpk/QRCK25FTN03zKPG4krCLvBqQ+ZGOo/kchqGepaiOuLCsGCO2xuZ6N8VVNL+GV3B3PaxoektwpsmY+5Bu2A6CIMqp9zbwga/Hp2n9XvuxtyAVEnnR4LfJNaVffk1vl73i3BuhAqzoVwj8AECl3njC7oriI8Bq0ORdSM/rpEuCXilWqcdqSnP9ZPM1JpvrJytdEMvLZV16bF1sCoc7Br2pWu0C6dAt140u8Ze7KQ0LO+Jek6QHKcOhsLviwk+oPWz4lXY8USyVRsMee6UQtLjKvUEtSUK+fFRoqW7PltIipapoURRcWolEUS0tKoXrK/E11LXOoNoEbw51AMpwS8Ws692keDkK5bq22urA7w77o1qPYmfU75NpBCJOosV0RpJFAOsgrMsTP/TI2dn7Ps+6icK7ebRISUr5sQ7PXLUFY5KPsPcIOtJbfr1cHDcSmrtBMOLIG6tA0e5gu1NFoJRuI3FwUqNbGOy6gSX4I00XQXYenbBzpRatreJrGWUcLdgOflCE2tjJa1SbIwCw0+oE9gUjm9wQP4Sthusnqamh2iJe1GsZR1v9JzJECzRvLgzkcxE94MJgsZFGC1InJUBpBQKdmAKwZ+Oq1zq3iYupAtfQ/KU810seqoZXirHoAF4bv+DDheE4usk6jnFl/CEhGN3WbITn6mojJUItCohxpdt9Le3IdtWNbtz5Lu1Y+GdLZr9E6T9f17eWoBsNsiQotr4BjInB89qKg7lvGtpE0h90KmhUgaoNpDyQhEBidgayoVnLZOT0Gg6ITuTg7duj03ODZ69U1b9+PDk1elpWGmWeX4uCSwR9oXelP3I9r8Uf4RIYhYv5NU1MjFgxDAQc57vPZPjSeU7SRYycbbW8IgvmGaZVsZgXUliLvdWGdRwtNrAXh5m+XXmERhivOyrgHGLiWGp2Lu9EvmYAnpHblNVXckE6sDZ0/is4wnUMcPIfbXFOXawTIx9ZQq9hVTfR8dviYFXRwmqJqEbPxeOZ5Z1NEaHE0cTqv/17Ct5LTlu5J0a6YImLxr6B65BBHrY4usyfAzZQtYFdkmVqpsCh6a2fmfjj/fn56ejkf8URGRT7Pds4kEm+iKcJULgNBE78qT9HBosHesu8SRrTMZ6AyV+OzrfRSadO4ckLt8y9uGnp/Tj3z+2e3OEAiLQA5cHVjM5HyOtYoBNxZFkKCOYwmPIshbm8haY38aW5n8F2C/YUS5Am8bgMF1bwFWZJN3j7iGU3VUeO+54fxguW+NQrEp+MeRT6WZT0+Z1mKgLUjXwlOZ+znoHVmsrJVnTxZVmEtGdz8jzW68i7I4sYI3VF3mb7qH/lt5SpqV5XOnEUl02WVU/TQp9YDIq/+7Mo8f8BduAGBuEa89pANTCEmARtzSRdTPKa+DTwQET4O6BTkMCbeu4rBs5v3HBMPfKRCdKopbX+vC16yomqTHlGbsBfUrjvVb9KwbGqvh9OIjLzPRZpY/F/1rUPu3JDumpglaz/FHbcsYopd/2sD8zoc02DfnbvepFlzDzuC7RZ2Bcs4NpvVwjGizSLgJXMfBN53EpRHzeZqn99RlXLU01LNqouc6uSifHXxY/sGTbReKCqK+shGxdMBFPZ/8Y1HAN5hycn5xj3NXzwbn16y60QKhiPrQ6YD5Bzh0DRF8B+hCEsvDtieG0SB9RNKUFOOLDK2LJedUFekn3GeHPohl8Y2WcSq5q0V4xcewIcMc7gGsbSTKCuUNaqtEzZRDuZK8sZ5utcF0st4kGVa22oYuljayGoonqITlcNW+VrYMxXYmT7EzfLEh/0XwScH4uzoqrYNfAtKr8J5Pfb7BIQf77Y29vZw8BedsejjrnvZbP9l4P4VrkJFbuzJycRyAhoOM1mMPTunmzW+BLDnkLDMnPeqlSnUJyf2RsPb7Ychxu1UBnHATXhTaW6bHWwAq74ZvW+S5HYj1dcitqIfacchpIar2zd4t/FDo+Razy1pfBTKTjXAyUoJJNTRpDslosNPaFV4MlWjUcJKengHzcLjLgtmYUaDFtvKrVAWrf51DpZuqhn7Q6joyOoQodtjgAXWNi83i5dhkm1GAsDWc+Jl29fnM8ovn1B+MZ9kTCOEj8lcOaF7dD1HU6WID9gr/X3hZ/6DACODWhKGA50MZyM8UAAYHVsvcdez1KYjLivcTQvoowab6JYdjn9LoqkGCTOomaQUpy2qRxyEPeJDBJJWGKQSlS4uxarwWRbVTmNAqvwj5vFEoNsRqfXm4rWIFfNp2GQeJDSrQHVXkLn0VesEZ+feI343Fwj8mVrRP70a8Tn5WtE/rg1ItesEfkSn5p/5Rrxefka0bhYW3MqWpVcNZ+GSnac1Dm9LaaEOsIvZYkaEW7hOAsW2/WtYhu/RWi5JWy3HrXizpDwS0NyfCqTrATy2i4l7eYGsoXwKrTdxcif/GjB4yMfommno8U6B8zSN4g0dJ6lZ+gSpBppuTpfoIkj8aStVfsQNSmtdWe+Iv4kpwN32v50HFY+EAwbB4Ln6m5JGh50axJkj508qQFU2XnfitA/kNq9gfac1cgDzd0k5GmuqyJCT0EwJ6Cyoz8xK7q4UIOQK9AMyl8YpGrAGW+urhpDLPN8ZzTB/azweEWKpmSihb8rm8DVScKu5ykqkJZutuyt1CegUkqFbSG2glBpFgraSrrUrzmDVV6vSErWJprWq2yde1s/5Aa8uRM6zc42JKHTReAmhN6iprL/8eGnk1fkLHNBz2HUGdn6ry084fgskYCkbDfCtx2qfegIEgesrfr/ISRR0Gf2bsAW1L2mQb2RVz6FPb15lsKahejeaKhIjTdbNl/wqlxxTM5bJVCW892W7q1kjpe53y3Or55iruPjFrcH/rn1GKMod1hVinKrRRRbrC4GXGywuu9AcNvQlrxbuwLpslVheDrtUviIXRZpJU33SUKVyzB+k0Dlo7Zk/K8MuMaweLlEtWErWdoXauNXntSErhZKWuVEt4za7RAgw65/3DrFjGuwbIkgntetpsm3EMhAr2xZ6fTUccB1DQh0+1UDBJyt/McO6TjxY+xgVlfd5P6ydwMuP6ETcKazc39OT5jy7Q0Gg1dK2680cDH7Y6dqKfNLfjINh90vMg9vWA7KwCxSiSwALy/98UZkBFCjnF6nTLNGySLEBYNT85Pj/u7emvdkkQT7xNjGzAKgKlpk+zUqbfbPOfv4ZxgzOv6yj3aB/3px2XO8KKTVLBGM4fai8WIOK4YTxTQ02XtN28hdRmHZmCd+RnknuXocRCk1sYoNMQFHVWNk7odelGPiwjmn2GyfrK2wlWPFj+WcAvShjk1cEGtySseq7vNAUnST+C6skdMLwHhsAh8jL4WJcpVjY4o6x53gm3S4kr5ilQ7+p9QNfYuOyTTYra1owdeXwEqiIDgOs+iTT3Mm75/YG7/mpcinsi9792KcffFtk7dnH99l0RcKVWAMc5q5F5h29LqsvyqtQiSvGBZ5AFRtrL3sGSyT5bKHJIi0CpaQwHkBo/zYuNq2HGC4MQ78MV53qiLADEkW0E7mplFbN8+Nc3wlPPcDWMjA/u+iRUKm4AJzMHkAiIh0/asurYZlAXLw9E46i3JwklPcO5qXW40heBYBBrsdp4bkckuapCxcNssyL8Cygbn48rp466rKaBEKwhSlxhnpdvwp2MPRsVA+yv6GsgtfvjXGyhi0CmvBrL47p2pJBzp2ydxQecb1tfa/RgXLihvyimf3zU5+jPA3bmAahg5peUJSwbQElFv35SSg1H4y+R8acJw8a2pgLCdwJWnWGhPQg5Uwngv+JizYjYmZGtIaqNtp15L2VTRx/8oR/7xd7hNWZE+9A7UDx2ohFKmnXfX+6L/A2JRN2ZRN2ZRN2ZRN2ZRN2ZRN2ZRN2ZRN2ZRN2ZRN2ZRN2ZRN2ZRN+bcp/w/il0MaAHgAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo 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33fBzagA6VaQo4DVHM5HZv48j9QZAMvjkF+DCBBlU0cdn71ZHN6QPMFYd16oNc1+Rkk75UQJ5poEG2IJzZau08ejORU8SViW9vUgF0GUhzAjo7O0typF07ObwuCn3EIafO4tY8n/gnRLIwfya7aMw6mD1nMIVb0FI3T7AlAIvnuvjAVTt23dOCmHPG9DPs6iELQF9scRWzARvmjZBHOScgSdIfF7CQGKGpvjvplZ39tltor0Jzt8ev+dev+BDPHTQVv0U5HkmWYPtn5JwXvUkug2VVjBWy3Guhvd+Rrlh65uj5gAaY5595boNSR3lf/JKxW7lVxB8d4I7V2yGeod0hWj95fvFSQNotpcKFmVQuBtM59sClebsCFafazuOyhc25f6dWfqo7erB4hH/E8DyRMc+t6Fq26OAeP52Bq/ccvvVa5HPv/R4XPifu8639WM5vnXNHI9H6+JWfo7x9AszllPTaommH3UU/Sx6B1tJUhknLhOyFMKCQ3POfxmg7S3dXIjgM6D22XFXPf0ImJPcAffjWk6Wep5t+off477pVXaUd/2uB/h5g2p2GvFvpr4ra/PFixYsGDBggULFixYsGDBggULFixYsGDBggULFixYsGDBggULFix8U/g3WEUmBwBQAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified wireless GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    -e 's#/booster.lp#/modals/wireless-boosters-boosters-modal.lp#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Fix QoS card for 17.2 FW
sed \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/cards/008_qos.lp

echo 066@$(date +%H:%M:%S): Fix QoS classify modal for 17.2 FW
sed \
  -e 's/uci_classify_path\.\."@."/uci_classify_path/' \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/docroot/modals/qos-classify-modal.lp

echo 066@$(date +%H:%M:%S): Remove QoS Upload Shapers tab \(Not supported on 17.2 FW\)
if [ -f /www/docroot/modals/qos-swshaper-modal.lp ]; then
  rm /www/docroot/modals/qos-swshaper-modal.lp
fi
sed \
  -e '/qos-swshaper-modal.lp/d' \
  -i /www/snippets/tabs-qos.lp

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

echo 067@$(date +%H:%M:%S): Creating QoS Reclassify Rules modal
sed \
  -e 's/\(classify[\.-_%]\)/re\1/g' \
  -e 's/Classify/Reclassify/' \
  /www/docroot/modals/qos-classify-modal.lp > /www/docroot/modals/qos-reclassify-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.broadbandstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling broadband-status.lua
  uci add_list web.ruleset_main.rules='broadbandstatusajax'
  uci set web.broadbandstatusajax='rule'
  uci set web.broadbandstatusajax.target='/ajax/broadband-status.lua'
  uci set web.broadbandstatusajax.normally_hidden='1'
  uci add_list web.broadbandstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.devicesstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling devices-status.lua
  uci add_list web.ruleset_main.rules='devicesstatusajax'
  uci set web.devicesstatusajax='rule'
  uci set web.devicesstatusajax.target='/ajax/devices-status.lua'
  uci set web.devicesstatusajax.normally_hidden='1'
  uci add_list web.devicesstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway-status.lua
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci set web.gatewaystatusajax.normally_hidden='1'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.internetstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling internet-status.lua
  uci add_list web.ruleset_main.rules='internetstatusajax'
  uci set web.internetstatusajax='rule'
  uci set web.internetstatusajax.target='/ajax/internet-status.lua'
  uci set web.internetstatusajax.normally_hidden='1'
  uci add_list web.internetstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.telephonystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling telephony-status.lua
  uci add_list web.ruleset_main.rules='telephonystatusajax'
  uci set web.telephonystatusajax='rule'
  uci set web.telephonystatusajax.target='/ajax/telephony-status.lua'
  uci set web.telephonystatusajax.normally_hidden='1'
  uci add_list web.telephonystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.ssidstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling ssid-status.lua
  uci add_list web.ruleset_main.rules='ssidstatusajax'
  uci set web.ssidstatusajax='rule'
  uci set web.ssidstatusajax.target='/ajax/ssid-status.lua'
  uci set web.ssidstatusajax.normally_hidden='1'
  uci add_list web.ssidstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method may cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<a href=\"https://github.com/seud0nym/tch-gui-unhide/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"btn\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\"></i>&nbsp;<small>'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</small></a>'" \
    -e '/isBridgedMode/i\        end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management
sed \
  -e '/<title>/a \<script>\\' \
  -e '/<title>/a \window.intervalIDs=new Array();\\' \
  -e '/<title>/a \function clearRegisteredIntervals(){\\' \
  -e '/<title>/a \  for(let i=0;i<window.intervalIDs.length;i++){\\' \
  -e '/<title>/a \    clearInterval(window.intervalIDs[i]);\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \}\\' \
  -e '/<title>/a \var modalLoaded=false;\\' \
  -e '/<title>/a \$(document).bind("DOMSubtreeModified",function(){\\' \
  -e '/<title>/a \  if(!modalLoaded){\\' \
  -e '/<title>/a \    if($(".modal").length>0){\\' \
  -e '/<title>/a \      modalLoaded=true;\\' \
  -e '/<title>/a \      clearRegisteredIntervals();\\' \
  -e '/<title>/a \    }\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \});\\' \
  -e '/<title>/a \</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

echo 085@$(date +%H:%M:%S): Add Device Capabilities and LTE Band Selection to Mobile Configuration screen
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/local function get_session_info_section/i \local function get_device_capabilities_section(page, html)' \
  -e '/local function get_session_info_section/i \	local section = {}' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.arfcn_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"ARFCN Selection Support" .. ":", page.device.capabilities.arfcn_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.band_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Band Selection Support" .. ":", page.device.capabilities.band_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.manual_plmn_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Manual PLMN Selection" .. ":", page.device.capabilities.manual_plmn_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.strongest_cell_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Strongest Cell Selection" .. ":", page.device.capabilities.strongest_cell_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_modes ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported Modes" .. ":", page.device.capabilities.supported_modes))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_cdma ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported CDMA Bands" .. ":", page.device.capabilities.supported_bands_cdma))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_gsm ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported GSM Bands" .. ":", page.device.capabilities.supported_bands_gsm))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_lte ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported LTE Bands" .. ":", page.device.capabilities.supported_bands_lte))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.max_data_sessions ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Max Data Sessions" .. ":", page.device.capabilities.max_data_sessions))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_reading ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Reading" .. ":", page.device.capabilities.sms_reading))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_sending ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Sending" .. ":", page.device.capabilities.sms_sending))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if utils.Len(section) > 0 then' \
  -e '/local function get_session_info_section/i \		tinsert(html, "<fieldset><legend>" .. T"Device Capabilities" .. "</legend>")' \
  -e '/local function get_session_info_section/i \		tinsert(html, section)' \
  -e '/local function get_session_info_section/i \		tinsert(html, "</fieldset>")' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \end' \
  -e '/local function get_session_info_section/i \\' \
  -e '/local function get_profile_select/i \local function validate_lte_bands(device)' \
  -e '/local function get_profile_select/i \    local choices = setmetatable({}, untaint_mt)' \
  -e '/local function get_profile_select/i \    local b' \
  -e '/local function get_profile_select/i \    for b in string.gmatch(device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/local function get_profile_select/i \      choices[string.untaint(b)] = true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \    return function(value, object, key)' \
  -e '/local function get_profile_select/i \      local uv' \
  -e '/local function get_profile_select/i \      local concatvalue = ""' \
  -e '/local function get_profile_select/i \      if not value then' \
  -e '/local function get_profile_select/i \        return nil, T"Invalid input."' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      if type(value) == "table" then' \
  -e '/local function get_profile_select/i \        uv = value' \
  -e '/local function get_profile_select/i \      else' \
  -e '/local function get_profile_select/i \        uv = { value }' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      for i,v in ipairs(uv) do' \
  -e '/local function get_profile_select/i \        if v ~= "" then' \
  -e '/local function get_profile_select/i \          if concatvalue ~= "" then' \
  -e '/local function get_profile_select/i \            concatvalue = concatvalue.." "' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \          concatvalue = concatvalue..string.untaint(v)' \
  -e '/local function get_profile_select/i \          if not choices[v] then' \
  -e '/local function get_profile_select/i \            return nil, T"Invalid value."' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \        end' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      object[key] = concatvalue' \
  -e '/local function get_profile_select/i \      return true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \end' \
  -e '/local function get_profile_select/i \\' \
  -e '/p.mapParams\["interface_enabled"\]/a \		p.mapParams["lte_bands"] = device.uci_path .. "lte_bands"' \
  -e '/p.mapParams\["interface_enabled"\]/a \		p.mapValid["lte_bands"] = validate_lte_bands(device)' \
  -e '/"Access Technology"/a \	 			if utils.radio_tech_map[page.device.leds.radio] == "LTE" then' \
  -e '/"Access Technology"/a \	 				local b, lte_bands, lte_bands_checked = nil, {}, {}' \
  -e '/"Access Technology"/a \	 				for b in string.gmatch(page.device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/"Access Technology"/a \	 					lte_bands[#lte_bands+1] = { string.untaint(b), b }' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				if not page.content["lte_bands"] or page.content["lte_bands"] == "" then' \
  -e '/"Access Technology"/a \	 					for k,v in ipairs(lte_bands) do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[k] = string.untaint(v[1])' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				else' \
  -e '/"Access Technology"/a \	 					for b in string.gmatch(page.content["lte_bands"], "%d+") do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[#lte_bands_checked+1] = string.untaint(b)' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				tinsert(html, ui_helper.createCheckboxGroup(T"LTE Bands", "lte_bands", lte_bands, lte_bands_checked, {checkbox = { class="inline" }}, nil))' \
  -e '/"Access Technology"/a \	 			end' \
  -e '/^\s*get_device_info_section/a get_device_capabilities_section(page, html)' \
  -i /www/docroot/modals/lte-modal.lp

echo 085@$(date +%H:%M:%S): Add new Mobile tabs
sed \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-autofailover.lp", T"Auto-Failover"},' \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-operators.lp", T"Network Operators"},' \
  -i /www/snippets/tabs-mobiled.lp

echo 085@$(date +%H:%M:%S): Configure transformer for missing WanSensing settings
sed \
  -e 's/\("autofailover\)/\1", \1maxwait/' \
  -e '/timeout/ {n; :a; /timeout/! {N; ba;}; s/\("timeout"\)/\1, "fasttimeout"/;}' \
  -i /usr/share/transformer/mappings/uci/wansensing.map
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change Gateway to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp

sed -e "s/Gateway/LAN/g" -i /www/cards/005_LAN.lp
sed -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," -i /www/docroot/login.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix display bug on Mobile card and hide if no devices found
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix: "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask is/<br>Subnet Mask:/' \
  -e "s/IP is/IP:/" \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong style=\"letter-spacing:-1px\">%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/^  end/d' \
  -e '/convertResultToObject/a \  local htmlLeft = {}' \
  -e '/convertResultToObject/a \  local htmlRight = {}' \
  -e '/convertResultToObject/a \  local attributes = {' \
  -e '/convertResultToObject/a \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/convertResultToObject/a \  }' \
  -e '/convertResultToObject/a \  for _, v in ipairs(helper_uci_content) do' \
  -e '/convertResultToObject/a \      if v.intf ~= "loopback" then' \
  -e '/convertResultToObject/a \          local state = v.enable' \
  -e '/convertResultToObject/a \          local text' \
  -e '/convertResultToObject/a \          if state ~= "0" then' \
  -e '/convertResultToObject/a \              text =" enabled<br>"' \
  -e '/convertResultToObject/a \              state = "1"' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              text = " disabled<br>"' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \          if #htmlRight >= #htmlLeft then' \
  -e '/convertResultToObject/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \      end' \
  -e '/convertResultToObject/a \  end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 101@$(date +%H:%M:%S): Missing proxy in relay setup card 
sed -e '/local content_helper/a local proxy = require\("datamodel"\)' -i /www/cards/018_relaysetup.lp

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/,/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv4 = "rpc.network.firewall.internetpingipv4",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    wan6_ip = "rpc.network.interface.@wan6.ip6addr",' \
  -e '/"rpc.network.firewall.mode"/i \    wwan_ip = "rpc.network.interface.@wwan.ip6addr",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      local ping_ipv4_status' \
  -e '/subinfos/i \      if content.ping_ipv4 == "1" then' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping enabled"' \
  -e '/subinfos/i \      else' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping disabled"' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \      ngx.print(ui_helper.createSimpleLight(content.ping_ipv4, ping_ipv4_status))' \
  -e '/subinfos/i \      if content["wan6_ip"] ~= "" or content["wwan_ip"] ~= "" then' \
  -e '/subinfos/i \        local ping_ipv6_status' \
  -e '/subinfos/i \        if content.ping_ipv6 == "1" then' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping enabled"' \
  -e '/subinfos/i \        else' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping disabled"' \
  -e '/subinfos/i \        end' \
  -e '/subinfos/i \        ngx.print(ui_helper.createSimpleLight(content.ping_ipv6, ping_ipv6_status))' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \    end' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
 -e 's/--       {"mmpbx-service/       {"mmpbx-service/' \
 -e '/mmpbx-contacts/d' \
 -e '/T"Service"/i \       {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
 -e '/T"Service"/a \       {"mmpbx-codec-modal.lp", T"Codecs"},' \
 -e '/T"Service"/a \       {"mmpbx-dial-plan-modal.lp", T"Dial Plans"},' \
 -e '/T"DECT"/a    \       {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
 -i /www/snippets/tabs-voice.lp
echo 120@$(date +%H:%M:%S): Fix default Telephony tab
# Default telephony tab is DECT!!! 
sed \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    if mmpbx_state == "1" then' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-info-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    else' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-global-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    end' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 125@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 125@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 135@$(date +%H:%M:%S): Add TCP Dump to Diagnostics
sed -e 's/    {"logviewer-modal.lp", T"Log Viewer"},/    {"logviewer-modal.lp", T"Log Viewer"},\n    {"diagnostics-tcpdump-modal.lp", T"TCP Dump"},/' -i /www/snippets/tabs-diagnostics.lp

echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg{position:relative;z-index:1;}' \
  -e '$ a .card_bg:after{color:#EAEAEA;font-family:FontAwesome;content:attr(data-bg-text);display:block;font-size:110px;line-height:1;position:absolute;bottom:-5px;right:5px;}' \
  -i /www/docroot/css/gw.css
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.02.06 for FW Version 17.2.0468\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
