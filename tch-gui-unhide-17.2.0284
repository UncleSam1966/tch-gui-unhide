#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 17.2.0284 - Release 2021.04.05
RELEASE='2021.04.05@16:33'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_cron=0
SRV_dropbear=0
SRV_nginx=0
SRV_power=0
SRV_system=0
SRV_transformer=0

check_pwr_setting() {
  section="$1"
  option="$2"
  text="$3"
  if [ -z "$(uci -q get power.$section.$option)" ]; then
    pwrctl show | grep "$text" | grep -q DISABLED
    uci set power.$section.$option="$?"
    SRV_power=$(( $SRV_power + 1 ))
  fi
}

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_cron -gt 0 ] && /etc/init.d/cron restart
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart

  if [ -z "$(uci -q get power.cpu)" ];then
    uci set power.cpu='cpu'
  fi

  if [ -z "$(uci -q get power.cpu.cpuspeed)" ]; then
    case "$(pwrctl show | grep "CPU Speed Divisor" | tr -s " " | cut -d" " -f4)" in
      1) uci set power.cpu.cpuspeed="1";;
      2) uci set power.cpu.cpuspeed="2";;
      4) uci set power.cpu.cpuspeed="4";;
      5) uci set power.cpu.cpuspeed="8";;
      *) uci set power.cpu.cpuspeed="256";;
    esac
    SRV_power=$(( $SRV_power + 1 ))
  fi
  check_pwr_setting "cpu" "wait" "CPU Wait"
  check_pwr_setting "ethernet" "ethapd" "Auto Power"
  check_pwr_setting "ethernet" "eee" "Energy Efficient Ethernet"
  check_pwr_setting "ethernet" "autogreeen" "AutoGreeen"
  check_pwr_setting "ethernet" "dgm" "Deep Green Mode"
  [ $SRV_power -gt 0 ] && uci commit power
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :c:d:f:h:i:l:p:rt:uv:yTVW option
do
 case "${option}" in
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   ?) echo "Optional parameters:"
      echo " Control Options:"
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -p y|n         : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
      echo "                    (Default is current setting i.e (n) by default)"
      echo " -v y|n         : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
      echo "                    (Default is current setting or (y) for first time installs)"
      echo " Theme Options:"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -t l|n|t|m     : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                    (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " Update Options:"
      echo " -u             : Check for and download any changes to this script (may be newer than latest release version)"
      echo "                    When specifying the -u option, it must be the ONLY parameter specifed."
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo " Miscellaneous Options:"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo "                    When specifying the -r option, it must be the ONLY parameter specifed."
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -V             : Show the release number of this script, the current installed release, and the latest available release on GitHub"
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  # File deployed to incorect location by releases prior to 2021.02.06
  if [ -f /usr/share/transformer/mappings/iperf.map ]; then
    rm /usr/share/transformer/mappings/iperf.map
  fi
  # Need to remove existing version or it doesn't get replaced?? 
  if [ -f /usr/sbin/traffichistory.lua ]; then
    if [ "$1" = "V" ]; then
      echo 010@$(date +%H:%M:%S): Removing file /usr/sbin/traffichistory.lua
    fi
    rm /usr/sbin/traffichistory.lua
  fi
  grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
  if [ $? -eq 0 ]; then
    sed -e '/traffichistory.lua/d' -i /etc/crontabs/root
    SRV_cron=$(( $SRV_cron + 1 ))
  fi
  # Add individual files to be restored here
  for t in /etc/init.d/power
  do
    s=/rom$t
    if [ -f $s ]; then
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        echo 010@$(date +%H:%M:%S): Restoring file $t
        cp -f -p "$s" "$t"
      fi
    fi
  done
  # Add directories to be restored here
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      t=$(echo "$s" | cut -c5-)
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for f in /etc/tch-gui-unhide.ignored_release /etc/tch-gui-unhide.theme
  do
    if [ -f "$f" ]
    then
      echo 019@$(date +%H:%M:%S): Removing $f
      rm "$f"
    fi
  done
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      echo 019@$(date +%H:%M:%S): Removing empty directory $d
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  sed -e '/lua_shared_dict *TGU_MbPS/d' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
echo "030@$(date +%H:%M:%S):  - New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
echo "030@$(date +%H:%M:%S):  - New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

grep -q -E "lua_shared_dict *TGU_MbPS" /etc/nginx/nginx.conf
if [ $? -eq 1 ]; then
  echo 040@$(date +%H:%M:%S): Creating shared dictionary for throughput calculations
  sed -e '/^http/a\    lua_shared_dict TGU_MbPS 10m;' -i /etc/nginx/nginx.conf
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified eco GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified firewall GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified lte GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified wireless GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 061@$(date +%H:%M:%S): Add missing getRandomKey function
cat <<GRK > /www/lua/randomKey.lua
local M = {}

function M.getRandomKey()
  local bytes
  local key = ("%02X"):rep(16)
  local fd = io.open("/dev/urandom", "r")
  if fd then
    bytes = fd:read(16)
    fd:close()
  end
  return key:format(bytes:byte(1, 16))
end

return M
GRK

for f in $(grep -rl getRandomKey /www)
do
  sed -e 's/\(post_helper\)\(\.getRandomKey\)/require("randomKey")\2/' -i $f
done

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    -e 's#/booster.lp#/modals/wireless-boosters-boosters-modal.lp#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Fix QoS card for 17.2 FW
sed \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/cards/008_qos.lp

echo 066@$(date +%H:%M:%S): Fix QoS classify modal for 17.2 FW
sed \
  -e 's/uci_classify_path\.\."@."/uci_classify_path/' \
  -e '/-- 18\.1\.c only[ \t]*$/d' \
  -e '/-- 18\.1\.c only START/,/-- 18\.1\.c only END/d' \
  -i /www/docroot/modals/qos-classify-modal.lp

echo 066@$(date +%H:%M:%S): Remove QoS Upload Shapers tab \(Not supported on 17.2 FW\)
if [ -f /www/docroot/modals/qos-swshaper-modal.lp ]; then
  rm /www/docroot/modals/qos-swshaper-modal.lp
fi
sed \
  -e '/qos-swshaper-modal.lp/d' \
  -i /www/snippets/tabs-qos.lp

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

echo 067@$(date +%H:%M:%S): Creating QoS Reclassify Rules modal
sed \
  -e 's/\(classify[\.-_%]\)/re\1/g' \
  -e 's/Classify/Reclassify/' \
  /www/docroot/modals/qos-classify-modal.lp > /www/docroot/modals/qos-reclassify-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.broadbandstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling broadband-status.lua
  uci add_list web.ruleset_main.rules='broadbandstatusajax'
  uci set web.broadbandstatusajax='rule'
  uci set web.broadbandstatusajax.target='/ajax/broadband-status.lua'
  uci set web.broadbandstatusajax.normally_hidden='1'
  uci add_list web.broadbandstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.networkthroughputajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling network-throughput.lua
  uci add_list web.ruleset_main.rules='networkthroughputajax'
  uci set web.networkthroughputajax='rule'
  uci set web.networkthroughputajax.target='/ajax/network-throughput.lua'
  uci set web.networkthroughputajax.normally_hidden='1'
  uci add_list web.networkthroughputajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.devicesstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling devices-status.lua
  uci add_list web.ruleset_main.rules='devicesstatusajax'
  uci set web.devicesstatusajax='rule'
  uci set web.devicesstatusajax.target='/ajax/devices-status.lua'
  uci set web.devicesstatusajax.normally_hidden='1'
  uci add_list web.devicesstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway-status.lua
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci set web.gatewaystatusajax.normally_hidden='1'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.internetstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling internet-status.lua
  uci add_list web.ruleset_main.rules='internetstatusajax'
  uci set web.internetstatusajax='rule'
  uci set web.internetstatusajax.target='/ajax/internet-status.lua'
  uci set web.internetstatusajax.normally_hidden='1'
  uci add_list web.internetstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.telephonystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling telephony-status.lua
  uci add_list web.ruleset_main.rules='telephonystatusajax'
  uci set web.telephonystatusajax='rule'
  uci set web.telephonystatusajax.target='/ajax/telephony-status.lua'
  uci set web.telephonystatusajax.normally_hidden='1'
  uci add_list web.telephonystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.ssidstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling ssid-status.lua
  uci add_list web.ruleset_main.rules='ssidstatusajax'
  uci set web.ssidstatusajax='rule'
  uci set web.ssidstatusajax.target='/ajax/ssid-status.lua'
  uci set web.ssidstatusajax.normally_hidden='1'
  uci add_list web.ssidstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method may cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<div class=\"btn-group\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<button class=\"btn\"><i class=\"icon-info-sign orange\"></i>&nbsp;'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</button>'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<button class=\"btn dropdown-toggle\" data-toggle=\"dropdown\"><span class=\"caret\"></span></button>'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<ul class=\"dropdown-menu pull-right\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<li><a tabindex=\"-1\" href=\"https://github.com/seud0nym/tch-gui-unhide/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Open Download Page\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</a></li>'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<li><a tabindex=\"-1\" href=\"/gateway.lp?ignore_update=1\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Ignore This Update\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</a></li>'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</ul></div>'" \
    -e '/isBridgedMode/i\        end' \
    -e '/local getargs/a\if getargs and getargs.ignore_update then' \
    -e '/local getargs/a\  local proxy = require("datamodel")' \
    -e '/local getargs/a\  proxy.set("rpc.gui.IgnoreCurrentRelease", getargs.ignore_update)' \
    -e '/local getargs/a\end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management
sed \
  -e '/<title>/a \<script>\\' \
  -e '/<title>/a \window.intervalIDs=new Array();\\' \
  -e '/<title>/a \function clearRegisteredIntervals(){\\' \
  -e '/<title>/a \  for(let i=0;i<window.intervalIDs.length;i++){\\' \
  -e '/<title>/a \    clearInterval(window.intervalIDs[i]);\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \}\\' \
  -e '/<title>/a \var modalLoaded=false;\\' \
  -e '/<title>/a \$(document).bind("DOMSubtreeModified",function(){\\' \
  -e '/<title>/a \  if(!modalLoaded){\\' \
  -e '/<title>/a \    if($(".modal").length>0){\\' \
  -e '/<title>/a \      modalLoaded=true;\\' \
  -e '/<title>/a \      clearRegisteredIntervals();\\' \
  -e '/<title>/a \    }\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \});\\' \
  -e '/<title>/a \</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

echo 085@$(date +%H:%M:%S): Add Device Capabilities and LTE Band Selection to Mobile Configuration screen
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/local function get_session_info_section/i \local function get_device_capabilities_section(page, html)' \
  -e '/local function get_session_info_section/i \	local section = {}' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.arfcn_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"ARFCN Selection Support" .. ":", page.device.capabilities.arfcn_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.band_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Band Selection Support" .. ":", page.device.capabilities.band_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.manual_plmn_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Manual PLMN Selection" .. ":", page.device.capabilities.manual_plmn_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.strongest_cell_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Strongest Cell Selection" .. ":", page.device.capabilities.strongest_cell_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_modes ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported Modes" .. ":", page.device.capabilities.supported_modes))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_cdma ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported CDMA Bands" .. ":", page.device.capabilities.supported_bands_cdma))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_gsm ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported GSM Bands" .. ":", page.device.capabilities.supported_bands_gsm))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_lte ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported LTE Bands" .. ":", page.device.capabilities.supported_bands_lte))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.max_data_sessions ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Max Data Sessions" .. ":", page.device.capabilities.max_data_sessions))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_reading ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Reading" .. ":", page.device.capabilities.sms_reading))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_sending ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Sending" .. ":", page.device.capabilities.sms_sending))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if utils.Len(section) > 0 then' \
  -e '/local function get_session_info_section/i \		tinsert(html, "<fieldset><legend>" .. T"Device Capabilities" .. "</legend>")' \
  -e '/local function get_session_info_section/i \		tinsert(html, section)' \
  -e '/local function get_session_info_section/i \		tinsert(html, "</fieldset>")' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \end' \
  -e '/local function get_session_info_section/i \\' \
  -e '/local function get_profile_select/i \local function validate_lte_bands(device)' \
  -e '/local function get_profile_select/i \    local choices = setmetatable({}, untaint_mt)' \
  -e '/local function get_profile_select/i \    local b' \
  -e '/local function get_profile_select/i \    for b in string.gmatch(device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/local function get_profile_select/i \      choices[string.untaint(b)] = true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \    return function(value, object, key)' \
  -e '/local function get_profile_select/i \      local uv' \
  -e '/local function get_profile_select/i \      local concatvalue = ""' \
  -e '/local function get_profile_select/i \      if not value then' \
  -e '/local function get_profile_select/i \        return nil, T"Invalid input."' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      if type(value) == "table" then' \
  -e '/local function get_profile_select/i \        uv = value' \
  -e '/local function get_profile_select/i \      else' \
  -e '/local function get_profile_select/i \        uv = { value }' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      for i,v in ipairs(uv) do' \
  -e '/local function get_profile_select/i \        if v ~= "" then' \
  -e '/local function get_profile_select/i \          if concatvalue ~= "" then' \
  -e '/local function get_profile_select/i \            concatvalue = concatvalue.." "' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \          concatvalue = concatvalue..string.untaint(v)' \
  -e '/local function get_profile_select/i \          if not choices[v] then' \
  -e '/local function get_profile_select/i \            return nil, T"Invalid value."' \
  -e '/local function get_profile_select/i \          end' \
  -e '/local function get_profile_select/i \        end' \
  -e '/local function get_profile_select/i \      end' \
  -e '/local function get_profile_select/i \      object[key] = concatvalue' \
  -e '/local function get_profile_select/i \      return true' \
  -e '/local function get_profile_select/i \    end' \
  -e '/local function get_profile_select/i \end' \
  -e '/local function get_profile_select/i \\' \
  -e '/p.mapParams\["interface_enabled"\]/a \		if utils.radio_tech_map[device.leds.radio] == "LTE" then' \
  -e '/p.mapParams\["interface_enabled"\]/a \			p.mapParams["lte_bands"] = device.uci_path .. "lte_bands"' \
  -e '/p.mapParams\["interface_enabled"\]/a \			p.mapValid["lte_bands"] = validate_lte_bands(device)' \
  -e '/p.mapParams\["interface_enabled"\]/a \		end' \
  -e '/"Access Technology"/a \	 			if utils.radio_tech_map[page.device.leds.radio] == "LTE" then' \
  -e '/"Access Technology"/a \	 				local b, lte_bands, lte_bands_checked = nil, {}, {}' \
  -e '/"Access Technology"/a \	 				for b in string.gmatch(page.device.capabilities.supported_bands_lte, "%d+") do' \
  -e '/"Access Technology"/a \	 					lte_bands[#lte_bands+1] = { string.untaint(b), b }' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				if not page.content["lte_bands"] or page.content["lte_bands"] == "" then' \
  -e '/"Access Technology"/a \	 					for k,v in ipairs(lte_bands) do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[k] = string.untaint(v[1])' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				else' \
  -e '/"Access Technology"/a \	 					for b in string.gmatch(page.content["lte_bands"], "%d+") do' \
  -e '/"Access Technology"/a \	 						lte_bands_checked[#lte_bands_checked+1] = string.untaint(b)' \
  -e '/"Access Technology"/a \	 					end' \
  -e '/"Access Technology"/a \	 				end' \
  -e '/"Access Technology"/a \	 				tinsert(html, ui_helper.createCheckboxGroup(T"LTE Bands", "lte_bands", lte_bands, lte_bands_checked, {checkbox = { class="inline" }}, nil))' \
  -e '/"Access Technology"/a \	 			end' \
  -e '/^\s*get_device_info_section/a get_device_capabilities_section(page, html)' \
  -i /www/docroot/modals/lte-modal.lp

echo 085@$(date +%H:%M:%S): Add new Mobile tabs
sed \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-autofailover.lp", T"Auto-Failover"},' \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-operators.lp", T"Network Operators"},' \
  -i /www/snippets/tabs-mobiled.lp

echo 085@$(date +%H:%M:%S): Configure transformer for missing WanSensing settings
sed \
  -e 's/\("autofailover\)/\1", \1maxwait/' \
  -e '/timeout/ {n; :a; /timeout/! {N; ba;}; s/\("timeout"\)/\1, "fasttimeout"/;}' \
  -i /usr/share/transformer/mappings/uci/wansensing.map
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change Gateway to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp

sed -e "s/Gateway/LAN/g" -i /www/cards/005_LAN.lp
sed -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," -i /www/docroot/login.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix display bug on Mobile card and hide if no devices found
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@lan.ip6prefix_assignment",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix: "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask is/<br>Subnet Mask:/' \
  -e "s/IP is/IP:/" \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong style=\"letter-spacing:-1px\">%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/^  end/d' \
  -e '/convertResultToObject/a \  local htmlLeft = {}' \
  -e '/convertResultToObject/a \  local htmlRight = {}' \
  -e '/convertResultToObject/a \  local attributes = {' \
  -e '/convertResultToObject/a \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/convertResultToObject/a \  }' \
  -e '/convertResultToObject/a \  for _, v in ipairs(helper_uci_content) do' \
  -e '/convertResultToObject/a \      if v.intf ~= "loopback" then' \
  -e '/convertResultToObject/a \          local state = v.enable' \
  -e '/convertResultToObject/a \          local text' \
  -e '/convertResultToObject/a \          if state ~= "0" then' \
  -e '/convertResultToObject/a \              text =" enabled<br>"' \
  -e '/convertResultToObject/a \              state = "1"' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              text = " disabled<br>"' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \          if #htmlRight >= #htmlLeft then' \
  -e '/convertResultToObject/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          else' \
  -e '/convertResultToObject/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/convertResultToObject/a \          end' \
  -e '/convertResultToObject/a \      end' \
  -e '/convertResultToObject/a \  end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 101@$(date +%H:%M:%S): Missing proxy in relay setup card 
sed -e '/local content_helper/a local proxy = require\("datamodel"\)' -i /www/cards/018_relaysetup.lp

echo 101@$(date +%H:%M:%S): Change WAN Services modal checkboxes to switches
sed \
  -e 's/= gVCS/= vB/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -i /www/docroot/modals/wanservices-modal.lp

echo 101@$(date +%H:%M:%S): Fix WAN Services card
sed \
  -e '/local format/a \local proxy = require("datamodel")' \
  -i /www/cards/007_wanservices.lp

echo 104@$(date +%H:%M:%S): Backporting Local Network modal from 17.2.0468
echo  | base64 -d | tar -xzf - -C /

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/,/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Fix Firewall modals for FW 17.2
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-cone-modal.lp
sed \
  -e 's/@defaults\[0\]/1/' \
  -i /www/docroot/modals/firewall-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-port-forwarding-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-rules-modal.lp
sed \
  -e 's/\.@\././' \
  -i /www/docroot/modals/firewall-zones-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall default incoming policy and rules count on card
sed \
  -e '/^local format/a \local proxy = require("datamodel")' \
  -e '/firewall\.mode/a \    enabledRuleCount = "rpc.gui.firewall.enabledRuleCount",' \
  -e '/firewall\.mode/a \    ipv4PacketFilterCount = "rpc.gui.firewall.ipv4PacketFilterCount",' \
  -e '/firewall\.mode/a \    ipv6PacketFilterCount = "rpc.gui.firewall.ipv6PacketFilterCount",' \
  -e '/firewall\.mode/a \    fwd_ipv4_rules = "uci.firewall.userredirectNumberOfEntries",' \
  -e '/firewall\.mode/a \    fwd_ipv6_rules = "uci.firewall.pinholeruleNumberOfEntries",' \
  -e '/firewall\.mode/a \    lanIpv6Enabled = "uci.network.interface.@lan.ipv6",' \
  -e '/firewall\.mode/a \    pinholeEnabled = "uci.firewall.rulesgroup.@pinholerules.enabled",' \
  -e '/getExactContent/a \local fw_incoming_policy' \
  -e '/getExactContent/a \local zones = content_helper.convertResultToObject("uci.firewall.zone.", proxy.get("uci.firewall.zone."))' \
  -e '/getExactContent/a \for key,zone in ipairs(zones) do' \
  -e '/getExactContent/a \  if zone.wan == "1" then' \
  -e '/getExactContent/a \    fw_incoming_policy = string.untaint(zone.input)' \
  -e '/getExactContent/a \    break' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \local fw_status_light_map = {' \
  -e '/getExactContent/a \  DROP = "1",' \
  -e '/getExactContent/a \  REJECT = "2",' \
  -e '/getExactContent/a \  ACCEPT = "4"' \
  -e '/getExactContent/a \}' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User Defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status = format("Default Incoming Policy: <strong>%s</strong>", fw_incoming_policy)' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(fw_status_light_map[fw_incoming_policy], fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -e '/Firewall level/a \            local pkt_filter_count = content.ipv4PacketFilterCount + content.ipv6PacketFilterCount' \
  -e '/Firewall level/a \            local pkt_filter_modal_link = "class=\\"modal-link\\" data-toggle=\\"modal\\" data-remote=\\"/modals/firewall-iptables-modal.lp\\" data-id=\\"firewall-iptables-modal\\""' \
  -e '/Firewall level/a \            html[#html+1] = format(N("<strong %1$s>%2$d Packet Filter rule</strong> active","<strong %1$s>%2$d Packet Filter rules</strong> active", pkt_filter_count), pkt_filter_modal_link, pkt_filter_count)' \
  -e '/Firewall level/a \            html[#html+1] = "<br>"' \
  -e '/Firewall level/a \            local rules_modal_link = "class=\\"modal-link\\" data-toggle=\\"modal\\" data-remote=\\"/modals/firewall-rules-modal.lp\\" data-id=\\"firewall-rules-modal\\""' \
  -e '/Firewall level/a \            html[#html+1] = format(N("<strong %1$s>%2$d Firewall rule</strong> active","<strong %1$s>%2$d Firewall rules</strong> active", content.enabledRuleCount), rules_modal_link, content.enabledRuleCount)' \
  -e '/Firewall level/a \            html[#html+1] = "<br>"' \
  -e '/Firewall level/a \            local fwd_modal_link = "class=\\"modal-link\\" data-toggle=\\"modal\\" data-remote=\\"/modals/firewall-port-forwarding-modal.lp\\" data-id=\\"firewall-port-forwarding-modal\\""' \
  -e '/Firewall level/a \            local fwd_count = tonumber(content.fwd_ipv4_rules)' \
  -e '/Firewall level/a \            if content.lanIpv6Enabled ~= "0" and content.pinholeEnabled == "1" then' \
  -e '/Firewall level/a \              fwd_count = fwd_count + tonumber(content.fwd_ipv6_rules)' \
  -e '/Firewall level/a \            end' \
  -e '/Firewall level/a \            html[#html+1] = format(N("<strong %1$s>%2$d Port Forwarding rule</strong> defined","<strong %1$s>%2$d Port Forwarding rules</strong> defined", fwd_count), fwd_modal_link, fwd_count)' \
  -e '/Firewall level/a \            html[#html+1] = "<br>"' \
  -e '/Firewall level/a \            local nat_alg_card_hidden = proxy.get("uci.web.card.@card_natalghelper.hide")' \
  -e '/Firewall level/a \            if nat_alg_card_hidden and nat_alg_card_hidden[1] and nat_alg_card_hidden[1].value == "1" then' \
  -e '/Firewall level/a \              local alg_modal_link = "class=\\"modal-link\\" data-toggle=\\"modal\\" data-remote=\\"/modals/nat-alg-helper-modal.lp\\" data-id=\\"nat-alg-helper-modal\\""' \
  -e '/Firewall level/a \              local helper_uci_path = "uci.firewall.helper."' \
  -e '/Firewall level/a \              local helper_uci_content = proxy.get(helper_uci_path)' \
  -e '/Firewall level/a \              helper_uci_content = content_helper.convertResultToObject(helper_uci_path,helper_uci_content)' \
  -e '/Firewall level/a \              local disabled_count = 0' \
  -e '/Firewall level/a \              local enabled_count = 0' \
  -e '/Firewall level/a \              for _,v in ipairs(helper_uci_content) do' \
  -e '/Firewall level/a \                if v.intf ~= "loopback" then' \
  -e '/Firewall level/a \                  if v.enable ~= "0" then' \
  -e '/Firewall level/a \                    enabled_count = enabled_count + 1' \
  -e '/Firewall level/a \                   else' \
  -e '/Firewall level/a \                    disabled_count = disabled_count + 1' \
  -e '/Firewall level/a \                  end' \
  -e '/Firewall level/a \                end' \
  -e '/Firewall level/a \              end' \
  -e '/Firewall level/a \              if enabled_count > 0 then' \
  -e '/Firewall level/a \                html[#html+1] = format(N("<strong %1$s>%2$d NAT Helper</strong> enabled","<strong %1$s>%2$d NAT Helpers</strong> enabled", enabled_count), alg_modal_link, enabled_count)' \
  -e '/Firewall level/a \              else' \
  -e '/Firewall level/a \                html[#html+1] = format(N("<strong %1$s>%2$d NAT Helper</strong> disabled","<strong %1$s>%2$d NAT Helpers</strong> disabled", disabled_count), alg_modal_link, disabled_count)' \
  -e '/Firewall level/a \              end' \
  -e '/Firewall level/a \              html[#html+1] = "<br>"' \
  -e '/Firewall level/a \            end' \
  -e '/numrules/,/numrules_v6/d' \
  -e '/if content.mode/,/end/d' \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors and include in Firewall tabs if card hidden
sed \
  -e '/^local ui_helper/i \local proxy = require("datamodel")' \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -e '/^local UI_helper/i \local proxy = require("datamodel")' \
  -e "/modal-body/a \  ');" \
  -e '/modal-body/a \  local card_hidden = proxy.get("uci.web.card.@card_natalghelper.hide")' \
  -e '/modal-body/a \  if card_hidden and card_hidden[1] and card_hidden[1].value == "1" then' \
  -e '/modal-body/a \    local lp = require("web.lp")' \
  -e '/modal-body/a \    lp.setpath("/www/snippets/")' \
  -e '/modal-body/a \    lp.include("tabs-firewall.lp")' \
  -e '/modal-body/a \  end' \
  -e "/modal-body/a \  ngx.print('\\\\" \
  -e "/createTable/i \        ngx.print('<legend>');  ngx.print( T'NAT Helpers (ALG\\\\'s)' ); ngx.print('</legend>');" \
  -e "s/\"NAT Helpers (ALG's)\"/\"Firewall\"/" \
  -e 's/Dest Port/Destination Port/' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 115@$(date +%H:%M:%S): Remove Port Forwarding from WAN Services - Moved to Firewall tab
sed \
  -e '/-- In UCI/,/local pfw_data,/d' \
  -e '/local ipv6Data/,/local pfw_v6_data,/d' \
  -e "/Port forwarding table/,/ngx.print('/d" \
  -e '/if ipv6Data.lanIpv6Enabled/,/end$/d' \
  -e '/local function getConfPath/,/local uri = ngx.var.uri/d' \
  -e 's/\(local help_link =\).*/\1 nil/' \
  -e '/if #alg_sip_paths/,/ end /d' \
  -e '/if zonenum ~= "" /,/ end /d' \
  -i /www/docroot/modals/wanservices-modal.lp

echo 115@$(date +%H:%M:%S): Improving WAN Services card
sed \
  -e 's/class = "span4",//' \
  -e '/sys.upnp.RedirectNumberOfEntries/i \  upnp_status = "uci.upnpd.config.enable_upnp",' \
  -e '/sys.upnp.RedirectNumberOfEntries/i \  dnsrule_count = "uci.dhcp.dnsruleNumberOfEntries",' \
  -e '/local n_upnp_rules/a \    local n_dns_rules = tonumber(wan_services_data["dnsrule_count"])' \
  -e '/local n_upnp_rules/a \    local upnpstate' \
  -e '/local n_upnp_rules/a \    if wan_services_data["upnp_status"] == "1" then' \
  -e '/local n_upnp_rules/a \      upnpstate = "UPnP enabled"' \
  -e '/local n_upnp_rules/a \    else' \
  -e '/local n_upnp_rules/a \      upnpstate = "UPnP disabled"' \
  -e '/local n_upnp_rules/a \    end' \
  -e '/local n_upnp_rules/a \    local wol = io.open("/lib/functions/firewall-wol.sh", "r") and proxy.get("uci.wol.config.")' \
  -e '/local n_upnp_rules/a \    local wolstate = ""' \
  -e '/local n_upnp_rules/a \    if wol then' \
  -e '/local n_upnp_rules/a \      wolenabled = proxy.get("uci.wol.config.enabled")' \
  -e '/local n_upnp_rules/a \      if wolenabled then' \
  -e '/local n_upnp_rules/a \        if wolenabled[1].value == "1" then' \
  -e '/local n_upnp_rules/a \          wolstate = ui_helper.createSimpleLight("1", "WoL over Internet enabled")' \
  -e '/local n_upnp_rules/a \        else' \
  -e '/local n_upnp_rules/a \          wolstate = ui_helper.createSimpleLight("0", "WoL over Internet disabled")' \
  -e '/local n_upnp_rules/a \        end' \
  -e '/local n_upnp_rules/a \      end' \
  -e '/local n_upnp_rules/a \    end' \
  -e '/<p>/a \            wolstate,' \
  -e '/<p>/a \            ui_helper.createSimpleLight(ddns_light_map[format("%s", wan_services_data["upnp_status"])] or "0", upnpstate),' \
  -e '/firewall_rules/d' \
  -e '/port forwarding<\/strong> rule /,/subinfos/d' \
  -e "/modal\"', n_upnp_rules/a            '<br>'," \
  -e "/modal\"', n_upnp_rules/a            format( N(\"<strong %s>%d DNS rule</strong> defined\"," \
  -e "/modal\"', n_upnp_rules/a                      \"<strong %s>%d DNS rules</strong> defined\", n_dns_rules)," \
  -e "/modal\"', n_upnp_rules/a                      'class=\"modal-link\" data-toggle=\"modal\" data-remote=\"modals/wanservices-modal.lp\" data-id=\"wanservices-modal\"', n_dns_rules)," \
  -e 's|<p></p>||' \
  -e 's|upnp</strong> rule |UPnP rule</strong> |' \
  -e 's|upnp</strong> rules|UPnP rules</strong>|' \
  -i /www/cards/007_wanservices.lp

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule.
sed \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 115@$(date +%H:%M:%S): Fix missing values on rpc.network.firewall.userrule_v6.
sed \
  -e '/src = {/i \      name = {' \
  -e '/src = {/i \        access = "readWrite",' \
  -e '/src = {/i \        type = "string",' \
  -e '/src = {/i \      },' \
  -e '/src =  function(mapping, paramname, k/i \    name =  function(mapping, paramname, key)' \
  -e '/src =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/src =  function(mapping, paramname, k/i \    end,' \
  -e '/src =  function(mapping, paramname, p/i \    name =  function(mapping, paramname, paramvalue, key)' \
  -e '/src =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/src =  function(mapping, paramname, p/i \    end,' \
  -e '/dest_port = {/i \      dest_mac = {' \
  -e '/dest_port = {/i \        access = "readWrite",' \
  -e '/dest_port = {/i \        type = "string",' \
  -e '/dest_port = {/i \      },' \
  -e '/dest_port =  function(mapping, paramname, k/i \    dest_mac =  function(mapping, paramname, key)' \
  -e '/dest_port =  function(mapping, paramname, k/i \        return getFromUCI(key, paramname)' \
  -e '/dest_port =  function(mapping, paramname, k/i \    end,' \
  -e '/dest_port =  function(mapping, paramname, p/i \    dest_mac =  function(mapping, paramname, paramvalue, key)' \
  -e '/dest_port =  function(mapping, paramname, p/i \        setOnUCI(key, paramname, paramvalue)' \
  -e '/dest_port =  function(mapping, paramname, p/i \    end,' \
  -i /usr/share/transformer/mappings/rpc/network.firewall.userrule_v6.map
SRV_transformer=$(( $SRV_transformer + 1 ))

SRV_firewall=0
# Version 2021.02.22 set an incorrect value for synflood_rate, so have to fix it
synflood_rate="$(uci -q get firewall.@defaults[0].synflood_rate)" 
if [ ! -z "$synflood_rate" ]; then
  echo $synflood_rate | grep -q -E '^[0-9]+/s$'
  if [ $? = 1 ]; then
    synflood_rate="$(echo $synflood_rate | grep -o -E '^[0-9]+')" 
    uci set firewall.@defaults[0].synflood_rate="$synflood_rate/s"
    SRV_firewall=$(( $SRV_firewall + 1 ))
  fi
fi
# Version 2021.02.22 allowed setting of tcp_syncookies but it is not enabled in kernel, so have to remove it
if [ ! -z "$(uci -q get firewall.@defaults[0].tcp_syncookies)" ]; then
  uci -q delete firewall.@defaults[0].tcp_syncookies
  SRV_firewall=$(( $SRV_firewall + 1 ))
fi
if [ $SRV_firewall -gt 0 ]; then
  uci commit firewall
  /etc/init.d/firewall reload 2> /dev/null
fi

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
 -e '/mmpbx-contacts/d' \
 -e '/T"Service"/i \       {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
 -e '/T"Service"/a \       {"mmpbx-codec-modal.lp", T"Codecs"},' \
 -e '/T"Service"/a \       {"mmpbx-dial-plan-modal.lp", T"Dial Plans"},' \
 -e '/T"DECT"/a    \       {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
 -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
sed \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    if mmpbx_state == "1" then' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-info-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    else' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \        modalPath = "\/modals\/mmpbx-global-modal.lp"' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/a \    end' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 125@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 125@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Add missing insert option on dial plan entries
sed \
  -e 's/registerMultiMap/registerNamedMultiMap/' \
  -e 's/modify", "remove/modify", "insert", "remove/' \
  -i /usr/share/transformer/mappings/uci/mmpbx.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 135@$(date +%H:%M:%S): Add TCP Dump to Diagnostics
sed -e 's/    {"logviewer-modal.lp", T"Log Viewer"},/    {"logviewer-modal.lp", T"Log Viewer"},\n    {"diagnostics-tcpdump-modal.lp", T"TCP Dump"},/' -i /www/snippets/tabs-diagnostics.lp

echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo 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 | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg{position:relative;z-index:1;}' \
  -e '$ a .card_bg:after{color:#EAEAEA;font-family:FontAwesome;content:attr(data-bg-text);display:block;font-size:110px;line-height:1;position:absolute;bottom:-5px;right:5px;}' \
  -i /www/docroot/css/gw.css
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

# Initial invocation of transformer code will fail if history directory does not exist
if [ ! -d /root/trafficmon/history ]; then
  echo 180@$(date +%H:%M:%S): Create directory to retain traffic monitor daily history
  mkdir -p /root/trafficmon/history
fi
if [ ! -f /root/trafficmon/history/.wan_rollover ]; then
  echo 180@$(date +%H:%M:%S): Create WAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wan_rollover
fi
if [ ! -f /root/trafficmon/history/.wwan_rollover ]; then
  echo 180@$(date +%H:%M:%S): Create WWAN traffic monitor history configuration file
  echo "1" > /root/trafficmon/history/.wwan_rollover
fi

grep -q "/usr/sbin/traffichistory.lua" /etc/crontabs/root
if [ $? -eq 1 ]; then
  echo 180@$(date +%H:%M:%S): Create cron job to retain traffic monitor daily history
  echo "9,19,29,39,49,59 * * * * /usr/sbin/traffichistory.lua" >> /etc/crontabs/root
  SRV_cron=$(( $SRV_cron + 1 ))
fi

  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i /www/cards/016_nfc.lp
if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\\1 \[tch-gui-unhide 2021.04.05 for FW Version 17.2.0284\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
