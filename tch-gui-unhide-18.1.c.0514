#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0514 - Release 2020.11.09
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT)   TITLE="$VARIANT";;
  $HOSTNAME)  TITLE="$HOSTNAME";;
  *)          TITLE="$VARIANT-$MAC";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  . /usr/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci get dropbear.lan.enable)" = "1" -a "$(uci get dropbear.lan.PasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci get system.config.export_plaintext)" = "1" -a "$(uci get system.config.export_unsigned)" = "1" -a "$(uci get system.config.import_plaintext)" = "1" -a "$(uci get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts Wt:s:Tryui:c:h:l:f:d: option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   t) case "$(echo ${OPTARG} | tr "GNOPLT" "gnoplt" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "$(echo ${OPTARG} | tr "DSN" "dsn" | sed 's/\(.\)\(.*\)/\1/')" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        *) TITLE="$VARIANT-$MAC";;
      esac;;
   r) RESTORE=y;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t       : Set a light (l), night (n), or Telstra-branded (t) theme"
      echo "                    (Default is current setting, or Telstra if no theme has been applied)"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n       : Set the browser tabs title to $VARIANT-$MAC (s), $VARIANT (d) or $HOSTNAME (n)"
      echo "                    (Default is current setting or $VARIANT-$MAC if not previously applied)"
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) Firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f ! -name '*fon*' | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www

# Always remove Telstra AIR card
if [ -f /www/cards/010_fon.lp ]
then
  rm /www/cards/010_fon.lp
fi

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo H4sIAAAAAAAAA+1ZbXPbNhLOZ/4KDFrF5JiiKFmW7+zImTRtLjc36XUa58ONk/HAJCih5dsRYCSfx//9dkGQEvVmexKn0zvhg0QBDxa72MXi4Wo2m/WePXHzoZ2cnOhvaKvf+rl/dHI08geDwRBwfX/YHzwjx0+tGLZSKlYQ8qzIMrULd9/4n7TNwP8BK0L5hFHwQP8fD/qDEUQB+L9/3B/u/f8t2sL/vt+/mjDFZ+zGi/OvuQY6eDQabfF/3x8cnaz4f+ifHD8j/tdUYlv7P/d/t5sXXBUslTH4PjwlYUbSTJFgytIJJ2oqJIlEzC2r2yU/pew65iTOAhaL/zAlstSacKX4XHn4EWYJE6l9MOPXpegGWcEPHMvScJIX2fyGjEnB/12Kgts0ZIolWchj6hhIKa6mPM55sQwDWV4z0ECDLFU8VVvw7VHa6BCJNHSJLK9hglSFSCee6ap+wEiNjLOscInImSgkoBOmpl6rswZmBYwtydO/6wUVT/L+lUjzEiG3d0vdV1mpmm6YRYQbEZEa6fbSTAd8Yi1NuRSfYFbbRq/gLEQ/2ZFL0zK5BrNdra9DeqQPx8ziaaid+HOWgmvSSEzKQrsTHdHeVlTKKlhypTIFvWNC5Y30Ep54v756d4F91NXjUcH5yvAb6ILRIC/rAfB84L3+5cMHySY4dGdZK8pDDP00Z4F6XXXbZthpgJe0zJVION1lOe3hSj2DXN2Ghag4Y+FDBCGOfZ6ApMq31DmFALH7bn+4JA0dI7U4hbuJsRcwZS/5yyX0ecgnZ4Q6xPPMD6p9AQaD7DJQhKWkUtwEEomKLIHjx0llBskiIjkID5vIK9MAT2DdfZFdwHS7klKfk5DdYPhW8WzGICD+Mhr6fo2ZZmWxCQR8zHdIhwyGBpiItFQcoSvIkcaNfIMzCq3iEOFYIqqUOic+mpcuFP2QCtUMj8ekX42bEYwmeKQWjyVf6ZRURzcksrJIzZG0L2gnJB1J4HNa4Ceoj1+gHXX1Im69qlvtgVtb6NYmOHo10Knao0bnDSttWOM+ofV+7hLbErhZ0qZpFX4Bg93R5792kJQYOWOSTuZeoOae6cHtN4+nUyZfBQH8gPMAeZrFsmfoQVf/BJIAAa31rgMJDhAvXilV6AQiAr3ErRXETGI0UOzpijTKulJMUgqZAHIBqpBDyCv74KP1IhSficaPqcxZekTPVzoTFsdIWHDgwDkjZDF/cYF4ARxmxV8D7q1WCnblb5XysC10mzkuSUVsPhbGOASW2aplnTJRp6vrCdXptHs96eKFOKbPv5tH/cFfz7QdaFFjiEjymHdDLgN6/kLU3XqLTB5gqpRd7ABAT5w/T69lfkbe30hILgQP+yl5Adkig2whwjGtzUFNtAh6ftDSPJMeKAf5rRP2Okmv8y/SeXvaeXfaeU9dGMMptuO0jX3Rq1YADVD7x1gRiCKAMVYU2axb5lsN+pDvsMNk8xVL2inPuMAzqe+rGRAyOb3OQIutqsOtRvS11lhwXklfswPuw1UjarVhaE1l1LRDLrcI0zfYFmk4tlHcpy/YiWm4fQ/gzkfrNyoKHKGrOcSqtiZXHXS8QXTg1jext+AcSFoGw3VfouLvfmh2e9sO4cJITh6xruYy9yyL5OZL9jECirr9YPNUAg+8AObAC4AUXN4bVhX72BIKenCjKRtM6EFO2/Qtg0LkCp528w1y+9H6DC9SIeT5dw1ZXmUcZxVougW0YBwGmGwB1oTDwORGmOYbBhH+KGQeM3wBCfV9+xK+Dwlm6xsKD3ZYMY6X0EXJKRBXZGvwTWuVFwKmRsBUC4B7ny4DkwUwMcBEA/Emb5Dmym7UOlwscLgQcQiW4VS8zWHS3ZITyhxTubnT8J6zHfDA916eSQUXNvuNzZv7rQo4Ly4Z3HCXKph6POYJRMjr97++UdnvPLWdT25DKG28wbQ0m363fqk4+lVPg4D9alKOu7wGNpnbwNtB87PmtEZGTe3x6tkgBzNna03s2LykzostbMX1N4KbFGEmtJWqMwJMrpOCp7I3Ys5De7BZ0UWy2yqxGn64yOp4O95UJXG949X7BsLvgMr8JiGLOB8tL2IithsXQu7I4d2CoxuB0zW/vSoWMNiH/hGcWjKDF+Bs5iGDw5netODRmPYWlaCXxZge/gg/vTSb2ZBOIAzvnCocv7cd/dp0s1jZuZVc/R0SUPGZxfZamLr4LuqcaQGQfOrkAglME9QWzYLOP7o88j/fsP4XZgFWt56sAvyo+v8x1v8G/uhoX//9Fm3Z//rSeII1Hl//P/L39f9v09b8v04avniN3fV/v3/i91f8PzqG4X39/xu0qnKDLKJVm/+94hUPr93XxdP7SvFNlfWxhXZgBlW9qq42LdenVVZVSW2tKdaT7fWStXPZ/+QBKSk5gdcseIPAzyVhpph9jyxd394lCujpVYk1AZC1IqJdCW8LoT59+j8NHvgvQV2SVayq3+lafmNXq/RfP7qt/wuaZ9cyL2NLa++u07uWwT+sWuVaSPE3iN9VvXf1zshH1+z1fxfV5lyXUaT/eAJHAMHG4+LxNIAzQTRRd4FaA7Ou/kyJWCy5u5hjHu5M+RRJr2Q3dtVtirp1J729o07DjflcKBsf3l5c/HL1z3841h+dQPZt3/Zt3/btT9n+C3PBS7YAKAAA | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo H4sIAAAAAAAAA+0aa3PbOK6f/Ss4zPZizcqKH3Fy1zq5pt1ud2fabm6T2b2ZXMdDW7TNqyxp9cijndxvP4CkJEqWHadtcrNzwrSxRAIgCIAgQOrq6mrvyQNDF+Dw8FD+AlR/5XNvcNg/POgOe/uDJ91ed7+3/4QMH1owhDROWETIkygIkk14d/X/SeEK7D9lkRs/oBdsaf9hv9c/OBwcgP17w8b+jwOF/bvd/fGViLjH49jxwm84Bhr44OBgnf2H3UG/Yv/9/mHvCel+QxnWwv+5/TudMOJJxPzYYwl3nxE3IH6QkOmC+XNOkoWIyUx4vNXqdMhrn008TrxgyjzxiSUi8FtzniT8OnHwjxssmfDbu1d8korONIj4rtVqSXQSRsH1DTkiEf8jBS9rU5clbBm43KOWRknFeMG9kEcmGvBy8o4cdRr4CfeTNfjl3pxIhExEsU38+bVN4iQS/hwoa1o1/iyIliwBFNXqqHepibNFkHoumXAifJKtmg5Mh3mwdlpihuycSxY5KBiPk/GSJ4vAJUdHhJ7+cnZOQbXc1wNFzBXBGBwx4TAaUgKVA5odhwGQsmgety0nhvcrMRNjAx1HMqklU6lqRG/TdCqcfFEjccfll2LKnReKqv/GkYTUNtk8S/0EDJm0Les+zIZbMmNh6N20rRb3Xflfa0Fi99+ABhTaHMeMwmkxpuRqiB6AddUg1LrofQB9eyk3uQ235jbczA1ne5YpPBcUbNmjJIiKwVSLtEJOQmRji3sxLzd2aWn6sXDHnojR4T7ftsDZyNgml+hgykXb+URO31emgrQOqD2JUm5ZsIazRceSBbC7dPBBt8lpxSW9SDTHIVTqghKb5C3ImRrvppJQF5qbnHH+etHX2nsWp5N2zx5Y5D8w35c/dUpuz8KxK+LQYzdjny15vUgVpFXTKPtpBnr8WpQ4nc3EtW7KeOL8MgMEUTK5KVaUYnmktQL+poU3uaEZSbvv7L+xtIVXe4eyDwwNnKtTRrVotqZEQFjFBF2UpoGDAcMajcXJxNBSyScrY9CfT89/o7Wsq6gVw67SqPmZVNr4Q0uK8AajoBZDaRoF+ISgNZe3lph4wRWPdLDIl8jFTv74fe8DLpiWltOktVtZSNXSD7T0thwLA7sy+W0eiuR6THCXc7CvnQ9jk1nqT3HHazN7YsF+k6SRT5hEIyMyUQ9An+94MaxMwNcRfZpcO7pF98vd4lStUF94GdWVSKaL98qdsVlGHEX4bMHik+kUXtp0T5LHeyubD7WUkk32G7BbpQFp3SajvBcnEUYYyHf/1Rq54pJMPRbHRzQOmT+gx5XGJfM8TCyxY9d6TkhBn2/nzjTiwP8VoP3EmQt2Pqe/i86PAiJOLr5tqMQuArFFgOlamXQGQFCC8WROCWYbncm8g2nKEf3LzvWs+zf+XAsng62wzVibG15GUzCBIKMjMlSqXT+VM7EMPf5WzBdJ+1Lthrg/QKiHUC7DtFXse2Xp90D845rfeBqJMDn+rk2dhVQSSBmmyU6tpSwHHJSq5I3auctan4F854qJBPIYQIr4Mrjkr1BXbboQLhDeWs9He3osqZT/dWbawGNAff03ngSQePLo2xSCd9V/B8Nepf476Pe7Tf33GPCA9d8fQby79Wb4RQXdPQpGVbvZRBcjsL8w2FPgPQQsm8whV6kWelk16OQ0+l2TZr2Kg35DRttUvOVpywyGzXGKXOpYZmdYby1TLxEsdGSnozup3ULCKPA8yMbXUBQYBpkqVOYZ7nbVXIuFB2LGpryeDMZ6ARiORFHYWd61ATvjfeX1xv0sH11Fl0ydFxLLUcUIpGutskNg/vv6mk2TV6q5rbstmTzpF6esX+a7a3pUTm721yj7jm7Fwyx28nzGFKnOika6ntPUZXBZiO6gJlMzo5PZ9Ob0Lyc2qIpSVOrjTLK1SSGjatE4Ezb9uGCppxpLKWzGHBq7GyxgztQYEeV9hz7cOTklJ9hOMv9VM9uMCwVAhqxKki11XSqY6Q9qKZzxCH9j55/j89dvz85/PRnL4U5OHTmaQ7NyEpY20FXcEl4veZT8ymMgOg9+mfybT1WhZlcKN8gKMQf9yG9spX0jFUXeWRaqwsC7k1cnrhuBIQ1nre3qdp+V/+nZGibKH78nvTw1rRq9pOhXeWfFMttSrbPRBc1iB/1grjDZrsLLB2k0GQ5oGSUPJIBjlNVruB/J8xetjKorn9OXuonI6rh2DCy1ZXFvTkcV5Tm+DreV8WrlIbRPv1oSGblJMJtpg3wtv8K8WW38lVVgQU7urgLJS+2aZjn49XUf/+vzqpzwKIv+rB4s+Lc2VXjrQ8tq2LTsrViVQqRtRmKrJQ/cKia9Rz1a43Z2hZ0uTu8bNaVx3gr/I3iYyp3au1qzsqvjQZ+2RRLM5x7XHboNy9EE2p7GukG4YBMZgtUGRXftwgFM6+yOwtzX0onwZ0FMj3ftlpbifZuOIDEL/Dl52vsuPn7a/87NAh5Uu7LnGEROfcgr1qPGK7hZh2XnczfaQKy98Hi3Zd2jzNe/6H0rRNj4QPk/1n9uMMXq5sFugLe9/z8YDIfD/j7Uf/0u3v81978PD6b9dZL4zce4//3/YDDsNvZ/DKix//oi4QvHuOP8Z7By/tPv7oO7NOc/jwAPeP4jty9wnwXDk5HiKAi2NnUMdP9THHkdXo9sdOXoLEkiMUkTed35mWCKKh9kxiBvO6Bln5JbcptlMuD3kHOtFajcnw/khVVUvIdpeSFenGN916Z7uNJiX4QhT+K94gRoycJTFrFl3JwB3fMMKNffb+CNbq36DKfAmz8BySWHosLjzF+jvo0Uxqw24t1WjvdsgpjLeF4hhDXmevwfKY9u2rkf2PmUrEq5tXKRtlJDra+fZhDZufpAwMajGmtTFaWS9kng3pA0xJnll3jg0cKfeqkLbg4VU7FHqItHUuGJaXjGFJ87iyASn0ApmPqrL2KOKGoEanl5U6XH3nhSdfeF4ju1SuN2eblCjAjzLmtFA5hlL5Klp76/wKeLHfyrbpjpaCa458J6Ph55HPzMPZYV9HlxwqFqKNlKR3sZ0gqnlRpNXm+C0YoTEjAYXXVPahf1ek0vVHNFwLO2H1aeZOGIpdVjDlbuuGMcmHquqdXJr1fj79riJDuh+HJFnp39/MP68w2caVYB23WHQ/eZX+FBiGFViz10+nJ1t8lvf4QcAz92WFlID3cdW9qVHmiM++f//f7BsMn/HwNK9q9G9G80xh35P2T7g4r9h/u95v73UWDr/N+IR6PUyzZ1n10S+N9Bz8GNWe2i234TnH16q+5OITuR5cVRffs9blVFwnU+/ZluSCTsbPMu9u7bSvKmt9g86ys+Jb0jzbayQ9QSh+zCwmy86H1Y117zBZ+c2sWO/NGfvtVMsXoliDPVyWA+0y1Z1astzyy3ZaPqigoXlaWquzZkZVxBFolYViVGQn88gF9Vw5v5kTV+IS2VqG/hPe63zT6LHJOuUqDig38xu/i7zBJMVCWE+vrW/CBMzs/4tBbz1UtZ31CURLI9IsV3eZLxJRhRf45X4KsnfeFazS5KXyDAUvNEttSewgIbMbKI+OyI7lROzrNREelpPNpjx5A3ieNdW8tpS1Hwb/9D9VRaJS7VUmO0l3rNh2ANNNBAAw000EADDTTQQAMNNNBAAw000EADDTTQQAN/Ovgvv2fmUABQAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo H4sIAAAAAAAAA+1XbW/TOhTe5/4Ky3C1RLRpu7dKsCJdpsGmO9jEJr4MVHmJ21gkdrCdlYF2f/s9tpM2SdtxkYArdHOkLY59Xh6fxz4nnc/n/a2fLAOQ0WhknyDNpx0Pd0d7o9Fgb393f2swHOzt7G6h/Z8NzEiuNJEIbUkh9EN631r/TWUO/EciNLv7aefg+/nfGYz2Wv5/hVT5T0VEEvXjj8G/5H9/Z7hzMNoFveHu7v6w5f9XyBr+dUxT2rMvQZL9gBiG4IODg038H+yMmvwfDAejLTT4AbG/Kf9z/nu9TFItCVcJ0TR6iiKBuNAojAmfUaRjptCUJbTT6fXQmQhJwr4QzQTvzKjW9LMOzL9IpIRxb3tOb3LWC4Wk236nkxh1FAquKdeTmCYZlWiMJP2UM0k9DNpBfRX7hVFKlSIzusEoZ/X1hVnONlo0VWcp0WHcRTnXAF2DgdKS8VlQLhSvxfpiN7mUBq+9JGBUxx9ISiKTLg/3cyX74Kg3g4zkPGYRDawR7uKEcboAYicnCrIJ4RS4/HrfmQqJPnbRLWK8AOrVAncR9v6YP/HH9j/2gbVO3c/1xw/gqgDv3fodyqNaQE4ghyZa5yvgmcUad9EVPrOj+y5M8sXkm+WkpgnkhdjpKzdGL+D0RBDTaNzXYoQiEbkso9wkObWGL8zAuptJSrmde2VHdlJIc/Ts7Lkb2uksl1nipi/c0E5LGtm5t/C0E6ngIoylSJ3u6+VrBV9IZDRhQJ6aiMwc5xLkLVPspgjzrhhbt0BgVGA9cUPrrsOmiM8+B7fEkP8pp0pPUqpjEaHxGOGL88srbLLBi8CgZ0IZE1AP4BJNMgE2RM6U5xtvRuMak9Cgwh+sl8s/3x3XvCwprJJsDZdL+IO/ho0NBm4RTBAcPUfVSqpWTJdLJhZgr+D6e9w42df46uT49TFsCSLUEK1RPTo/O3/rVCvx1yieHp2/uQRFm5xNAccVYCtKZahxDdSKWhloXAFUZMhc+C6iUk5SNQMFJgKRUf5gDUB4jm3KjLFDb0ZP55JpqB4W+RijINiYRVjCz5BFv16x3JhTtPjXK5Zbc4p/HR9fnF2s13RrpSpswGIOE6EoHN56UQ6yXMWv3ZSHj2w/UUjlYQhz0zxJ7pAitzQKTDKKafywkytbdIvWNGdJgm4oKm4smkMO0Z3IkYXjOtec8UjMbQTGpwLcQ82iD8Z4SWBLEdICwZJiSrskIGiTUwoVGGA+RTY5BeHgG0bCdBZTY6t/HXPNM2kuzPb7zrb/DKHlzKIlBSF0DU1PoHVQ6UHFIhyQpFDsAfcUvsho8fB9VHUALg8jdgv7JUqNsf1g692I6A7lWQQO8XMbszikSdbsiUlmelAWAL0Z0TEcV/MxqDjLMqpV3y0yHiZ5BBaa3KheuoDmrOtgoGulJRoz7sVCsi/QIEmCkSuKY2yqHUauvBWgm5+cJfDNuSrYUl6TSZEtlnx/BR+jSQS7BfeHCZ0BQ88bnJiuZtm+pAl1FRiBRsXNYb+wrOY21mniGrcZXT+y70/Q0LbgBvRTnuXauQeuXxA4qldlSajU7m61TXc3FQH/uwOeQC+37R4duYq/CBuW77XevRq6KCvfH/oI6iY6td0CglZ6R3dNO16NW1SpKqkmdpPkfpXlvjmGdgAXxTxVKFlmlh578KsnNyfZtx9td94055Zx5Pno63tTmr3HHn5U4cSHLp/AqmnJ5YeQ1V3qFUl0mq6N+s/WKmRSZB6OmCJQvMwnjJY5Nbr3VfUirit56yGaQvfLkJnyucHvipmrWc7u3j7Nv8P+goPm5Wsen5fwkwsqot+4gtbwv/7d1EorrbTSSiuttNJKK6200korrbTSSiu/g/wDV0X6YgAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  CWMP=enabled
else
  CWMP=disabled
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - fon-modal.lp (Telstra Air)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|fon-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ "$RULE" = "cwmpconfmodal" -a "$CWMP" = "disabled" ]
  then
    echo 070@$(date +%H:%M:%S): CWMP is disabled so disabling $f
    uci -q delete web.$RULE
    uci -q set web.card_cwmpconf.hide='1'
    SRV_nginx=$(( $SRV_nginx + 2 ))
    continue
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\&nbsp;</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
do
    sed -e "s,title>.*</title,title>$TITLE</title," -i $f
done
sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp

sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
  -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
  -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
  -e '$ a end' \
  -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
  -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
  -e '/^local mode_active = "default"/d' \
  -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
  -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
  -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
  -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
  -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Add IPv6 address to Internet card if assigned
for f in $(ls /www/cards/snippets/003_internet_* | grep -E '(dhcp|pppoe|static)')
do
  prefix="$(echo $f | grep -o -E '(dhcp|ppp|static)')"
  if [ $prefix = "ppp" ]
  then
    table=content_rpc
  else
    table=cs
  fi
  sed \
    -e '/network.interface.@wan.ipaddr/a \    ip6addr = "rpc.network.interface.@wan6.ip6addr",' \
    -e "/${table}\[\"ipaddr\"\])/a \          format(T' <nobr><strong>%s</strong></nobr>', ${table}[\"ip6addr\"])," \
    -i $f
done

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a end' \
  -e '/getExactContent/a if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix is "' \
  -e '/getExactContent/a end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text),' \
  -e 's/and netmask/<br>Subnet Mask/' \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong>%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 100@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server 
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"],switchDHCP)' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/string.upper/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /usr/tch-gui-unhide.theme
chown nobody:nogroup /usr/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2020.11.09\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
