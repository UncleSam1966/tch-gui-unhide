#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 18.1.c.0514 - Release 2021.01.17
RELEASE='2021.01.17@13:48:12'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :c:d:f:h:i:l:p:rt:uv:yTVW option
do
 case "${option}" in
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   ?) echo "Optional parameters:"
      echo " Control Options:"
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -p y|n         : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
      echo "                    (Default is current setting i.e (n) by default)"
      echo " -v y|n         : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
      echo "                    (Default is current setting or (y) for first time installs)"
      echo " Theme Options:"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -t l|n|t|m     : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                    (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " Update Options:"
      echo " -u             : Check for and download any changes to this script (may be newer than latest release version)"
      echo "                    When specifying the -u option, it must be the ONLY parameter specifed."
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo " Miscellaneous Options:"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo "                    When specifying the -r option, it must be the ONLY parameter specifed."
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -V             : Show the release number of this script, the current installed release, and the latest available release on GitHub"
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
echo "030@$(date +%H:%M:%S):  - New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
echo "030@$(date +%H:%M:%S):  - New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified firewall GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified lte GUI code
echo H4sIAAAAAAAAA+1X+2/bNhDOz/4rCA6BZUCWYzuOtzYOGqQZVmBJ90gHDFkh0BJtE6FIjaLipEX+991Rkt/pY30MQ3VAIpG8O37kfXc6z+fzzt4XlgOQ4XDoniCbT/fe7Q+HR93B0eGwt3fQPTjsHe2RwZcGhpJnlhlC9ozW9l1671v/n8oc4h/rCE/3xXjw8fHvgX4d/68hq/FPdMxk9vlp8EHxP0SlXm8wGED8+/3+YR3/ryE74i8tb+uUG2a1yQKZfvIeGOCjo6PH4g9p39uIP5SBwR45+Azne6984/Fvt1PDrWEqk8zy+AmJNVHakmjG1JQTOxMZmQjJGw2pIyZJZo1QUzIqX8pZy8aSw+RbIlTGjYVXNxWUw4dST03vfGLvU+6TiTYJsz4RcP9CwdZgs7JcuA8qrXK4UG402m1yrty2zrV4w6zQqjHl1vI7G+C/WCeg7TXnfJyLdqLHcI642aqOEmnwpGw44xLYDtsb/ncuDPcoGATrq7RVGqVG392v6sbMMkgcLpcqOnvM6crSQj0XjygvFpaqVshsUw3T1S3QxclSZliCim4+gDsJiylvoZJnPA5TmSiMWhWemN+KiKOhOyYaejSPRFDeXaDy5HmhA5uJycKAqZhYDatjbrxy8rr7OrhlMuctckIOgElcNSCcRID7rv+4tt8FDpaAkigC7YIEHt3PqP8YssJN8IySIIAt4B8NwJq2lo4rn+qTfKp1n4t7vEasoAIKr/GEDa5i91duW1XUEAwFkv1t45oqlnCK6ivEQBx/oA7k4++O9j9zNbWzF+o3TEmv65Nub9jywRwPiNab5qcqLj1ASngf4bvvk37LX3N3W6r/ojNhxS2/zJNibxXtQv6vt+596NYP1Y1OchXhLsurhUJlkVKQko6ey+CshRvXA5xuvS5oiRPXFLXdka7on0Dwpw0ojLlRUNQips5jgVVtAh9IqE4w8ZxLbnk1BRWOw2Pb06Xe7ciafMMPzqCbR2gTaZknKnPEeduYcRa7inFFX5Ya5BLJ5DeQU7BQcMtvuMRfGWN5xSEWSBgya01ZuNPcurdIsiwb0Sxlqge3lbA76SI1osA7Sh4A5IO/juHCZQw507my5h6e8SoSpOkKkGK4gSPmE5ZLBEAHB4PdwNBkRIu6gcCEqoD113H234nyktu5NjdbKNU6SrUD5UeB6n0QqBeKvMpWcTjyrAApxxtIDHjQSt5XVIK0eNjijE4xPwrOuO+xKzwUkiRcNHjga8wynjI7c7ut1L9KJ3gWgBZw9TSOF/ttUhdmAJPlF9nUnQt1FZ8vwIAHuJtz4IdwX5juDryYPf5yiGUgce5WqwI0JrHkV3icX3Nu7r3NFPG3LsDfLBE+UUL6GzUZvo3QgAQp1CbrNf9qNFtPCVnOLD/UQXHSn1wQveLLGrjmObTCSmxuijKB99Ii4GbN73Esbqskc1btsY7vSZ5iraNExCOMkJukJ6COtavSx/f2TBvxBtoTJilJuJ1psMAbooS5gli63e7k0Z07VXnxMt1qJlJsNtIg4xYZ4dEO/kDIlEhTbrNOsShUJPMYLIBTWdVXFaal45lNZNFYrLaBHk77hB5PBJcxbHFyLPkUit2J+8IuS1nmxvS4Uy23dvnZjIejxLvYsEGvBTnWuVCyrrVzT8C0AL8bFT1m0Psa+NqNmuFYMnXTJDPDJ6PmzNo0e9LpcBXMxY1IeSxYoM20g6NOUZzCsjiFWJyyUKjwxdWr0PApIA0Hd3eh9zLiTAnW+u4UfrkY4C0L9897+98f7P/QD09fNU/OpIhuyIwbjk0OKdqNi7Mz16RdXJ4R17lkxx2GJ1gyE+G31jMADgt8Qw52gLMn70+JH+FHEqTENufB8L/+pVNLLbXUUksttdRSSy211FJLLbXUUkst3578A5A2u98AKAAA | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified wireless GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    -e 's#/booster.lp#/modals/wireless-boosters-boosters-modal.lp#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.broadbandstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling broadband-status.lua
  uci add_list web.ruleset_main.rules='broadbandstatusajax'
  uci set web.broadbandstatusajax='rule'
  uci set web.broadbandstatusajax.target='/ajax/broadband-status.lua'
  uci set web.broadbandstatusajax.normally_hidden='1'
  uci add_list web.broadbandstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.devicesstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling devices-status.lua
  uci add_list web.ruleset_main.rules='devicesstatusajax'
  uci set web.devicesstatusajax='rule'
  uci set web.devicesstatusajax.target='/ajax/devices-status.lua'
  uci set web.devicesstatusajax.normally_hidden='1'
  uci add_list web.devicesstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway-status.lua
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci set web.gatewaystatusajax.normally_hidden='1'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.internetstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling internet-status.lua
  uci add_list web.ruleset_main.rules='internetstatusajax'
  uci set web.internetstatusajax='rule'
  uci set web.internetstatusajax.target='/ajax/internet-status.lua'
  uci set web.internetstatusajax.normally_hidden='1'
  uci add_list web.internetstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.telephonystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling telephony-status.lua
  uci add_list web.ruleset_main.rules='telephonystatusajax'
  uci set web.telephonystatusajax='rule'
  uci set web.telephonystatusajax.target='/ajax/telephony-status.lua'
  uci set web.telephonystatusajax.normally_hidden='1'
  uci add_list web.telephonystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.ssidstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling ssid-status.lua
  uci add_list web.ruleset_main.rules='ssidstatusajax'
  uci set web.ssidstatusajax='rule'
  uci set web.ssidstatusajax.target='/ajax/ssid-status.lua'
  uci set web.ssidstatusajax.normally_hidden='1'
  uci add_list web.ssidstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method may cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<a href=\"https://github.com/seud0nym/tch-gui-unhide/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"btn\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\"></i>&nbsp;<small>'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</small></a>'" \
    -e '/isBridgedMode/i\        end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management
sed \
  -e '/<title>/a \<script>\\' \
  -e '/<title>/a \window.intervalIDs=new Array();\\' \
  -e '/<title>/a \function clearRegisteredIntervals(){\\' \
  -e '/<title>/a \  for(let i=0;i<window.intervalIDs.length;i++){\\' \
  -e '/<title>/a \    clearInterval(window.intervalIDs[i]);\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \}\\' \
  -e '/<title>/a \var modalLoaded=false;\\' \
  -e '/<title>/a \$(document).bind("DOMSubtreeModified",function(){\\' \
  -e '/<title>/a \  if(!modalLoaded){\\' \
  -e '/<title>/a \    if($(".modal").length>0){\\' \
  -e '/<title>/a \      modalLoaded=true;\\' \
  -e '/<title>/a \      clearRegisteredIntervals();\\' \
  -e '/<title>/a \    }\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \});\\' \
  -e '/<title>/a \</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Add Network Operators to Mobile tabs
sed \
 -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-operators.lp", T"Network Operators"},' \
 -i /www/snippets/tabs-mobiled.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change Gateway to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua
sed -e '/local telstra_helper/,/local symbolv1/d' -e 's/symbolv1/"LAN"/' -i /www/cards/005_LAN.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix display bug on Mobile card and hide if no devices found
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix: "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask is/<br>Subnet Mask:/' \
  -e "s/IP is/IP:/" \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong style=\"letter-spacing:-1px\">%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/local disabled/d' \
  -e '/ipairs/i \  local htmlLeft = {}' \
  -e '/ipairs/i \  local htmlRight = {}' \
  -e '/ipairs/i \  local attributes = {' \
  -e '/ipairs/i \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/ipairs/i \  }' \
  -e '/if v.enable/,/end/d' \
  -e '/loopback/a \          local state = v.enable' \
  -e '/loopback/a \          local text' \
  -e '/loopback/a \          if state ~= "0" then' \
  -e '/loopback/a \              text =" enabled"' \
  -e '/loopback/a \              state = "1"' \
  -e '/loopback/a \          else' \
  -e '/loopback/a \              text = " disabled"' \
  -e '/loopback/a \          end' \
  -e '/loopback/a \          if #htmlRight >= #htmlLeft then' \
  -e '/loopback/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/loopback/a \          else' \
  -e '/loopback/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/loopback/a \          end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv4 = "rpc.network.firewall.internetpingipv4",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    wan6_ip = "rpc.network.interface.@wan6.ip6addr",' \
  -e '/"rpc.network.firewall.mode"/i \    wwan_ip = "rpc.network.interface.@wwan.ip6addr",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      local ping_ipv4_status' \
  -e '/subinfos/i \      if content.ping_ipv4 == "1" then' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping enabled"' \
  -e '/subinfos/i \      else' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping disabled"' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \      ngx.print(ui_helper.createSimpleLight(content.ping_ipv4, ping_ipv4_status))' \
  -e '/subinfos/i \      if content["wan6_ip"] ~= "" or content["wwan_ip"] ~= "" then' \
  -e '/subinfos/i \        local ping_ipv6_status' \
  -e '/subinfos/i \        if content.ping_ipv6 == "1" then' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping enabled"' \
  -e '/subinfos/i \        else' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping disabled"' \
  -e '/subinfos/i \        end' \
  -e '/subinfos/i \        ngx.print(ui_helper.createSimpleLight(content.ping_ipv6, ping_ipv6_status))' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \    end' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dial-plan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 125@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 125@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    -e '/uci.versioncusto.override.fwversion_override/a \  unhide_version = "rpc.gui.UnhideVersion",' \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         </tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:right;font-weight: 900;color:#808080;\">tch-gui-unhide</td>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:left;color:#808080;\">');  ngx.print( cui[\"unhide_version\"] ); ngx.print('</td>\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.01.17 for FW Version 18.1.c.0514\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
