#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0514 - Release 2020.10.02
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

VARIANT=$(uci get env.var.variant_friendly_name)
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT)   TITLE="$VARIANT";;
  $HOSTNAME)  TITLE="$HOSTNAME";;
  *)          TITLE="$VARIANT-$MAC";;
esac

grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
if [ $? -eq 0 ]; then
  THEME=night
else
  THEME=light
fi
case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
  "005c32") COLOR=green;;
  "662e91") COLOR=purple;;
  "f36523") COLOR=orange;;
  "008fd5") COLOR=blue;;
  "272c30") COLOR=monochrome;;
  *)        if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
esac
ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
THEME_ONLY=n

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0


RESTORE=n
WRAPPER=n
YES=n

FILENAME=$(basename $0)

CARDS=""
update_cards() {
  MODAL=""
  case "$2" in
    c) MODAL="contentsharing-modal.lp";;
    m) MODAL="usermgr-modal.lp";;
    n) MODAL="nat-alg-helper-modal.lp";;
    p) MODAL="printersharing-modal.lp";;
    q) MODAL="qos-queue-modal.lp";;
    r) MODAL="relay-modal.lp";;
    s) MODAL="system-modal.lp";;
    x) MODAL="xdsl-low-modal.lp";;
    A) for PARAM in c m n p q r s x; do update_cards $1 $PARAM; done;;
    *) echo "002@$(date +%H:%M:%S): WARNING - Ignored unknown card include/exclude option $2"
  esac
  if [ ! -z "$MODAL" ]; then
    CARDS=${1}${MODAL}$(echo $CARDS | sed -e "s/[IX]$MODAL//")
  fi
}

while getopts Wt:s:Tryun:x:i:c:h: option
do
 case "${option}" in
   W) WRAPPER=y;;
   t) case "$(echo ${OPTARG} | tr "GNOPL" "gnopl" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue;;
        o) THEME=night; COLOR=orange; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        *) THEME=light; COLOR=monochrome;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOP" "bgmop" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "$(echo ${OPTARG} | tr "DSN" "dsn" | sed 's/\(.\)\(.*\)/\1/')" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        *) TITLE="$VARIANT-$MAC";;
      esac;;
   r) RESTORE=y;;
   n) update_cards 'I' $OPTARG;;
   x) update_cards 'X' $OPTARG;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n               : Set a light (l) or night (n) theme (Default is current setting, or light if no theme has been applied)"
      echo " -c b|o|g|p|m         : Set the theme highlight colour (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo "                         b=blue o=orange g=green p=purple m=monochrome"
      echo " -i y|n               : Show (y) or hide (n) the card icons (Default is current setting, or n for light theme and y for night theme)"
      echo " -T                   : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n             : Set the browser tabs title to $VARIANT-$MAC (s), $VARIANT (d) or $HOSTNAME (n) (Default is current setting or $VARIANT-$MAC if not previously applied)"
      echo " -r                   : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -y                   : Bypass confirmation prompt (answers 'y')"
      echo " -x c|m|n|p|q|r|s|x|A : Exclude specific cards (use -x multiple times to specify multiple cards or use -xA for all of the following cards):"
      echo "                         c=Content Sharing m=Management n=NAT Helpers p=Printer Sharing q=QoS r=Relay Setup s=System Extras x=xDSL config A=ALL"
      echo " -n c|m|n|p|q|r|s|x|A : Include specific cards that were previously excluded (use -n multiple times to specify multiple cards or use -nA)"
      echo " -u                   : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U                   : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                        When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE: Theme (-t) and excluded/included cards (-x/-n) do not need to be re-specified when re-running the script: the"
      echo "      state will be 'remembered' between executions (unless you execute with the -r option, which will remove all state information)"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then

restore_www() {
  for d in $(echo cards docroot lua snippets | tr " " "$IFS")
  do
    echo 010@$(date +%H:%M:%S): Restoring /www/$d
    for s in $(find /rom/www/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]
      then
        if [ "$1" = "V" ]
        then
          echo 014@$(date +%H:%M:%S): Restoring $t
        fi
        cp -f -p "$s" "$t"
      fi
    done

    for f in $(find /www/$d -type f | grep -v -E \(/www/docroot/help\|003_lte.lp\))
    do
      if [ ! -f "/rom$f" ]
      then
        if [ "$1" = "V" ]
        then
          echo 019@$(date +%H:%M:%S): Removing $f
        fi
        rm -f "$f"
      fi
    done
  done
}

if [ $RESTORE = y ]
then
  restore_www V
  echo 019@$(date +%H:%M:%S): Removing config entries added to display hidden modals
  for s in $(uci show web | grep normally_hidden | cut -d. -f1,2)
  do
    uci delete $s
  done
  uci -q delete web.usermgrmodal.roles
  uci add_list web.usermgrmodal.roles='admin'
  uci commit web
  /etc/init.d/nginx restart
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import and firmware upgrade in the web GUI"
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons."
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE."
if [ ! -z "$CARDS" ]
then
echo "030@$(date +%H:%M:%S):  - Cards:$(echo $CARDS | sed -e 's/-modal.lp//g' -e 's/I/ Include /g' -e 's/X/ Exclude /g')"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ "$(uci get dropbear.lan.enable)" = "1" -a "$(uci get dropbear.lan.PasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootLogin)" = "1" ]
then
  echo 040@$(date +%H:%M:%S): SSH already properly enabled for LAN access
else
  echo 040@$(date +%H:%M:%S): Properly enable SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ "$(uci get system.config.export_plaintext)" = "1" -a "$(uci get system.config.export_unsigned)" = "1" -a "$(uci get system.config.import_plaintext)" = "1" -a "$(uci get system.config.import_unsigned)" = "1" ] 
then
  echo 040@$(date +%H:%M:%S): Unsigned configuration export/import already enabled in the web GUI
else
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ "$(uci get web.uidefault.upgradefw)" = "1" -a "$(uci get web.uidefault.upgradefw_role)" = "admin" ] 
then
  echo 040@$(date +%H:%M:%S): Firmware upgrade already enabled in the web GUI
else
  echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
  uci set web.uidefault.upgradefw='1'
  uci set web.uidefault.upgradefw_role='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

echo "$(uci get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  echo 040@$(date +%H:%M:%S): The admin role can already administer the parental block
else
  echo 040@$(date +%H:%M:%S): Ensure admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

restore_www

# Always remove Telstra AIR card
if [ -f /www/cards/010_fon.lp ]
then
  rm /www/cards/010_fon.lp
fi

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo H4sIAAAAAAAAA+1W32/bNhD2s/4KgsMWGbAUOY7trV2KFluAPhTDgAzogxMYtETLxChSI+nIWZH97Tvqh2XLsdMNzYZh/B4skffx+PHueHJRFOe9F0YEmE6n5RPQfZbvw9H0IppMpsPLSS8aRpcXUQ+NX1qYxVobohDqKSnNKd5z9v8oCsh/TFSiX7AKPjP/o/F4FI2iMeR/OI4uXf7/CbT5j74bzvWDNjQLef5F97AJnkwmx/J/Cde9k//RdDzuoeiLqjiC/3n+gyBX1CgiNCeGJq9QIpGQBsUrIlKKzIpptGScel4QoGtBFpwiLmPC2e/EMCm8lBpDNya0P4nMCBP+WUEXaxbEUtGzvueVdCTSDbqyv/VYU61hfTUXxmYT1jO1fSlVRgyYtVFMpGE1ro1rNl9RnlMFdkV/WzNFfQy7hlsD7tfUXMnNwy4tIYZkMqF8S4ER4T8TswIaPi9H+ry6CkE5gguBG9kPmst0DkHTVFh5+EembVSSLUOvOBFzWsYqOcIoTjMME5oq697Y+bAaNqG8KTWAsTxbCBnw8TpmYX1768fb6jmL7kKrmOV4gJ6nQa4NVZbdROfm5v0cDnS4XaJkvqBEtS9vgRdWx9pbXnzm8mJ3OVs2ByUiQX71PhvehfeEryn6A8KGkVQ1aXaxZ+hD5VLhHWarKmEINBVJuUV9umqPatBucgUrhltnB4l9ylmx66w45aw44awOHmfpyswzkgPhk9dUiWXL5RIPvOt2eaooFTD1uF+o0N0MfcrDL7hioG3t7brbWhtVO46rMJxwDCdHH979dMxzY37SdfG864+nXX/suLaJqVvLqxXR7+IYBv7Re17nZ6czzDkTv4L7qgP5OOZE66tbXBoDa7zFyHaVwMg05bQxNbOKZtLY2a91M8USGCb0nsU0qLl4sG1Dfc+2xBzanvHPbr3vE3aPqk2xzokY4TedyYxwbj/i1nDWf41Qu75tlWGsKMT1B+C9pyShyod4lYdH1xv4AmjoD60EBG6OqoilMPY+2T3ni7Q+1CIN7EfgCn/z1WYZfTt+XcupY7kyGS8T2lV0w7Kc0w+21H3B+OCgdGf71/hugD5VN8O6qzTB2/audOnoET32oRDqpupbIYODuByq6NT5bP/+P69in16qQP2/oaLoqij+moriCRVtaq2ObsGdQ67fHD5tLm1z2iPD5L/9H8bBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcGhxZ/ZN8bDACgAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo H4sIAAAAAAAAA+08a3PbOJLzWb8CxVzKYg1FS7JsZ5I4l5dm1jcZ2xfrclPlybEoErJwoUguH7I1qexv3248KJCi7DiBZ+vqzFQ5Ih7djUaj0d1o4urqaveHe3768BweHvL/4Wn+z38P9g6HB/uH/f3R8If+oD8aHP5A9u+bMHzKvPAzQn7IkqS4qd1t9f9HnyuY/8DPwvwepeAr539vf3+vv9ffh/kf7PdHD/P/Vzzr+e/3n3gFjWg6T+KVG6XmcOAEHxwcbJv//YO95vyPRqO9H0jfHAnbn//n8//8cSdKAj8i0SwnRySjfy9ZRrsWvFp2h82w3PWLImPTsqB519qlRbAbJPGMXe4uFun02nKItUhCatnkH0fEmrGIWqSY07iT0aLM4g6Nw06n1yPj2J9GlHB07E+/YEncuaRFQa8LF/+EycJncXfnik5L1lsmLKA7dqcT+oWP8KM1eaRrVaVAZcm8OY1SmtVaABi3qoFWQHNB42Jb03o1tJd8yWmeA6XQPr68doPi2pUlyBz58+ncz18FAbwAf4AqP8oFb3osniU9XgIrCjjE+SIAB2WWAcIyp1mWAF+OFDQXmIIl3TUNLE2zBDnrpX4xh6ZWGTCXo8iWUBvTwpUtXGuzUzkt86pnlgaiZ9XjpdWCSPIDetQ5g9T95hfBnIZvZJNug76Kbo7GgwVWUIfgMJHt1cwhpO56IPLvy8somQK7KJeWUAihBkiwUC840qsvBh/dpR+VVIidpAMn4Awoa8I6An70LeLH4e1TKejamMwKNvL25h4dGuX0pg51adFHQBeMk6dNy+dOVaj4oM1tSINC1bu83nI6Xzqbczm+9oNCzmS3icZuoleYclAI8aU7S7KFD5P4OAct0Ozs1nvZG2PB4eKMNKDjbDQRwtgGUqvUugMpE+vt+M2EjGUx+Q1kiyjpESz/qi4hy1WfNd81yZZ9P3+RVUvxAiwgngNvLCapz7K8thwUH0mYyG6xv9AYuMCVRLpLF9cNKNKX3Yv/eex+/NEWcr90gao08lce7wb6NWYRZ9BmjSX50yD5Aus/AsZ6D8GY7W3LjHE+6Ly4YkDsiaDfEstI8NnqPH7R6TwP2ZIEkZ/nR1ae+vGe9aJetvCjCG0NLH/cQXWaAhOKbqWl3SCjMN1voM3fqB/SrDuxJsokAQmrlo6jEePoK9q2kRQdq5wBgXM9BTBjqCVwJLiBKaWZ0ctqojsXoBuQG9Z/xVDO8oJmNCSgHZIyLkDiocFANHi/pXpYr4YZ1+u/aEjjcoE4Fcq+o2DjLwGmr7dXC/EzNHOggQMdhTDqo2uVSRyfJpAZzZtauda82jxcF0G7ruVCrRrSOVctXFi7xSqlXQBn8/VacMmQWhKroabSzrzFmmuqmeSEGnvt9UcyWMsM2RCac7ZII/qOXc5BHwFPJAdcF1Y7yTRMNhf9GwmCedqgaFinaHhHioZbKOKo7GqpVfD7dXR9ie62Nr06z3o1guUsaM1BbfTlQNfLced5Wi3ZcorSklsvwBJbt6hr/8nO45A8zp9PM7L7YsepEeRUK4q/2nYNz26KcHFMm7uAVPkg0C0VfatB9M3cr0Nw6juQ5D6qjV3QGxv/5UHG0uLFv3Utd86VEqyqtCwe1RSg7SZx1wrmfnwJG+2sjAM0b7v2Z+j26MpnBZ9nN6OLZEnfIHO71pyh0fzFfvZ8V+JAFSVp+avsf/T/wiRA7+beIgBfG/8ZHQz7/QH4iYMhOIUP/v9f8ejzL21R4zjuHv/Z2xv1H+b/r3ha5l/4IgEYA0HljHwXjlviP4eHo8PG/B8OMf73EP+5/6fXSzNaZH6cR7A1hk/BLiRxUhCxlcEuy3KCZuDWCA4Un/zSG/3UP9wnH2jG/SnQ4mRw0B8Nf5LVMLcHo2edrwn3CKO0JaSzGdERTdMk3wzqiMZaVdX8rmEgRc+C5rl/SbeSVa+vOsrQTiN29HQd4pHO5GtopJGLRikDm5y+TqCZr2JGy5Px+ZaGJ0k8XqTF6pzbZlXkw0/P/MznvkUHus2u8wF6JG/pEvjtntMM/8/dD8h++eYO3LP56hj4kM18/vq7B8t0vN/3zk7P3/DQH3gvAtrwrtCG7dC+aBR/wCE1KMaR6zjFe9VLTptDkCuL/LLBJBDmMKL/WdJs1VUscSpUldQFcyR8yFF/BiPTmVhvVVTgi9PhvtbEGsdViYYftCV4+1G5iHPRn/R64F10pM2IQQf0VmGoMgJgSQcLWSmnyHqDYKAAPSl8x3UCr2DQhkkcraCoyErqdDAgi1iEKcp/aY730CJfCFLnCCqGNSrOZTBIkSEtWI2KsSpRZOTggwdICPdgcHySUxolos1tpOzVSDnLWJKxYlVjSlVU0aM1azDmbnwY1ZH7wSdaSDVGzsAVS0KNkFp1VbumqbXa7Lzt1+h9zQryvj51UCRLKrrWRWZpOajLEMhtHFByXqawfXCVppGVl1phRZnsU+9iVMK+4Ca18FdTSkC/flCKsVxMaXYcv+cbGovB6/ZDksyI0pxnSQ7+2RIbku7y7ETp5MsPx+PzYNhQJRrk43gMfu45J6sr6a0U+tnJFkWtoaspj+Va6wnFUGk5sULhVVIETJUrApucnTidFmlUVVIg1Ot6bnR4DT2WpAgnXwc42dHAGToDDBrVWlywj0efO4Efj0NWVJIF769CJGAG5qR4fwtM4kTIIh4c4sNtRJI5+J9/P8eIMrOdztTPqTy5aLS8y6bzOF/vOlzHuu9YXrgCxRc9yCmGh9EwD6gYOLJAbiu8rHVvmeCAxAZT2wucOkthR3Awhiv/aDNvtxIwbCGgKZF3I2C4nQBl62RMWixLP+OBYDarXv3sMhfnJWI2YE139TqbvCB9EZwRcPCv6xLr3y38T28q2L6OB5FmCKc1BiwEiEuaTWrhpD9qcV/uufSmSbgiZYrrznrxR2dHcTlKmxYcnuh0ohQstALlrWvtomuUxyxNaZHvikoWB1EZQg+Q31zYrKJjgw6UUUUI/u7NYbn+CTaKH1lkQYt5Eh5ZOIcW8Xmk6MjasZ8RnRfAtlrJjqBfKyKbHPtNGKF5t2mPgimcVpW23QCNFDMahTB2QPI8opcwNS8aFCnDh4ACsxoAnu/KPhqLoZkI0nOdVun1z1zzWDh/MJvJbIZvfFKFQSU6z4tFJNQP/rp4hH9/HGC4cyPOx3GAkAA+ArBxhWJEX5qOlqNsw4uq6KNT0WZ/C/zhGv5wE/6wDl+TDESyISq7Gud3BDntA99Zz9HORiWBajVtIsLM1Rx5Bar+Ml7giaHiDVavJ6wNVJMFXLW0a5UNRbmh5zb15ybPdzQubBJkZuDD+xn4cKt+3dTbtw28KSlNQQFFgsuTx6X/6DS0waYy+DlJYP/r4mLfHk7eGv9pHF5/T4zh5vgPT/xrxn/2oOgh/vMXPN8d//nqkA5L9C2XJVWIBERY2BsqoJMl1yuyLdnnXxUfup/w0DdhK8CJoRm3t3E+XPEqK4V57JASjA3GE0VqdrOjXmX9rVlOuvGHxFFgmbBg+Enc2en5xNLTmvRjMQkOuqHb5HF2o+XXtV292TorR3bj4LgYoDl2e46QU+v+VA4N7BwJxE/TaNUVCjWPKE27w754o9es4Pbr3yaTM+/k1HtzejIZn0zWJ7Ig97/QmGboQ8EyAREnn+iK8JN2ekWyEujv9V6KXDcyIiG7BFdo3dLtqNNAdErf8/Jf6aqK/CUpRbazxMVfsnC6KmgufyO2I1gEj/vD3y37aQbUj1TnGXpQ2A/M1ZAud0uBF+2TTBzKQwvOTQ4R/a/wKUYCEAT8DKIkxyCkOFbmIwB0T6WLxfs8xb9d2N9H8qBUiXzMQBh+5cQ1BtYWydMnKLw51lkPBvJYXd4K43a52AgQfkVcMG8JDFZTmKcRCMw1rCKa2tXaScEt4ds4rjaa4qG19RQmocoVAo8CtuJ404nFdJ8c030kRBQrDgpTN66fXvL8oK7szpM2BKKLR+J/YUbw3/okikp9umJaXCXZJy9Lg1omoCwHHaJ8Zaulx12SAZuYKiZe+XjgXsy0uIJKnGIyS6UFp5apouIAfA7EXz0BTSRR2Y710rLRDLNclUQlokwwYiCBpxRoRREWqRyVJeZEFglPpwrnQbo8sGS21br8IAtlh2pAF4+qn2JCPnNauRE86cqfNvlSKRWVEnt+fEZOxJjVchfZnPVQ8g1BZEwf9WYZA4iRyOzSY26ttY3AoFjIdwgLyqhgI5C78LMVEQk0mZ/VI7pYp1dV9Mk6L9MqvznEeyNBZ0lW3ECUrN5OGGxevEWDupDO/DJCsqz9/kH/VnoHt9B7hvvVJp2qeIO+VFYYZRrH1s4wvaqdmNsZ9e1ceicDCzXK+LJpksQLt5DSEPjaFB5+O3Hj6xSt1QmrrU8QIFGhU4c5UVSVbmfU4Mm3U1PFPjVajuV7RQfTGml4UUveFJqvlN3twXkS0Fjk3elRehlfP/2wGVs/5W60H8kYO1qgqnXW0jrT2tUVqB5O31zrWywQcXh6nGMTZ6MjWjqnWfemjsdnzk3Vb7mDhCrcrsCfSXcH2NE1B74Bv2XM245Iun3nADzxfRvPjKTwbmHXe1XvdCp5246ldlxSyZCtSURlZiV4gMAD+l35mYSXU14FnUJ67TTy08E5Yb6w7rjBX31ZQOMl91ygOGxshPb6UwEJRGYvbACRFdX/L+WPi/5HVbYJLS9nM3a9FVhQ5gWY/PCWsZC6sytZ7ol+LfDmMIUfKhKlHZmX067s6ZBB5dzNgEvrcquHKabckUPPXmbn18QPbKKuchm7bS1ETq9F7O3OWfUlirIpX1qu2zp9mEPc2MGsvsv/WcLJ+H74o/7AG/UPPZl86RVcLxNrr484vh8+6Dhwur0iytFSjUU1IjADPvADBDYwBCyKKkb4EdKNma8mqdUQALgly7kWB/spT5M455zH7cw4soz+L9TX8IyeHJjBA3xiMxaA6vJCmhZzBL5vBvScBp+8oog8cGC8MM5hAEGShQZnJIlnsO/GAfVAKxcJrLQyYx53CGD/LxATtjGNTJ6QwXigBPZ9b7ryhFlyL2PLYDfxc+pxmfBnsAd5PJg5M4wPs7W8vye5xz1rBB3mQWocOlf4CJ2amZiQ5VI5eVA8XdHaQjHDnTAO72X5hcVihvPrr3g4axYMn+ztGYbsqci3Ud0twk+AwVNfeSD3Ax8ENuL7UFIWBrHlgZ9Sb+7nc+NA8WzEHNCZzyJvSuf+kiUlhws2kJlFBGr0E24H/ENkFBeaRujXGIGdJQvPj5N4tUjK3OMxQ/ycA9CUsb+EQYlPQAygwk9CuI7G7RlwhtyFhXowC6fiIxFsL+Pw5mZmniSfvBn4bfP1ijMDWe0H0MfD3CtcBCahX2I2k7egIfP1pTXoGzLzKhf5AMGC12JGuVVgPeE4i4+T8JDhkjOfpcsDD/6MqlLPjCm4RiyyYsCykfPdM4NgAcKa8gw0GQ8CI6CMQ5h3g1KFSOQBlQyk4AfI1k9moMe49PIrUNv1fc0MdEwUWLA/wTTyS/SlCrQwje4/4Fot/WBV01T8CMwQ9LV5jysuM2nbN/bMUX/PnBfUgL3fHyHsoVnYGZ/Lah9ChRfiJ89mkPjRwuO+gzlhQaA4jfdk3dbAmzZvMY469cGTSmYzXfub8vHXcVpvAoYLGBlCExiDvhaY0Oy2K9xiYSuYN83BRmDcxN3m6udlioYLNSX3iwR2qnkShV6RxNRbn/sbY1dK/cLD2BlakXyTBGFFBAemMBTacRKv4zpoDyy8iIm9ceFfc3FGaebtuUNrBr2yI5fMN6dR8zD1Qlgdori6JUiaYxFdgr+D3xyYm6g6Ru71o1hwmaMx/8DhPvFIu0B4GMHSKDplz6hAcJQkMm5mBgUNEtyK6sd08tjSLILmoalRJBtGnynTQ4GubJrqQhgj0MH/UTlguM5zsAARyZPBT2YsEJFv7MX0upAzDLXocZdZPepjRpw4l7zXfLcdmnK2BNC3QmLMAv35Pij9j/sAOhnI8ZuEORR2i1mgIzVRZoBGOWzsQbYSMQ6RY8gVex55SzORP8Txia48PNvmSjz3ubNUUCg1hkHTeoYWGwCVJpW5rZSHPlNfVCaBCIXKi1FMY0HjQ/G8hKoZiw3pVRnF0LhjhuV4WBJELPNEhplxX67MqSfSpdEqwzMAPzA4uXXw0ugzBjrzYBuLkVx1ZKwO4PFLL/K6ZFFI+PcWtVNrfOen27YJOnh6uRexBSvuyXdtYqjc1yA3w0r9bJqfBDb9A9DYHhSjm9A8uFGpzWGo50crtJbTirSd6K8/dcNP9a3aQNeUNG5ztGzS6yFUP0tgyZMiIT4wNCSYaU1g1xAXQqrUj4IuUo6qyphojAw8ishLIz92X1Y/vUvMzGbrLFaR8LmGtT2R/KvAIT80aFwmpAxsYS9P7Lx1LHkQuC/hz3fQvxXEfdEsfLoZi8AldV/qb55fhiz5jrHcGfQ3jpFnHBOHZ9Srm/G6lfCeneg0ccRxIhMAMOvHcvg3pzwfuZ1bmO3Pc5SBoK/kQluXbxtd47JGLZVKfHt9QzaV3ewD3DjGCp66vE2TyJzsWr4U8FBcZMlZhSOHej7kdt6LlHZsVqkQxREYthi1Xbujr5UY/bphogDUuCLrYhYJJgl8IY3urAbXCg97V5y6s6baNpn2LdC3645vhXj3lb0dk8E11kJ06wLbTkzz/lKRGKpdbqBdQ2DJ7ax248BN+zog7uQ8xrkt0R72v7en5OSUvHozOf7wajIm56fvJ8cnv5DT9+S/j9+9I6/fj1/9St6O340n404yxZAtv15V0uMhQa5bfWnjdEDLYIPwlLetUpgTed/COm0Sy6o7F2oqwOks/OtxXACtyAP98gfJIPzazlEvN92no105UP9qwWnwWr9xQE/P/RddOSBhq8/ShKfZtdu/Z+PYt37HphoJvXnEW19Y4tX6yFGpOrxqR907mahvTrT98Oa7m7lbI2/KbIU4m90ZZD3ZUn0k17iV4c6XMtjP7nwpw7N7upXBxKUMGicy1ryRof4Fdudbr2OoGLD++r9xVTYGoZFyrrWmZVFwacMrinG19rjC4VcNS9FzVI3YQ3mVLn246jeRzGYmsYBECjQ3fNFPGPC89sE5zKHV+nH+5pf+v/Ae5DgWPjpSdPs3/ptf+Vc3PIzXx0q1Tw31Ox7qFR9FWrX6PA6V1LaWtTvM73TFQXPY2kdjt4+3/UqDLeq6pvnruru+Hdx2kwHqEO2eki0XX9TvM7hlLanbDDo33Wbw8Dw8D8/D8/A8PA/Pw/PwPDwPz8Pz8Dw8D0/b80+nAc4uAHgAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 070@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd -a "$(uci get cwmpd.cwmpd_config.state)" = "1" ]
then
  CWMP=enabled
else
  CWMP=disabled
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - fon-modal.lp (Telstra Air)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|fon-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | cut -d. -f2)
  fi
  if [ "$RULE" = "cwmpconfmodal" -a "$CWMP" = "disabled" ]
  then
    echo 070@$(date +%H:%M:%S): CWMP is disabled so disabling $f
    uci -q delete web.$RULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
    continue
  fi
  if [ $CREATE_RULE = y ]
  then
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    echo $CARDS | grep -q "X$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070@$(date +%H:%M:%S): Enabling $MODAL, but disabling card display
      uci add_list web.$RULE.roles='nobody'
    else
      echo 070@$(date +%H:%M:%S): Enabling $MODAL
      uci add_list web.$RULE.roles='admin'
    fi
    SRV_nginx=$(( $SRV_nginx + 4 ))
  else
    echo $CARDS | grep -q "X$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070@$(date +%H:%M:%S): Disabling card display for $MODAL 
      uci -q delete web.$RULE.roles
      uci add_list web.$RULE.roles='nobody'
      SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    echo $CARDS | grep -q "I$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070@$(date +%H:%M:%S): Enabling card display for $MODAL 
      uci -q delete web.$RULE.roles
      uci add_list web.$RULE.roles='admin'
      SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
  fi
done
# These were incorrectly enabled in release 2020.08.08 and earlier
uci -q delete web.mmpbxsipdevicemodal
uci -q delete web.mmpbxstatisticsmodal
uci commit web

# Modify management card to allow it to be suppressed
sed -e 's/^if assistant then/if admin and assistant then/' -i /www/cards/011_usermgr.lp

echo 070@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
sed -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
do
    sed -e "s,title>.*</title,title>$TITLE</title," -i $f
done
sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
 -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
 -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
 -e '$ a end' \
 -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
 -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
 -e '/^local mode_active = "default"/d' \
 -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
 -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
 -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
 -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
 -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
 -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
 -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
 -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
 -e '$ a end' \
 -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status to LAN card 
sed \
 -e '/local dhcpState$/a local dhcp6State_text = ""' \
 -e '/local dhcpState$/a local dhcp6State' \
 -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
 -e '/@lan.dhcpv4/a \    dhcpv4Proto = "uci.network.interface.@lan.proto",' \
 -e '/localdevmask = /d' \
 -e 's/localdevIP = "uci/localdevIP = "rpc/' \
 -e 's/dhcpState/dhcp4State/g' \
 -e 's/DHCP enabled/DHCPv4 enabled/' \
 -e 's/DHCP disabled/DHCPv4 disabled/' \
 -e '/getExactContent/a if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
 -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
 -e '/getExactContent/a \    dhcp6State = "1"' \
 -e '/getExactContent/a else' \
 -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
 -e '/getExactContent/a \    dhcp6State = "0"' \
 -e '/getExactContent/a end' \
 -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text),' \
 -e 's/and netmask is <strong>%s<\/strong>/\(<strong>%s<\/strong>\)/' \
 -e 's/localdevmask/dhcpv4Proto/' \
 -e '/^\\$/d' \
 -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/getExactContent/a \ ' \
 -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
 -e 's/\r//' \
 -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Only show WAN Services card if WAN interface is defined 
sed \
 -e '/uci.firewall.userredirectNumberOfEntries/a \  wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = wan_services_data["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and wan_ifname ~= "" and session:hasAccess/' \
 -i /www/cards/007_wanservices.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 100@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server 
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"],switchDHCP)' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
then
  echo 105@$(date +%H:%M:%S): Add DumaOS button
  sed -e '/id="basicview"/,$ d' /rom/www/docroot/gateway.lp > /www/docroot/gateway.lp.tmp
  echo "            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" >> /www/docroot/gateway.lp.tmp
  echo '            html[#html + 1] = T"DumaOS"' >> /www/docroot/gateway.lp.tmp
  echo "            html[#html + 1] = '</a>'" >> /www/docroot/gateway.lp.tmp
  sed -e '1,/if not bridged.isBridgedMode/ d' /rom/www/docroot/gateway.lp >> /www/docroot/gateway.lp.tmp
  mv /www/docroot/gateway.lp.tmp /www/docroot/gateway.lp
else
  echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
 -e 's/--  {"mmpbx-service/    {"mmpbx-service/' \
 -e '/mmpbx-contacts/d' \
 -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
 -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
 -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
 -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
sed \
 -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img  href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img  href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/Data Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 160@$(date +%H:%M:%S): Add a favicon
for f in $(grep -l -r '<head>\\' /www/ 2>/dev/null)
do
  sed -e '/<head>/a <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>\\' -i $f
done
echo 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 | base64 -d > /www/docroot/img/favicon.ico

  echo 165@$(date +%H:%M:%S): Add or update card background icons
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(find /www/cards -type f -name '*lte.lp')
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i /www/cards/001_gateway.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0b2;"/' -i /www/cards/002_broadband.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i /www/cards/003_internet.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i /www/cards/004_wireless.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i /www/cards/005_LAN.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i /www/cards/006_Devices.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i /www/cards/007_wanservices.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i /www/cards/008_firewall.lp
  sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i /www/cards/008_telephony.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i /www/cards/009_diagnostics.lp
  [ -f /www/cards/011_usermgr.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i /www/cards/011_usermgr.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i /www/cards/012_contentsharing.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i /www/cards/012_printersharing.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i /www/cards/013_parental.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i /www/cards/015_iproutes.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i /www/cards/015_tod.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i /www/cards/018_relaysetup.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i /www/cards/090_cwmpconf.lp
  sed -e 's/xf0ad/xf0ec;"/' -i /www/cards/092_natalghelper.lp
  sed -e 's/xf0ad/xf0b1;"/' -i /www/cards/093_xdsl.lp
else # THEME_ONLY = y
  echo 165@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   
  
echo 165@$(date +%H:%M:%S): Applying $THEME theme with $COLOR highlights and $ICONS card icons
# Common elements
sed \
 -e '$ a body{font-family:Roboto,Noto,sans-serif;}' \
 -e '$ a input,button,select,textarea{font-family:Roboto,Noto,sans-serif;}' \
 -e '$ a u{text-decoration:none;}' \
 -e '$ a .bbstats{margin:0px 0px -6px 20px;}' \
 -e '$ a .card{font-family:Roboto,Noto,sans-serif;}' \
 -e '$ a .card_bg>*{z-index:20;}' \
 -e "$ a .card_bg:after{visibility:$ICONS;}" \
 -e '$ a .card_bg.mirror:after{transform:matrix(-1,0,0,1,0,0);}' \
 -e '$ a .copyright{font-family:Roboto,Noto,sans-serif;text-shadow:none;display:none;}' \
 -e '$ a .dw{font-family:Roboto,Noto,sans-serif;}' \
 -e '$ a .header{border-bottom:0px;box-shadow:none;margin-bottom:30px;}' \
 -e '$ a .header img{width:180px;}' \
 -e '$ a .header .btn{margin-left:5px;}' \
 -e '$ a .nav-header{text-shadow:none;}' \
 -e '$ a .nav-list>li>a,.nav-list .nav-header{text-shadow:none;}' \
 -e '$ a .simple-desc{display:block;}' \
 -e '$ a .smallcard{border:0px;font-family:Roboto,Noto,sans-serif;font-size:14px;font-weight:400;}' \
 -e '$ a .smallcard .content{font-size:14px;}' \
 -e '$ a .smallcard .header{background-image:none;border-bottom:0px;font-size:20px;font-weight:400;text-shadow:none;}' \
 -e '$ a .smallcard .subinfos{font-size:14px;}' \
 -i /www/docroot/css/gw.css
sed \
 -e '$ a body{font-family:Roboto,Noto,sans-serif;background-image:none;}' \
 -e '$ a .navbar+.container{margin-top:130px;}' \
 -e '$ a .navbar-fixed-top .container{background-image:url(/img/logo.gif);background-repeat:no-repeat;background-size:180px;height:75px;margin-top:30px;}' \
 -e '$ a .navbar-fixed-top .navbar-inner{box-shadow:none;}' \
 -e '$ a .navbar-inner{box-shadow:none;}' \
 -e '$ a .navbar-inverse .navbar-inner{background-image:none;border-width:0px;}' \
 -i /www/docroot/css/gw-telstra.css
sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css
 
  # if you change any of these colors or CSS, recheck 001-Variables for default settings
  case "$COLOR" in 
    blue)   RGB_BTN=f36523; RGB_HDR=008fd5; RGB_NAV=008fd5; RGB_SYM=00b9f21f; RGB_GRAD_FROM=00b9f2; RGB_GRAD_TO=008fd5;;
    green)  RGB_BTN=662e91; RGB_HDR=005c32; RGB_NAV=005c32; RGB_SYM=ffec0126; RGB_GRAD_FROM=008a4c; RGB_GRAD_TO=005c32;;
    purple) RGB_BTN=005c32; RGB_HDR=662e91; RGB_NAV=008a4c; RGB_SYM=f365232b; RGB_GRAD_FROM=942977; RGB_GRAD_TO=662e91;;
    orange) RGB_BTN=662e91; RGB_HDR=f36523; RGB_NAV=f36523; RGB_SYM=008a4c3d; RGB_GRAD_FROM=f89406; RGB_GRAD_TO=f36523;;
  esac

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e '/<head>/a <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>\\' \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img src="/img/logo.gif" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
if [ "$THEME" = "light" ]; then # light theme
  if [ $COLOR = monochrome ]; then
    RGB_BTN=404040; RGB_HDR=eee; RGB_NAV=404040; RGB_SYM=018ed42b; RGB_GRAD_FROM=404040; RGB_GRAD_TO=404040; RGB_TXT=404040; RGB_HDR_TXT=$RGB_TXT;
  else
    RGB_TXT=fff
    RGB_HDR_TXT=$RGB_HDR
  fi
  sed \
   -e "$ a a{color:#$RGB_NAV;}" \
   -e "$ a body{background-color:#fff;}" \
   -e "$ a .btn{color:#000}" \
   -e "$ a .btn.btn-primary{color:#fff}" \
   -e "$ a .btn-primary,.button:hover,.btn:hover,.smallcard .header .settings,.smallcard .header .settings:hover{background-color:#$RGB_GRAD_TO;background-image:-moz-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-webkit-gradient(linear,00,0100%,from(#$RGB_GRAD_FROM),to(#$RGB_GRAD_TO));background-image:-webkit-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-o-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:linear-gradient(tobottom,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);border-color:#$RGB_GRAD_TO;text-shadow:unset;}" \
   -e "$ a .btn:hover{-webkit-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);-moz-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(0,0,0,1);}" \
   -e "$ a .button:hover:hover,.button:hover:focus,.button:hover:active,.button:hover.active,.button:hover.disabled,.button:hover[disabled],.btn:hover:hover,.btn:hover:focus,.btn:hover:active,.btn:hover.active,.btn:hover.disabled,.btn:hover[disabled],.smallcard .header .settings:hover:hover,.smallcard .header .settings:hover:focus,.smallcard .header .settings:hover:active,.smallcard .header .settings:hover.active,.smallcard .header .settings:hover.disabled,.smallcard .header .settings:hover[disabled]{background-color:#$RGB_GRAD_FROM;color:#fff}" \
   -e "$ a .card_bg:after{color:#$RGB_SYM;}" \
   -e "$ a .modal-backdrop{background-color:#fff;}" \
   -e "$ a .modal-header{color:#$RGB_HDR_TXT;}" \
   -e "$ a .nav-tabs>.active>a, .nav-tabs>.active>a:hover, .nav-tabs>.active>a:focus{background-color:#00B1EB;color:#fff}" \
   -e "$ a .smallcard{background-color:#eee;color:rgba(64,64,64,0.75);}" \
   -e "$ a .smallcard .header{background-color:#$RGB_HDR;color:#$RGB_TXT;}" \
   -e "$ a .smallcard .subinfos{color:rgba(64,64,64,0.75);}" \
   -e "$ a .switchOn{background-color:#00a540;}" \
   -i /www/docroot/css/gw.css
  sed \
   -e "$ a body{background-color:#fff;}" \
   -e "$ a .container>.row{background-color:#dadada;border-color:#dadada;}" \
   -e "$ a .navbar-inverse .navbar-inner{background-color:#fff;}" \
   -e "$ a .networkmap .devicelist{border-color:#094f9c;}" \
   -e "$ a .networkmap .right,.networkmap .left,.networkmap .longleft{background-color:#f89406;color:#fff}" \
   -i /www/docroot/css/gw-telstra.css
  echo 170@$(date +%H:%M:%S): Deploy new and modified light theme images
  echo  | base64 -d | tar -xzf - -C /
  sed \
   -e "$ a @media screen and (max-width: 979px) body.landingpage{background-color:#f8f8f8;background-image:unset;}" \
   -e "$ a body.landingpage{background-color:#f8f8f8;background-image:unset;}" \
   -i /www/docroot/css/gw-telstra.css
else # night theme
  if [ $COLOR = monochrome ]; then
    RGB_BTN=272c30; RGB_HDR=272c30; RGB_NAV=0088cc; RGB_SYM=eeeeee0f; RGB_GRAD_FROM=272c30; RGB_GRAD_TO=272c30; RGB_TXT=fff;
  else
    RGB_TXT=$RGB_HDR
  fi
  sed \
   -e "$ a a{color:#$RGB_NAV;}" \
   -e "$ a body{background-color:#353c42;color:#fff}" \
   -e "$ a legend{color:#fff;}" \
   -e "$ a #tod-modal div:nth-child(3){background-color:#353c42;color:#fff;}" \
   -e "$ a .btn{color:#000}" \
   -e "$ a .btn.btn-primary{color:#fff}" \
   -e "$ a .btn-primary,.button:hover,.btn:hover,.smallcard .header .settings,.smallcard .header .settings:hover{background-color:#$RGB_GRAD_TO;background-image:-moz-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-webkit-gradient(linear,00,0100%,from(#$RGB_GRAD_FROM),to(#$RGB_GRAD_TO));background-image:-webkit-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-o-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:linear-gradient(tobottom,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);border-color:#$RGB_GRAD_TO;text-shadow:unset;}" \
   -e "$ a .btn:hover{-webkit-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);-moz-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(0,0,0,1);}" \
   -e "$ a .button:hover:hover,.button:hover:focus,.button:hover:active,.button:hover.active,.button:hover.disabled,.button:hover[disabled],.btn:hover:hover,.btn:hover:focus,.btn:hover:active,.btn:hover.active,.btn:hover.disabled,.btn:hover[disabled],.smallcard .header .settings:hover:hover,.smallcard .header .settings:hover:focus,.smallcard .header .settings:hover:active,.smallcard .header .settings:hover.active,.smallcard .header .settings:hover.disabled,.smallcard .header .settings:hover[disabled]{background-color:#$RGB_GRAD_FROM;color:#fff}" \
   -e "$ a .card{background-color:#272c30;}" \
   -e "$ a .card_bg:after{color:#$RGB_SYM;}" \
   -e "$ a .caret{border-top-color:#fff;}" \
   -e "$ a .dropdown-menu,.dropdown-menu>li>a{background-color:#$RGB_BTN;color:#fff;}" \
   -e "$ a .grey{background:#353c42;}" \
   -e "$ a .header .btn{background-color:#$RGB_BTN;color:#fff;}" \
   -e "$ a .header .btn:hover{background-color:#fff;color:#000;}" \
   -e "$ a .header .btn:hover .caret{border-top-color:#000;}" \
   -e "$ a .loading{background:#000000e0;}" \
   -e "$ a .loading-wrapper{background:#000000e0;}" \
   -e "$ a .login{background-color:#272c30;}" \
   -e "$ a .modal-header{color:#$RGB_TXT;}" \
   -e "$ a .modal-header,.modal-body,.modal-footer{background-color:#272c30;}" \
   -e "$ a .nav-list>.active>a,.nav-list>.active>a:hover,.nav-list>.active>a:focus{background-color:#$RGB_NAV;}" \
   -e "$ a .smallcard{background-color:#272c30;color:rgba(64,64,64,0.75);}" \
   -e "$ a .smallcard .content{background-color:#272c30;color:#fff;}" \
   -e "$ a .smallcard .header{background-color:#$RGB_HDR;}" \
   -e "$ a .smallcard .subinfos{color:#bec5cb;}" \
   -e "$ a .switchOn{background-color:#00a540;}" \
   -e "$ a .table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th {background-color:#353c42;}" \
   -i /www/docroot/css/gw.css
  sed \
   -e "$ a body{background-color:#353c42;color:#fff;}" \
   -e "$ a legend{color:#fff;}" \
   -e "$ a .btn{background-color:#005c32;background-image:none;color:#fff;text-shadow:none;}" \
   -e "$ a .btn-primary:hover,.btn-primary:focus,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled]{background-color:#005c32;color:#fff}" \
   -e "$ a .btn:hover .caret{border-top-color:#000;}" \
   -e "$ a .caret{border-top-color:#fff;}" \
   -e "$ a .container>.row{background-color:#272c30;border-color:#272330;}" \
   -e "$ a .menubar .menu-item a .menu-icon.selected,.menubar .menu-item a:hover .menu-icon{background-color:#3d8dbb;}" \
   -e "$ a .menubar .menu-item a{color:#0088cc;}" \
   -e "$ a .navbar-inverse .navbar-inner{background-color:#353c42;color:#fff;}" \
   -e "$ a .networkmap .devicelist{border-color:#024b96;}" \
   -e "$ a .networkmap .right,.networkmap .left,.networkmap .longleft{background-color:#fff;color:#000}" \
   -e "$ a .table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th {background-color:#353c42;}" \
   -i /www/docroot/css/gw-telstra.css
  echo 180@$(date +%H:%M:%S): Deploy new and modified night theme images
  echo  | base64 -d | tar -xzf - -C /
  sed \
   -e "$ a @media screen and (max-width: 979px) body.landingpage{background-color:#353c42;background-image:unset;}" \
   -e "$ a body.landingpage{background-color:#353c42;background-image:unset;}" \
   -e "$ a body.landingpage#detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
   -i /www/docroot/css/gw-telstra.css
fi

# Run any extra feature scripts
SRV_transformer=0
for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
do
  echo 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-)
  . $s
done

if [ $SRV_transformer -gt 0 ]
then
  # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
  /etc/init.d/watchdog-tch stop
  echo 190@$(date +%H:%M:%S): Restarting transformer...
  /etc/init.d/transformer restart
  /etc/init.d/watchdog-tch start
fi
echo 200@$(date +%H:%M:%S): Applying service changes if required...
[ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
[ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
[ $SRV_system -gt 0 ] && /etc/init.d/system reload
[ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart

echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp to bypass the"
echo "++      Telstra Basic web GUI..."
echo
