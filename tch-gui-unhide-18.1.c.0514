#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0514 - Release 2020.10.05
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

VARIANT=$(uci get env.var.variant_friendly_name)
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT)   TITLE="$VARIANT";;
  $HOSTNAME)  TITLE="$HOSTNAME";;
  *)          TITLE="$VARIANT-$MAC";;
esac

grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
if [ $? -eq 0 ]; then
  THEME=night
else
  grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=light
  else
    THEME=Telstra
  fi
fi
case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
  "005c32") COLOR=green;;
  "662e91") COLOR=purple;;
  "f36523") COLOR=orange;;
  "008fd5") COLOR=blue;;
  "272c30") COLOR=monochrome;;
  *)        if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
esac
ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
THEME_ONLY=n

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0


RESTORE=n
WRAPPER=n
YES=n
KEEP_LP=n

FILENAME=$(basename $0)

CARDS=""
update_cards() {
  MODAL=""
  case "$2" in
    c) MODAL="contentsharing-modal.lp";;
    m) MODAL="usermgr-modal.lp";;
    n) MODAL="nat-alg-helper-modal.lp";;
    p) MODAL="printersharing-modal.lp";;
    q) MODAL="qos-queue-modal.lp";;
    r) MODAL="relay-modal.lp";;
    s) MODAL="system-modal.lp";;
    t) MODAL="tod-modal.lp";;
    x) MODAL="xdsl-low-modal.lp";;
    A) for PARAM in c m n p q r s t x; do update_cards $1 $PARAM; done;;
    *) echo "002@$(date +%H:%M:%S): WARNING - Ignored unknown card include/exclude option $2"
  esac
  if [ ! -z "$MODAL" ]; then
    CARDS=${1}${MODAL}$(echo $CARDS | sed -e "s/[IX]$MODAL//")
  fi
}

while getopts Wt:s:Tryun:x:i:c:h:l option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) KEEP_LP=y;;
   t) case "$(echo ${OPTARG} | tr "GNOPLT" "gnoplt" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue;;
        o) THEME=night; COLOR=orange; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome;;
        *) THEME=Telstra; COLOR=blue; KEEP_LP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOP" "bgmop" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "$(echo ${OPTARG} | tr "DSN" "dsn" | sed 's/\(.\)\(.*\)/\1/')" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        *) TITLE="$VARIANT-$MAC";;
      esac;;
   r) RESTORE=y;;
   n) update_cards 'I' $OPTARG;;
   x) update_cards 'X' $OPTARG;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t       : Set a light (l), night (n), or default Telstra (t) theme (Default is current setting, or Telstra if no theme has been applied)"
      echo " -c b|o|g|p|m   : Set the theme highlight colour (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo "                    b=blue o=orange g=green p=purple m=monochrome"
      echo " -i y|n         : Show (y) or hide (n) the card icons (Default is current setting, or n for light theme and y for night theme)"
      echo " -l             : Keep the Telstra landing page"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n       : Set the browser tabs title to $VARIANT-$MAC (s), $VARIANT (d) or $HOSTNAME (n) (Default is current setting or $VARIANT-$MAC if not previously applied)"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -x c|m|n|p|q|r|s|t|x|A :"
      echo "                  Exclude specific cards (use -x multiple times to specify multiple cards or use -xA for all of the following cards):"
      echo "                    c=Content Sharing m=Management n=NAT Helpers p=Printer Sharing q=QoS r=Relay Setup s=System Extras t=Time of Day x=xDSL config A=ALL"
      echo " -n c|m|n|p|q|r|s|t|x|A : "
      echo "                  Include specific cards that were previously excluded (use -n multiple times to specify multiple cards or use -nA)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE: Theme (-t) and excluded/included cards (-x/-n) do not need to be re-specified when re-running the script: the"
      echo "      state will be 'remembered' between executions (unless you execute with the -r option, which will remove all state information)"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in $(echo cards docroot lua snippets | tr " " "$IFS")
  do
    echo 010@$(date +%H:%M:%S): Restoring /www/$d
    for s in $(find /rom/www/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]
      then
        if [ "$1" = "V" ]
        then
          echo 014@$(date +%H:%M:%S): Restoring $t
        fi
        cp -f -p "$s" "$t"
      fi
    done

    for f in $(find /www/$d -type f | grep -v -E \(/www/docroot/help\|003_lte.lp\))
    do
      if [ ! -f "/rom$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing $f
        fi
        rm -f "$f"
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
      fi
    fi
  done
  uci commit web
  /etc/init.d/nginx restart
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

if [ "$(uci get dropbear.lan.enable)" = "1" -a "$(uci get dropbear.lan.PasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci get system.config.export_plaintext)" = "1" -a "$(uci get system.config.export_unsigned)" = "1" -a "$(uci get system.config.import_plaintext)" = "1" -a "$(uci get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
if [ "$(uci get web.uidefault.upgradefw)" = "1" -a "$(uci get web.uidefault.upgradefw_role)" = "admin" ]; then
  FIX_FW_UPG=n
else
  FIX_FW_UPG=y
fi
echo "$(uci get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi


echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPG = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEP_LP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
if [ ! -z "$CARDS" ]; then
echo "030@$(date +%H:%M:%S):  - Cards:$(echo $CARDS | sed -e 's/-modal.lp//g' -e 's/I/ Include /g' -e 's/X/ Exclude /g')"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]
then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ] 
then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPG = y ] 
then
  echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
  uci set web.uidefault.upgradefw='1'
  uci set web.uidefault.upgradefw_role='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

if [ $FIX_PARENT_BLK = y ]
then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

restore_www

# Always remove Telstra AIR card
if [ -f /www/cards/010_fon.lp ]
then
  rm /www/cards/010_fon.lp
fi

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo H4sIAAAAAAAAA+09/XPbtpL99emvwDAvZ3FKKZZkO52+OC9p4vZ5LnHcOk3mRufT0CIs8UKRCklZcTO+v/128UWABCX5Q7m+e0Q7tQguFovdBbC7WLDL5fLJd1suu1CePn3K/kIp/2W/e4On/d7u4One/v53u73dvd7gO7K/bcKwLLLcTwn5Lk2SfBXcuvf/pGUJ8h/7aZBtUQs2lP/gYP+gP2Dy7+33njby/xalkP/u7g+jz0nWjeYP3QcK+ODgoE7+e4N+ryT/QX9v/zuy+9CE2Mq/uPw7nXlK89SPs8jPafAjCRISJzkZT/14Qkk+DTNyGUa01ep0yFHsX0SURMnYj8I//DxM4taE5jn9knfxP0Ey88O4vbOkF4uwA8q047ZaDJpkNMsAnBySePKlO86/dEWNeH+ZpDM/h9dZnobxpMufxct5mny5hncp/bwIU9p2Aj/3Z0lAI8cVIEs/HoWXsT+jAMfgu0BZ21mMw25M82WSfuqGcU7TS39Muy8AvMvBAUMrvNTb+3GgP/7PIXEcViko/nHqZy/HY3hoO0+ACj/KnsBYO58XdEE7rAImkeNu0mYc+fD+8lpvlk9pLNnGqkdRGH+CYa3qTcAvwtGURnOa6twCcXTVC8WxcQLsiPMaePMtMsngcPEw7J13r/xoQX9cxDlIP2+7TFfe0nhBgjCbR/41CWMuT9SA9jyJwvE1YUOfpMliThjSt7+fvScAM54Shg8aERgo0nkZTiTVKPlfkzMg4WuLMnUMkDMoZly8AnoVonwd0u3qQoQnp8vhHa8VL2a/IvsyQvTGjKKTxeyCpu8uj2JQRJpx6FdCTBVoqKs2uGEahbOoUERBt6AhEFLm77Pqe484u8B0/t6fz6NrYCuNg1bLFAziPvrij/NXvFriUfMOKD3LYWYjRaU+yCGMpudwSiQcjPC9gwwGSan5QmzsJAKN06JRRu+CALRDYoCRCXq5XA5JnsSMsYozSmiu5K6A5fTLdrsasnEhNhs6KVWFUMEzlFprjlQnkc3Jwx0Gc+iwadjBKodxuZMnk0lExQtRl9JZkss66yTmcGFw6HA95m+cHX04D9Nxdd2p7buFC/Y8xZm985+tZ0F4RUTn2dyPB87zUuXMjyK0KPDFjvs3UjQvVqfuOKWgK68A7B/UD0AsTGccT1vwXGI0LvUtpgHBnkYXE0H+xaSD+9Ch82+PvlzuPu3/rUwd/MzZIsCJ08bWKhN3Fs7mEX0TTqaW2Sm13fVaO8/mauyLC1zpMuf5jtfiK177pO08gz0tiSfkce+v2fPH/b8GXIWePeH1zwnM3/AKFqY6yKwKyutdr1BGVQUUPZkjBXehTCl9uog2o9BoYaFUvne9Qn+1SkFtyy3p2RMQ1fP6vyg8nJNGI6z8vzao/skK2v9BMkbrdmse4O39//7uwV7j/32Lostf7A8P3sft/f/BYL+J/3yTYpG/1T64Tx+r/f/+fm+vX5L/073+oPH/v0XZ2P/vPHipiyhsoae1QYot9Amje03nYKPQeAx+4Ta64G5BHsYZTXOPZMx7hr8qmMJs3a56z0MrEsoItKCPcEVVE/4ogwrcsS+CM6KiZYRn9LIyVFPEKCzg9ljFPMlys1GpiQagGtWHnNS4QrCZ/52ih6chQJ/6Nz8GPYFX7a0px++vjsmpn08z0n7N55wfBGTnxY5H/DT1r8Gx9T/RGD0cSpJLgvMzdbenRotxiPHfEawHl+GXQjQq4OFogJF/QaPRHMgvAEsI0MVnYEZD7gOsbcjAqg1hRyra1jcEMGi7Vbml/oyCPLY4rXFwc+xnBBsUqKSSB390KmBZOp6CFksw8ViFC7JchxOPVTiY1nkyTiIBxx4tUEmaZ4WysEcrbQqQ01YDCNTogPLRBjiea0qKj1Ug2NguL8NxGAjOycetKcd7tp0V6kHap+8wrAkLjz/B0NUWuuWDZlPtPVONE4ywKc7ABJGBrjcFjOQVSOIfIH2tSbXZGYeRTUAma5u85jBOsUMwVTLbmE1Odf1iQi/1UGmgKwaM47TapjIOow0MZG2b1wKmaDOey3dFu1Kbs1enji6WmoEwcUhApZtv9BYa4PttKi/q7tkUBjpewNzLEwzBhwEP2PNdkdXOYEciURjTjGQITVNB/eTD8dFZdRv9wLHQ4/goXszOaETH8kzn6uz4mJRaiE7pGTMzjrPj0wL4dB0wiklS8+4DKYMDNe/SD2pUEvFJhWyJ9ySJj2bz/Jrj3xLPwcoOYMHAcw6mKVvYT6S1k8xx3Jm2Jh6SrzcYDCThYc/r7Xs9MP4FMHubJ9zea4duq9J6+KiK8HvSO0e+f4X2HuK40ePm3GaAVWAxizN2gPO1NWXRX8IODZiWE9R8PHRRE0DNIK/FFnWxz+DPEIzrLwCcX8/lbEELH2r8PE95DdASzxc5+6XFrfvODbnxWvCvSYSYZeT4tUFEdXbq1Fg2HIOojCk+IGQHWxnWVZhn0sxblInuKaJvJFMvF/GYzdIkfhkgdRGN2uNFmuIZUUbZuxHjkydC5upoSFcEeXYnYIbV8Z675WbcEjss2YPdrvPC6XatJMA7+KdrYVdLHnUFQdvE51kxudrRmUmQpx5hoBXtE2xn2sc8HWYaMCExAJDRhZ9RaWOWB8dMzBddgBr78VEQSiPq0o8yyipf4lmd1JmFqAsCueyrutcg4JzqdezQ4W02IVwRsdEJXZI3gizgDIoheHfx31wzeLMMV2GF3qqITDNQ5QoN0RSIDw5c/JwdAkt9Ykcerjw1HGqm0zk7NxTHhinNF2nMx8+4LSqQuCr32dLKeF9si4dsDYbpUt3/Dvm20q7MFRfI1/EiiZ74jas4ctFc1Pk6y6yzXxc0vW4bi5FnaodnMMUjcRh5+gi25hL+LJj/IyFnwMc57LfzOUiX9U0+0Wu2CV9QsW0EZAkyoFcgOBCGgApxC9FtjZkfh/MFi+50t2d+ShkxIoTDwvYXvsF4V3icH879MM3a6lT89KQ82ZniuG6xEfFBHYrYRvuqy8HQKX2MXunjLoN43H3RHv7X4+759+7jrsP0lrdkWmohrti+tMrvYfvCJZdVCZGLPUzTZdmQGbV8H3P8COYoYX9wS3Fy8EbgGf+w50XAnvGPfI7CnIo69pPVh+MZA2R/WQ3NWAX+Yc/+lHU05U/ZOGev2V+OYSIwTCSGScr6wT/6ziGHwRwpPgoE4212v+z+gE+vzmDP8TqdH3jdS6x7+XOPV/Z2ee0rUdvntX1eeyRqB7x2j9X2djlWAXrAK/sctC/Q8s56e6KWw/Z5Z70DUcvR9nlnPUGsqBR9CWoHHG1fdCaoHQi0ojNB7YBjGPDO+oLaPV7J++oLavc42gHvrC+o3eNoB7yzvqB2T6DlnfUFtfusck/0xej68O741VHn5eu3x+/5S4GdkXf0M9QRqOTIB4K6Aw7JcQ8E7qcctNPZPyhEjqIu8n3k5BwRr8i44TNU1w02GbWWQwY77J2fH/Jf/XN9dqg4zTpDT/ihupUlQxuGpafqNjOotOm8iUlVZweeJYt0TAk6sU+OTw0qNZfZbgSKyMud7NJeDT2vaZZbqdG8cTs1Ir7zoNScCn/eoER38u2kSAivFdBLfxHljBZcKjcULkOwmaVMaigHe6mduSbhMghQQzW+flAnQyiXjRY9jlGrXQ9PEVMvGz16jKRWv7ZAD4ZQTDrMuEsdLeO5oVymZo2ndPzpIvnCsg6tCsYR3Eq/brZlDaqkQx5UfMXyIBfp1g7JSuv3CldJwli9JSNQj95g1V0qPKOH9pZ+W7AET9MrKraQhDlPPLimjwN8UnkWVPG0VJ//bwRdDh3YImlZm00Ol1kIOL/ROBDHfxNhiyMAGBtoeHtgeDua2Z588siMeWEYumsjApVlmXwyfEfmXTnvwYHhgf9smiyiAL2cC5ovKY1Jr3Owvz/YF/nUYIKgL0OWIWjdjrfTdZSBXuN8VgaqxfXkMIE2bgNVnVuFziCY4RAcAaeLgOmfLMHF4tRUugb9+9WMEEv+cZ300L2TIRYtclpqVPGJmYVWYXo9AmuvdsEIdHw8HH4I4MxFYlhu6hiuloDC4VcuoUm+Zq25Xqt8GlABZ/u/CSi5UuGvASWOMBDw3Yc2xp49mzaUUHPT6naN5CGDbGWbW5v1/RBo7oyjGmBUQuVhkVKAqGL9yjARTtoShLBIV0BIQ1EDaZVBkPoVKKSZtJqOMki5F5xetwx4bWHBhj3iNOExHL5HfIPtn8fU1OOGYbWy9+dV7AmvrEgivmauGS47TH33+t2P7zEDCf7FGzw+2G24BwBuppLyROqX349x21jCKpZi+vk1BrrIXJ7CErZG8IymgFymyUzYe4ggCsE3YjZisfFIUHhtmIwehtmwsyAM4p2c95ktQjSPrrsnlDcJZ6C+V5TF5CSpXe5pG2Ewg9Vs78RkLIzCXw1/OGdTC+niT0wHeeo6V0QRjJ/Ni2MciyPP2wJqscS3jV1O3EIBJMNH8B8e/qq4+udqf0VsRKYIjZN47OdtaAe7oee4RZisrATQqss4XDh3+q2CyrWA0pUAHlznkcHKnQAzvZ9fh7hIgmuymOOixvP8JbP8CxmOCGg2ZoYju1KCXoLcn1ZczxB+imorFtlwzCy1OiTVqxZgYrLceASUWfLckyiGVubJW2wMEy1r4yjccrY8ZnFJJuDvzjRJwz+SOMdLIDAJpklw6ODMdVhefhKvuQ2is22azyIRLsKfw0f4X64rzrPLkEZBRvPnTuUlFudZRCegFM/BxObXgmTwBzUZvINnTySAtX2ZDaydPXivHwKotUYL3YsVzLUM4smKUawa4l/sQzT14p5jXbGilpZoc9DllXvduDWFQhC3fO/nCaqVcQFj1RT+OUnQRoD52lzI+FOXmvxvc+W7Zx+r878HvV6vnP9/8LTfb/K/v0W51f3vN3e4+H3La8a3vsaspwZvkBS8CEUuXm0H5vuin/V30Jld5AnzTtpJ8tm45+4RHkMhpfvunhliKVg41tK5+aNKYpYhN2ahjuS9SDRz8L6tuhdr3ltmwN0X79+NPr484VXs6nK0SZM3RpPlRm0+mo1u1l5kto/LtQVWeO9sO2xzQkacjVIwijpx89F5DDSQetCRkBx/0AKhN560tT+jjS0CYRyRiIRlKhKmoRp+PhdhxJaBc/jIeJTnz5+ha3HuLNzLerL0uIsSuIQsKopBlBhm53O30B1XncSXkEd3Rh5VkC8r2Jd3R7/U8d83s3HzDEEB/1MN9E9JElFfOm6TD8evyIp8yVe633n3JMvTkxpqTpMsRM/jZDHTkiarKZOM9X6kJU6qdRe/4mCcEnx1WK7CewcZMs7JaRqCF5Jf85SCZZqylx8pXqkGV/k35sz/llyEsUhmmI8kUAkDi97UNbypJLQZU5YnoASHuyrFsQIH3m+5Sk7FIgcycD3jyUxuvMf3R9QXNErfIUEf3c9nUCNcfqMPfDX6YTTYd3QyZv6cJZ9npQ1gtPm3MorveJS+mqFhE5/wWL2rcCCzoXY0t6KlgDL2I9sINIYCYEFpdAtK3+iURreh9I1B6fI2nX40el3eqtuPZr83mug/qHC7VfJXP9mFyGPs5oR2a8TGYSv7ilsjKuzSxpiaLq2M4LCV7cCt4XndaFbgru41rv0rLmp6dasMrnzSZRVw/fdduDBpPp2L0P3XG7MOtrkFM/B2+cqG6bD45JH94vxNwKIawU82wxmgXLx55q59KZBt9dmvXcsQ6w9PpXD4l1yKDr7vIdcEUYdAEmeK3u5DmOYLQKa1/xhehmT/l+kffDEDDAXPkVb+LSUewFS492T8sswY8/l70mvp9yDbkrdgy4mfnhrYjdtSYhuKt7gRIBFFgJPxnfPc7Av4L6fhsGD8uTyA+cm1HkuGGdvtadD+RK89HnIGfUI2mBcu2/LVyhMJS6RZNuOB4CtsDl3ZTzk1q7PAWXuSKni52WHmUaHVaP8oSaw8wFzZxSZHl8iPTwY/VL/IEHGyeYUZbdBzHEblqkI+WCNi7Fwl8ftJgB4mM++r5kB0GfEZZsxnWVk/oQfFhJbAOGuX0e0mtGprmdHLSNoT2HQJnm0E/i/8uAw7Id9anW5XYsAE/izDK0j6JO8L88QgEYye0cWov+eQTmecYI7yZIFJRoi5VSZX28hXULwBrctod9QTJOJnqXQyB/VkghG1RZJ6BUn2xU3QVbEeeRXXtEqtMhtRASV1rYpSlSoqq6FSTVgO5W9PqIWxGsqX9uXQcvakMLvGuqjSR9esinKJ+Ri9Zmg2W2IktFpjCipWLTKq2QOuMub4t7vMrLBUqnaZULhVIIJCKbQNIDSLpbw5cBIVpL4YloVcihp6zEWf1Zw78yNnNQxPmcCusUWXZgDfA+VFJ7WYGqf8trcohM1MAB29bgRY8Bs2gtFBgcRiPlpwWaEKjel0eNiIxxD1w36AN1K1Yb3uyVxMNNf0C3kyZ24U80qeg2m9jlckgaaAK4mjayIT6Vh65YqU0CJ1F2jp67SoiEJBz7yoKqgp6u5HS8+kZaDTwsMRGiVLWaHoUDUPSsWeTkX1vqJxz/2Bu94vusbUWn6cSeQXH9lZukhihAX8WH39EXx6nU9KUTXy/MkkpRM8sfda2XUMmp2FGV9j8B5DngQjBQIQiwvr9YIH0ZHN1fOB1OFuHa6VvOrXpg41qdCH1SCaRp9spJMYxhg11dKh8V+Q2HD/nKnMgU7zaxW2kAQLV5wrxAbqar37qnYRxuA7pHRenZ7IVuU0RlgeiyxGqTS4c52eeC0uUX0fYxXabUZphlTYqufY4YyQndnSrsWkKY5PVNZ1OUzU5dnWKjta5kbHdEkki0WOtX5rVeRXqyqRP11e2Kuc1yk38gIFY0snEkN+mVRDen5ejqJKdDy7Qa9ZZQuUc9CKXc2zsdezUK4nTkipu63iButaGUV/ThlFa2QU3U5GUUVG0QPIyMJez0J5jYy0Q6R18+hPKqTlOimVT8jWTqWqnJYPISgbkz0b+StFpcbNOkfyMOeXfR/dpNmM2Lp1aZQCnnlaV8M9tKZFfuIVbETDwbnHUhRxSxj2mCleCgWz3eFqeMDs8P8A3eBftZY1ncIyt0RpRyLAxqM7Mm9THllXUjerYzACUtBefYdB+IbMNzCjnarT4aMKGew7HIdsqDaylQN2b7pNF3cN4ZVuh4+qlNSSXlWU6mZhcYWU4lTbVydI9Xx6VXvLDLOcQBcYZMJGin4j5s5d+WkXnpjzLh79dJLxey488BvRuK2/c8lzssvZyfHgfzEi9XfmRuqgnG0PlGb7LZNs7cmxD5J3e9sk2/tn2ZpfQAdpmZzd4CPpb8W3w9rl1KTuPJmrly6mWt43X7dIZUVlMry6M5igwSLCy05l1460nfoDZMfVsl43Sns9W4aYVPPeORL/fwFPdxllbMPxtBBO9e15Nd3V1tcxOlw8YwI6fBlN0LqfzkpdyoPaUs6DnQIBfCcChHtExHwxiFAnvtWkHjshsgFQslbUG/jvbJVZmcH8lxUJzHXmeNXIN7OYLeb/2kTmOyu9zN9erfFvgBlmMrcR8KtGSp1zvmDfVfktGL3V/bny7KOUiKKfDMFqtSuPMdwygXIbrvwPG0QA4BeMGrCdI2PHuAT/ZwiLjH2oRBgjjgqMZl7FUPLI15WxhBsmfu6M33MeV1IEVs3jKvDDzOOqOeBY8ufshKyax3e/ulBS/HUrgEXpO53bhP8APMzI1E+DcRKAnQc25E5pZdjxLhY5pmhib4TidfG5H+OHeIqbWeup9GTq8pSmtFXqAn0Bh5ON37HaZNS2xXPTlW61q1y+pPJNV7rNNneL2MtoK7ywrREfxcGotk4o098pTmgyr+qbbLpU3He7v9U6YYF+oA3fulJU85NqaPlTrBU2rfkXWCw+3ne1WBexKVlGd1kwbn3H628rPcjmlldTmtKUpjSlKU1pSlOa0pSmNKUpTWlKU5rSlKY0pSlNaUpTmtKUpjSlKU1pSlOa0pSmNKUpTWnKNy//C6GC3xgAoAAA | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo H4sIAAAAAAAAA+1W32/bNhDOs/4KgsMWGbAUOY7trV2KFluAPhRDgRTogxMYtETLxChSI+nIaZH+7Tvqh2XLsdMNzYZh/B4skffx+PGOd3JRFGcnz4wIMJlMyieg+yzfB8PJeTQeTwYX45NoEF2cRydo9NzCLFbaEIXQiZLSHOM9Zf+PooD8x0Ql+hlvwVfmfzgejc+HoxHkfzAaTFz+/wm0+Y9+Gsz0vTY0C3n+TfewCR6Px4fyfwHl3sn/cDKB+o++qYoD+J/nPwhyRY0iQnNiaPICJRIJaVC8JCKlyCyZRgvGqecFAboSZM4p4jImnH0ihknhpdQYujah/UlkRpjwTws6X7Egloqe9jyvpCORrtGl/a3HmmoN66u5MDbrsJ6p7QupMmLArI1iIg2rcW1csdmS8pwqsCv6x4op6mPYNdwYcK+m5kqu77dpCTEkkwnlGwqMCH9PzBJo+Kwc6bOqFIJyBAWBG9n3mst0BkHTVFh5+FembVSSDUMvOREzWsYqOcAojjMME5oq697Y+bAaNqG8LjWAsTxbCBnw8SpmYV299eN19ZxGt6FVzHLcR0/TINeGKstuonN9/XYGB9rfLlEyn1Oi2pfXwAurY+0sL75yebG9nC2agxKRIL96nw5uwzvCVxR9gbBhJFVNmp7vGHpwc6nw9rNVXWEINBVJuUV9umqPatBucgkrBhtne4l9zFmx7aw45qw44qwOHmfp0swykgPhs9fcEsuWiwXue1ft8lRRKmDqYfeiQncz9DEPH3DFQJu7t+1uY21UbTmuwnDEMZwcvXvz2yHPjflR18XTrj8ed/2x49ompm4tL5ZEv4ljGPgH67zOz1ZnmHEmfgf3VQfyccyJ1pc3uDQG1niDke0qgZFpymljamYVzaSxs9/rZoolMEzoHYtpUHNxf9OGep5tiTm0PeOf3ng/J+wOVZtinRMxxK86kxnh3H7EreG09xKhdn3bKsNYUYjrL8B7S0lClQ/xKg+PrtbwBdDQH1oJCNwcVBFLYWw92T1n87Q+1DwN7EfgEv/w3XoR/Th6WcupY7k0GS8T2lV0zbKc03f2qvuC8f7e1Z3ulvFtH32uKsO6qzTB26ZWunT0gB56cBHqpupbIf29uOyr6Nzz6W79P61il16qQL2/oaLoqij+moriERVtaq2O7oU7g1y/2n/aXNrmtEOGyX/7P4yDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4NDiz8BXLa1jwAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo H4sIAAAAAAAAA+2VUW/aMBDHec6nsDy1BKkJBAqRWkCaukp76l4q7WUSMokTrCV2ZjuDbdp33zlJQ6G0XaV21VT/HnByd7bP9/eF9Xrd77wwAyAMw2oE9sfqORiFo8n4NAjDcWcQDE6Hkw4av3RihlJpIhHqSCH0Q3GP+f9T1qB/RGSsXvAW/L3+k+FobPQPxkFo9f8XbPUfBOOFFrGfFc+9hxF4Mpncp/8oGO7rPxoORx00eO5EDvHG9fe8QlItCVcZ0TQ+Q7FAXGgUrQhPKdIrplDCMuo4nocuOVlmFGUiIhn7STQT3Emp1nSjffMTi5ww7nbXdFkyLxKSdnuOU4WjRMicaDRDSkvGU79+b5y6WndWj42tZIsVzQoqwS7pt5JJ6mJY2W8duNeERoJryvU98bte3GakqFJwAgjn6caP9MZvLA5LbpxnK6LeRxG8uLifi5hkqg9N4lWP0Cq4ByWi/GZJcC0KolcKFv3lwBuMuIyYbxprJZS+KvMllZ+SSw5VoAqfOGuWsNtR5h3Gu4G/HWf3JD6U/nJDIn1Rm9129/aIssxoJEpu6t56zTZISDTYD1o0uWwjK0MV6pgaFaCcdrtfnGnMvqMoI0rNsCoIH+H5njEnWWa+K8bR7Z2j7fRWPj+SFO7cBUR9pCSm0r3G1yynSCToA/mBT9A9Jd9Zbi+bpkTI7L1YphjFRBNvmXrmfs7w8btNMgjC8/184bG6e3W6tw7rdKfmgO25WF5k1IupivC8ewJeduNisLW3JNyLmIzgNsN3RZfKM2Y8P+ZLVZxP+8xMqq++e+XiKTSD4Ck6UvOjGNUXDRk5pcim/do5rwRCMU0YpzFchCfMUttpW5l7kHaTc1VTL2P8a1MoLdI0o42jsUmaCw22g2LUISye4daM4Yg7m0FOUMI51PXRxoIrKCnkre502OtI8rlJ56miPDzvoCxV9z2DNgdK+JhI7dZbpSiP91q+Dz0yv39s5rz2/5nFYrFYLBaLxWKxWCwWi8VisVgsFovF8pb5A4DcogEAKAAA | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 070@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd -a "$(uci get cwmpd.cwmpd_config.state)" = "1" ]
then
  CWMP=enabled
else
  CWMP=disabled
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - fon-modal.lp (Telstra Air)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|fon-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | cut -d. -f2)
  fi
  if [ "$RULE" = "cwmpconfmodal" -a "$CWMP" = "disabled" ]
  then
    echo 070@$(date +%H:%M:%S): CWMP is disabled so disabling $f
    uci -q delete web.$RULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
    continue
  fi
  if [ $CREATE_RULE = y ]
  then
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    echo $CARDS | grep -q "X$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070@$(date +%H:%M:%S): Enabling $MODAL, but disabling card display
      uci add_list web.$RULE.roles='nobody'
    else
      echo 070@$(date +%H:%M:%S): Enabling $MODAL
      uci add_list web.$RULE.roles='admin'
    fi
    SRV_nginx=$(( $SRV_nginx + 4 ))
  else
    echo $CARDS | grep -q "X$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070@$(date +%H:%M:%S): Disabling card display for $MODAL 
      uci -q delete web.$RULE.roles
      uci add_list web.$RULE.roles='nobody'
      SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    echo $CARDS | grep -q "I$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070@$(date +%H:%M:%S): Enabling card display for $MODAL 
      uci -q delete web.$RULE.roles
      uci add_list web.$RULE.roles='admin'
      SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
  fi
done
# These were incorrectly enabled in release 2020.08.08 and earlier
uci -q delete web.mmpbxsipdevicemodal
uci -q delete web.mmpbxstatisticsmodal
uci commit web

# Modify management card to allow it to be suppressed
sed -e 's/^if assistant then/if admin and assistant then/' -i /www/cards/011_usermgr.lp

echo 070@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
sed -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
do
    sed -e "s,title>.*</title,title>$TITLE</title," -i $f
done
sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
 -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
 -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
 -e '$ a end' \
 -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
 -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
 -e '/^local mode_active = "default"/d' \
 -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
 -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
 -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
 -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
 -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
 -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
 -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
 -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
 -e '$ a end' \
 -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status to LAN card 
sed \
 -e '/local dhcpState$/a local dhcp6State_text = ""' \
 -e '/local dhcpState$/a local dhcp6State' \
 -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
 -e '/@lan.dhcpv4/a \    dhcpv4Proto = "uci.network.interface.@lan.proto",' \
 -e '/localdevmask = /d' \
 -e 's/localdevIP = "uci/localdevIP = "rpc/' \
 -e 's/dhcpState/dhcp4State/g' \
 -e 's/DHCP enabled/DHCPv4 enabled/' \
 -e 's/DHCP disabled/DHCPv4 disabled/' \
 -e '/getExactContent/a if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
 -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
 -e '/getExactContent/a \    dhcp6State = "1"' \
 -e '/getExactContent/a else' \
 -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
 -e '/getExactContent/a \    dhcp6State = "0"' \
 -e '/getExactContent/a end' \
 -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text),' \
 -e 's/and netmask is <strong>%s<\/strong>/\(<strong>%s<\/strong>\)/' \
 -e 's/localdevmask/dhcpv4Proto/' \
 -e '/^\\$/d' \
 -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/getExactContent/a \ ' \
 -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
 -e 's/\r//' \
 -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Only show WAN Services card if WAN interface is defined 
sed \
 -e '/uci.firewall.userredirectNumberOfEntries/a \  wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = wan_services_data["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and wan_ifname ~= "" and session:hasAccess/' \
 -i /www/cards/007_wanservices.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 100@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 100@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server 
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"],switchDHCP)' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
then
  echo 105@$(date +%H:%M:%S): Add DumaOS button
  sed -e '/id="basicview"/,$ d' /rom/www/docroot/gateway.lp > /www/docroot/gateway.lp.tmp
  echo "            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" >> /www/docroot/gateway.lp.tmp
  echo '            html[#html + 1] = T"DumaOS"' >> /www/docroot/gateway.lp.tmp
  echo "            html[#html + 1] = '</a>'" >> /www/docroot/gateway.lp.tmp
  sed -e '1,/if not bridged.isBridgedMode/ d' /rom/www/docroot/gateway.lp >> /www/docroot/gateway.lp.tmp
  mv /www/docroot/gateway.lp.tmp /www/docroot/gateway.lp
else
  echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Allow enabling/disabling of firewall and internet IPv6 pings
sed \
  -e 's/"rpc.network.firewall.internetping"/"rpc.network.firewall.internetpingipv4"/' \
  -e '/"rpc.network.firewall.internetping"/a \    fw_ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    fw_enable = "rpc.network.firewall.enable",' \
  -e 's/fw_ping = post_helper.getValidateCheckboxSwitch()/fw_ping = post_helper.validateBoolean/' \
  -e '/fw_ping = post_helper/a \    fw_ping_ipv6 = post_helper.validateBoolean,' \
  -e '/fw_ping = post_helper/a \    fw_enable = post_helper.validateBoolean,' \
  -e "/Firewall level/i <legend>');  ngx.print( T\"Firewall status\" ); ngx.print('</legend>');" \
  -e "/Firewall level/i ngx.print(ui_helper.createSwitch(T\"Enabled\", \"fw_enable\", content[\"fw_enable\"])); ngx.print('\\\\" \
  -e "/Firewall level/i ');" \
  -e '/Firewall level/i local enable_attr = { alert = { class = "alert-info" }, }' \
  -e "/Firewall level/i ngx.print(ui_helper.createAlertBlock(T(\"WARNING: Setting Enabled to OFF causes the firewall to ACCEPT all incoming connections from the WAN!<br>NOTE: You can only disable the firewall when the current level is <strong>Normal</strong>.\"), enable_attr)); ngx.print('\\\\" \
  -e '/Firewall level/i <\/fieldset>\\' \
  -e '/Firewall level/i <fieldset>\\' \
  -e '/createCheckboxSwitch/i \    html[#html+1] = "<label class=\\"control-label\\">Internet ping response:<\/label><div class=\\"controls\\">"' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = ui_helper.createSwitch(T"Answer IPv6 ping?", "fw_ping_ipv6", content["fw_ping_ipv6"])' \
  -e '/createCheckboxSwitch/a \    html[#html+1] = "<\/div>"' \
  -e 's/createCheckboxSwitch(T"Answer Internet ping/createSwitch(T"Answer IPv4 ping\?/' \
  -e 's/\(default behavior\.\)/\1<br>NOTE: You must save the Level change before you can add rules./' \
  -e 's/\(", high_attr\)/ This may impact on web services like Internet Speed Tests.\1/' \
  -e 's/It will/Unless the firewall is disabled, it will/' \
  -i /www/docroot/modals/firewall-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
 -e 's/--  {"mmpbx-service/    {"mmpbx-service/' \
 -e '/mmpbx-contacts/d' \
 -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
 -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
 -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
 -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
sed \
 -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img  href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img  href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/Data Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(find /www/cards -type f -name '*lte.lp')
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i /www/cards/001_gateway.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0b2;"/' -i /www/cards/002_broadband.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i /www/cards/003_internet.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i /www/cards/004_wireless.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i /www/cards/005_LAN.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i /www/cards/006_Devices.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i /www/cards/007_wanservices.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i /www/cards/008_firewall.lp
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i /www/cards/008_telephony.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i /www/cards/009_diagnostics.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i /www/cards/011_usermgr.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i /www/cards/012_contentsharing.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i /www/cards/012_printersharing.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i /www/cards/013_parental.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i /www/cards/015_iproutes.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i /www/cards/015_tod.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i /www/cards/018_relaysetup.lp
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i /www/cards/090_cwmpconf.lp
sed -e 's/xf0ad/xf0ec;"/' -i /www/cards/092_natalghelper.lp
sed -e 's/xf0ad/xf0b1;"/' -i /www/cards/093_xdsl.lp

for f in $(grep -l -r '<head>\\' /www/ 2>/dev/null)
do
  grep -q '<link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>' $f
  if [ $? -ne 0 ]; then 
    echo 160@$(date +%H:%M:%S): Adding the favicon to $f
    sed -e '/<head>/a <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>\\' -i $f
  fi
done
if [ "$THEME" = "telstra" ]; then
  echo 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AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACorECwkAAAAAAAAAAAAICcnERERKCkAAAAAAAAAJCUREREREREmAAAAAAAAEhAREREREREQAAAAAAAAGCERIgUFIxERJAAAAAAAABERER4FBR8RCyAAAAAAABkREREaBQUbHB0AAAAAAAARERERFgUFFxgAAAAAAAAAEBEREREUBQUVAAAAAAAAAA8QERESEwUFAgAAAAAAAAAACgsMDQcFBQ4AAAAAAAAAAAAGAgIHBQUIAgIJAAAAAAAABAUFBQUFBQUFAwAAAAAAAAECAgICAgICAgMAAAAAAAAAAAAAAAAAAAAAAAD//wAA/88AAP4HAAD8BwAA+AcAAPAPAADgDwAA4B8AAMA/AADAPwAA4D8AAP4/AAD4BwAA+AMAAPgHAAD//wAA | base64 -d > /www/docroot/img/favicon.ico
else 
  echo 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 | base64 -d > /www/docroot/img/favicon.ico
fi

echo 160@$(date +%H:%M:%S): Applying $THEME theme with $COLOR highlights and $ICONS card icons
if [ "$THEME" != "Telstra" ]; then
  # Common elements
  sed \
    -e '$ a body{font-family:Roboto,Noto,sans-serif;}' \
    -e '$ a input,button,select,textarea{font-family:Roboto,Noto,sans-serif;}' \
    -e '$ a .bbstats{margin:0px 0px -6px 20px;}' \
    -e '$ a .card{font-family:Roboto,Noto,sans-serif;}' \
    -e '$ a .card_bg>*{z-index:20;}' \
    -e '$ a .copyright{display:none;}' \
    -e '$ a .dw{font-family:Roboto,Noto,sans-serif;}' \
    -e '$ a .header{border-bottom:0px;box-shadow:none;margin-bottom:30px;}' \
    -e '$ a .header img{width:180px;}' \
    -e '$ a .nav-header{text-shadow:none;}' \
    -e '$ a .nav-list>li>a,.nav-list .nav-header{text-shadow:none;}' \
    -e '$ a .smallcard{border:0px;font-family:Roboto,Noto,sans-serif;font-size:14px;font-weight:400;}' \
    -e '$ a .smallcard .header{background-image:none;border-bottom:0px;font-size:20px;font-weight:400;text-shadow:none;}' \
    -i /www/docroot/css/gw.css
  sed \
    -e '$ a body{font-family:Roboto,Noto,sans-serif;background-image:none;}' \
    -e '$ a .navbar+.container{margin-top:130px;}' \
    -e '$ a .navbar-fixed-top .container{background-image:url(/img/logo.gif);background-repeat:no-repeat;background-size:180px;height:75px;margin-top:30px;}' \
    -e '$ a .navbar-fixed-top .navbar-inner{box-shadow:none;}' \
    -e '$ a .navbar-inner{box-shadow:none;}' \
    -e '$ a .navbar-inverse .navbar-inner{background-image:none;border-width:0px;}' \
    -i /www/docroot/css/gw-telstra.css

  # if you change any of these colors or CSS, recheck 001-Variables for default settings
  case "$COLOR" in 
    blue)   RGB_BTN=f36523; RGB_HDR=008fd5; RGB_NAV=008fd5; RGB_SYM=00b9f21f; RGB_GRAD_FROM=00b9f2; RGB_GRAD_TO=008fd5;;
    green)  RGB_BTN=662e91; RGB_HDR=005c32; RGB_NAV=005c32; RGB_SYM=ffec0126; RGB_GRAD_FROM=008a4c; RGB_GRAD_TO=005c32;;
    purple) RGB_BTN=005c32; RGB_HDR=662e91; RGB_NAV=008a4c; RGB_SYM=f365232b; RGB_GRAD_FROM=942977; RGB_GRAD_TO=662e91;;
    orange) RGB_BTN=662e91; RGB_HDR=f36523; RGB_NAV=f36523; RGB_SYM=008a4c3d; RGB_GRAD_FROM=f89406; RGB_GRAD_TO=f36523;;
  esac
fi
sed \
  -e '$ a u{text-decoration:none;}' \
  -e "$ a .card_bg:after{visibility:$ICONS;}" \
  -e '$ a .card_bg.mirror:after{transform:matrix(-1,0,0,1,0,0);}' \
  -e '$ a .header .btn{margin-left:5px;}' \
  -e '$ a .simple-desc{display:block;}' \
  -e '$ a .smallcard .content{font-size:14px;height:125px;}' \
  -e '$ a .smallcard .subinfos{font-size:14px;}' \
  -i /www/docroot/css/gw.css
sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEP_LP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e '/<head>/a <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>\\' \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img src="/img/logo.gif" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
if [ "$THEME" = "light" ]; then
  if [ $COLOR = monochrome ]; then
    RGB_BTN=404040; RGB_HDR=eee; RGB_NAV=404040; RGB_SYM=018ed42b; RGB_GRAD_FROM=404040; RGB_GRAD_TO=404040; RGB_TXT=404040; RGB_HDR_TXT=$RGB_TXT; RGB_STATUS_ICON=$RGB_NAV;
  else
    RGB_TXT=fff; RGB_HDR_TXT=$RGB_HDR; RGB_STATUS_ICON=$RGB_HDR;
  fi
  sed \
   -e "$ a a{color:#$RGB_NAV;}" \
   -e "$ a body{background-color:#fff;}" \
   -e "$ a .btn{color:#000}" \
   -e "$ a .btn.btn-primary{color:#fff}" \
   -e "$ a .btn-primary,.button:hover,.btn:hover,.smallcard .header .settings,.smallcard .header .settings:hover{background-color:#$RGB_GRAD_TO;background-image:-moz-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-webkit-gradient(linear,00,0100%,from(#$RGB_GRAD_FROM),to(#$RGB_GRAD_TO));background-image:-webkit-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-o-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:linear-gradient(tobottom,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);border-color:#$RGB_GRAD_TO;text-shadow:unset;}" \
   -e "$ a .btn:hover{-webkit-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);-moz-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(0,0,0,1);}" \
   -e "$ a .button:hover:hover,.button:hover:focus,.button:hover:active,.button:hover.active,.button:hover.disabled,.button:hover[disabled],.btn:hover:hover,.btn:hover:focus,.btn:hover:active,.btn:hover.active,.btn:hover.disabled,.btn:hover[disabled],.smallcard .header .settings:hover:hover,.smallcard .header .settings:hover:focus,.smallcard .header .settings:hover:active,.smallcard .header .settings:hover.active,.smallcard .header .settings:hover.disabled,.smallcard .header .settings:hover[disabled]{background-color:#$RGB_GRAD_FROM;color:#fff}" \
   -e "$ a .card_bg:after{color:#$RGB_SYM;}" \
   -e "$ a .modal-backdrop{background-color:#fff;}" \
   -e "$ a .modal-header{color:#$RGB_HDR_TXT;}" \
   -e "$ a .nav-tabs>.active>a, .nav-tabs>.active>a:hover, .nav-tabs>.active>a:focus{background-color:#00B1EB;color:#fff}" \
   -e "$ a .smallcard{background-color:#eee;color:rgba(64,64,64,0.75);}" \
   -e "$ a .smallcard .header{background-color:#$RGB_HDR;color:#$RGB_TXT;}" \
   -e "$ a .smallcard .subinfos{color:rgba(64,64,64,0.75);}" \
   -e "$ a .switchOn{background-color:#00a540;}" \
   -i /www/docroot/css/gw.css
  sed \
   -e "$ a body{background-color:#fff;}" \
   -e "$ a .container>.row{background-color:#dadada;border-color:#dadada;}" \
   -e "$ a .navbar-inverse .navbar-inner{background-color:#fff;}" \
   -e "$ a .networkmap .devicelist{border-color:#094f9c;}" \
   -e "$ a .networkmap .right,.networkmap .left,.networkmap .longleft{background-color:#f89406;color:#fff}" \
   -i /www/docroot/css/gw-telstra.css
  echo 170@$(date +%H:%M:%S): Deploy new and modified light theme images
  echo  | base64 -d | tar -xzf - -C /
if [ -f /www/docroot/landingpage.lp -a $KEEP_LP = n ]
then
  sed \
   -e "$ a @media screen and (max-width: 979px) body.landingpage{background-color:#f8f8f8;background-image:unset;}" \
   -e "$ a body.landingpage{background-color:#f8f8f8;background-image:unset;}" \
   -i /www/docroot/css/gw-telstra.css
fi
elif [ "$THEME" = "Telstra" ]; then
  RGB_STATUS_ICON=3399cc;
  sed \
    -e '$ a .card_bg:after{z-index:-20;}' \
    -i /www/docroot/css/gw.css
  cp -p /rom/www/docroot/img/logo.gif /www/docroot/img/logo.gif
  echo 175@$(date +%H:%M:%S): Deploy new and modified diagnostics images for Telstra theme
  echo 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 | base64 -d | tar -xzf - -C /
elif [ "$THEME" = "night" ]; then
  if [ $COLOR = monochrome ]; then
    RGB_BTN=272c30; RGB_HDR=272c30; RGB_NAV=0088cc; RGB_SYM=eeeeee0f; RGB_GRAD_FROM=272c30; RGB_GRAD_TO=272c30; RGB_TXT=fff; RGB_STATUS_ICON=$RGB_NAV;
  else
    RGB_TXT=$RGB_HDR; RGB_STATUS_ICON=$RGB_HDR;
  fi
  sed \
   -e "$ a a{color:#$RGB_NAV;}" \
   -e "$ a body{background-color:#353c42;color:#fff}" \
   -e "$ a legend{color:#fff;}" \
   -e "$ a #tod-modal div:nth-child(3){background-color:#353c42;color:#fff;}" \
   -e "$ a .btn{color:#000}" \
   -e "$ a .btn.btn-primary{color:#fff}" \
   -e "$ a .btn-primary,.button:hover,.btn:hover,.smallcard .header .settings,.smallcard .header .settings:hover{background-color:#$RGB_GRAD_TO;background-image:-moz-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-webkit-gradient(linear,00,0100%,from(#$RGB_GRAD_FROM),to(#$RGB_GRAD_TO));background-image:-webkit-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-o-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:linear-gradient(tobottom,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);border-color:#$RGB_GRAD_TO;text-shadow:unset;}" \
   -e "$ a .btn:hover{-webkit-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);-moz-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(0,0,0,1);}" \
   -e "$ a .button:hover:hover,.button:hover:focus,.button:hover:active,.button:hover.active,.button:hover.disabled,.button:hover[disabled],.btn:hover:hover,.btn:hover:focus,.btn:hover:active,.btn:hover.active,.btn:hover.disabled,.btn:hover[disabled],.smallcard .header .settings:hover:hover,.smallcard .header .settings:hover:focus,.smallcard .header .settings:hover:active,.smallcard .header .settings:hover.active,.smallcard .header .settings:hover.disabled,.smallcard .header .settings:hover[disabled]{background-color:#$RGB_GRAD_FROM;color:#fff}" \
   -e "$ a .card{background-color:#272c30;}" \
   -e "$ a .card_bg:after{color:#$RGB_SYM;}" \
   -e "$ a .caret{border-top-color:#fff;}" \
   -e "$ a .dropdown-menu,.dropdown-menu>li>a{background-color:#$RGB_BTN;color:#fff;}" \
   -e "$ a .grey{background:#353c42;}" \
   -e "$ a .header .btn{background-color:#$RGB_BTN;color:#fff;}" \
   -e "$ a .header .btn:hover{background-color:#fff;color:#000;}" \
   -e "$ a .header .btn:hover .caret{border-top-color:#000;}" \
   -e "$ a .loading{background:#000000e0;}" \
   -e "$ a .loading-wrapper{background:#000000e0;}" \
   -e "$ a .login{background-color:#272c30;}" \
   -e "$ a .modal-header{color:#$RGB_TXT;}" \
   -e "$ a .modal-header,.modal-body,.modal-footer{background-color:#272c30;}" \
   -e "$ a .nav-list>.active>a,.nav-list>.active>a:hover,.nav-list>.active>a:focus{background-color:#$RGB_NAV;}" \
   -e "$ a .smallcard{background-color:#272c30;color:rgba(64,64,64,0.75);}" \
   -e "$ a .smallcard .content{background-color:#272c30;color:#fff;}" \
   -e "$ a .smallcard .header{background-color:#$RGB_HDR;}" \
   -e "$ a .smallcard .subinfos{color:#bec5cb;}" \
   -e "$ a .switchOn{background-color:#00a540;}" \
   -e "$ a .table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th {background-color:#353c42;}" \
   -i /www/docroot/css/gw.css
  sed \
   -e "$ a body{background-color:#353c42;color:#fff;}" \
   -e "$ a legend{color:#fff;}" \
   -e "$ a .btn{background-color:#005c32;background-image:none;color:#fff;text-shadow:none;}" \
   -e "$ a .btn-primary:hover,.btn-primary:focus,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled]{background-color:#005c32;color:#fff}" \
   -e "$ a .btn:hover .caret{border-top-color:#000;}" \
   -e "$ a .caret{border-top-color:#fff;}" \
   -e "$ a .container>.row{background-color:#272c30;border-color:#272330;}" \
   -e "$ a .menubar .menu-item a .menu-icon.selected,.menubar .menu-item a:hover .menu-icon{background-color:#3d8dbb;}" \
   -e "$ a .menubar .menu-item a{color:#0088cc;}" \
   -e "$ a .navbar-inverse .navbar-inner{background-color:#353c42;color:#fff;}" \
   -e "$ a .networkmap .devicelist{border-color:#024b96;}" \
   -e "$ a .networkmap .right,.networkmap .left,.networkmap .longleft{background-color:#fff;color:#000}" \
   -e "$ a .table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th {background-color:#353c42;}" \
   -i /www/docroot/css/gw-telstra.css
  echo 180@$(date +%H:%M:%S): Deploy new and modified night theme images
  echo  | base64 -d | tar -xzf - -C /
if [ -f /www/docroot/landingpage.lp ]; then
  if [ $KEEP_LP = y ]; then
    grep ^body /www/docroot/css/gw-telstra.css | grep gradient | sed -e 's/^body{/body.landingpage{/' >> /www/docroot/css/gw-telstra.css
  else
    sed \
      -e "$ a @media screen and (max-width: 979px) body.landingpage{background-color:#353c42;background-image:unset;}" \
      -e "$ a body.landingpage{background-color:#353c42;background-image:unset;}" \
      -e "$ a body.landingpage#detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
      -i /www/docroot/css/gw-telstra.css
  fi
fi
fi
sed \
  -e "$ a .status-icon{color:#$RGB_STATUS_ICON;}" \
  -i /www/docroot/css/gw.css

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  SRV_transformer=0
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-)
    . $s
  done

  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    echo 190@$(date +%H:%M:%S): Restarting transformer...
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
[ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
[ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
[ $SRV_system -gt 0 ] && /etc/init.d/system reload
[ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart

echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp to bypass the"
echo "++      Telstra Basic web GUI..."
echo
