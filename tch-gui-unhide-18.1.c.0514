#!/bin/sh
echo 000: Built for version 18.1.c.0514 - Release 2020.09.26
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

VARIANT=$(uci get env.var.variant_friendly_name)
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT)   TITLE="$VARIANT";;
  $HOSTNAME)  TITLE="$HOSTNAME";;
  *)          TITLE="$VARIANT-$MAC";;
esac

grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
if [ $? -eq 0 ]; then
  THEME=night
else
  THEME=light
fi
case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
  "005c32") COLOR=green;;
  "662e91") COLOR=purple;;
  "f36523") COLOR=orange;;
  "008fd5") COLOR=blue;;
  "272c30") COLOR=monochrome;;
  *)        if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
esac
ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
THEME_ONLY=n

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0


RESTORE=n
WRAPPER=n
YES=n

FILENAME=$(basename $0)

CARDS=""
update_cards() {
  MODAL=""
  case "$2" in
    c) MODAL="contentsharing-modal.lp";;
    m) MODAL="usermgr-modal.lp";;
    n) MODAL="nat-alg-helper-modal.lp";;
    p) MODAL="printersharing-modal.lp";;
    q) MODAL="qos-queue-modal.lp";;
    r) MODAL="relay-modal.lp";;
    s) MODAL="system-modal.lp";;
    x) MODAL="xdsl-low-modal.lp";;
    A) for PARAM in c m n p q r s x; do update_cards $1 $PARAM; done;;
    *) echo "002: WARNING - Ignored unknown card include/exclude option $2"
  esac
  if [ ! -z "$MODAL" ]; then
    CARDS=${1}${MODAL}$(echo $CARDS | sed -e "s/[IX]$MODAL//")
  fi
}

while getopts Wt:s:Tryun:x:i:c:h: option
do
 case "${option}" in
   W) WRAPPER=y;;
   t) case "$(echo ${OPTARG} | tr "GNOPL" "gnopl" | sed 's/\(.\)\(.*\)/\1/')" in
        g) THEME=night; COLOR=green; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        n) THEME=night; COLOR=blue;;
        o) THEME=night; COLOR=orange; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        *) THEME=light; COLOR=monochrome;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOP" "bgmop" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "$(echo ${OPTARG} | tr "DSN" "dsn" | sed 's/\(.\)\(.*\)/\1/')" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        *) TITLE="$VARIANT-$MAC";;
      esac;;
   r) RESTORE=y;;
   n) update_cards 'I' $OPTARG;;
   x) update_cards 'X' $OPTARG;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n               : Set a light (l) or night (n) theme (Default is current setting, or light if no theme has been applied)"
      echo " -c b|o|g|p|m         : Set the theme highlight colour (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo "                         b=blue o=orange g=green p=purple m=monochrome"
      echo " -i y|n               : Show (y) or hide (n) the card icons (Default is current setting, or n for light theme and y for night theme)"
      echo " -T                   : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n             : Set the browser tabs title to $VARIANT-$MAC (s), $VARIANT (d) or $HOSTNAME (n) (Default is current setting or $VARIANT-$MAC if not previously applied)"
      echo " -r                   : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -y                   : Bypass confirmation prompt (answers 'y')"
      echo " -x c|m|n|p|q|r|s|x|A : Exclude specific cards (use -x multiple times to specify multiple cards or use -xA for all of the following cards):"
      echo "                         c=Content Sharing m=Management n=NAT Helpers p=Printer Sharing q=QoS r=Relay Setup s=System Extras x=xDSL config A=ALL"
      echo " -n c|m|n|p|q|r|s|x|A : Include specific cards that were previously excluded (use -n multiple times to specify multiple cards or use -nA)"
      echo " -u                   : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U                   : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                        When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE: Theme (-t) and excluded/included cards (-x/-n) do not need to be re-specified when re-running the script: the"
      echo "      state will be 'remembered' between executions (unless you execute with the -r option, which will remove all state information)"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then

restore_www() {
  for d in $(echo cards docroot lua snippets | tr " " "$IFS")
  do
    echo 010: Restoring /www/$d
    for s in $(find /rom/www/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]
      then
        if [ "$1" = "V" ]
        then
          echo 014: Restoring $t
        fi
        cp -f -p "$s" "$t"
      fi
    done

    for f in $(find /www/$d -type f | grep -v -E \(/www/docroot/help\|003_lte.lp\))
    do
      if [ ! -f "/rom$f" ]
      then
        if [ "$1" = "V" ]
        then
          echo 019: Removing $f
        fi
        rm -f "$f"
      fi
    done
  done
}

if [ $RESTORE = y ]
then
  restore_www V
  echo 019: Removing config entries added to display hidden modals
  for s in $(uci show web | grep normally_hidden | cut -d. -f1,2)
  do
    uci delete $s
  done
  uci -q delete web.usermgrmodal.roles
  uci add_list web.usermgrmodal.roles='admin'
  uci commit web
  /etc/init.d/nginx restart
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020: Current version matches target \($TARGET_VERSION\)
else
  echo 020: WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020: It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020: If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020: Good choice.
    exit
  fi
fi

echo "030: This script will perform the following actions:"
echo "030:  - Properly enable SSH access over LAN"
echo "030:  - Enable unsigned configuration export/import and firmware upgrade in the web GUI"
echo "030:  - Ensure admin role can administer the parental block"
echo "030:  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030:  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030:  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030:  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons."
echo "030:  - The browser tabs titles will be set to $TITLE."
if [ ! -z "$CARDS" ]
then
echo "030:  - Cards:$(echo $CARDS | sed -e 's/-modal.lp//g' -e 's/I/ Include /g' -e 's/X/ Exclude /g')"
fi

echo 030: If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030: IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ "$(uci get dropbear.lan.enable)" = "1" -a "$(uci get dropbear.lan.PasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci get dropbear.lan.RootLogin)" = "1" ]
then
  echo 040: SSH already properly enabled for LAN access
else
  echo 040: Properly enable SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ "$(uci get system.config.export_plaintext)" = "1" -a "$(uci get system.config.export_unsigned)" = "1" -a "$(uci get system.config.import_plaintext)" = "1" -a "$(uci get system.config.import_unsigned)" = "1" ] 
then
  echo 040: Unsigned configuration export/import already enabled in the web GUI
else
  echo 040: Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ "$(uci get web.uidefault.upgradefw)" = "1" -a "$(uci get web.uidefault.upgradefw_role)" = "admin" ] 
then
  echo 040: Firmware upgrade already enabled in the web GUI
else
  echo 040: Enabling firmware upgrade in the web GUI
  uci set web.uidefault.upgradefw='1'
  uci set web.uidefault.upgradefw_role='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

echo "$(uci get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  echo 040: The admin role can already administer the parental block
else
  echo 040: Ensure admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

restore_www

# Always remove Telstra AIR card
if [ -f /www/cards/010_fon.lp ]
then
  rm /www/cards/010_fon.lp
fi

echo 060: Deploy modified broadband GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060: Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060: Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060: Deploy modified qos GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060: Deploy modified system GUI code
echo H4sIAAAAAAAAA+1WUW/bNhD2s34FoWGLDFiKHMf21i5Fiy1AH4phQAb0wQkMWqJlYhSpkXTkrMh++44SZdly7HRDs2EYvwdL5H08frw7nlyW5XnvhREDptNp9QR0n9X7cDS9iCeT6fBy0ouH8eVF3EPjlxZmsFYaS4R6Ugh9ivec/T+KEvKfYJmqF6yCz8z/aDQejy5GMD8cjuNLl/9/Am3+4++Gc/WgNMkjVnzRPUyCJ5PJsfxfwnXv5H80HY97KP6iKo7gf57/MCwk0RJzxbAm6SuUCsSFRskK84wgvaIKLSkjnheG6JrjBSOIiQQz+jvWVHAvI1qTjY7MTypyTHlwVpLFmoaJkOSs73kVHfFsg67Mrx0rohSsr+eiRG8iO2PtSyFzrMGstKQ8i+qxNa7pfEVYQSTYJfltTSUJfNg12hr8vqUWUmwedmkp1jgXKWFbCoww+xnrFdD882qkzuurEFYjuBB+I/tBMZHNIWiKcCPP/5EqE5V0y1ArhvmcVLFKjzDK0wxNuSLSuNdmPqqHTShvKg1grM4WQQYCf53QyN5e+3hbP2fxXWQU08IfoOdpkGtNpGE30bm5eT+HAx1ul0pRLAiW7ctb4EX1sfaWl5+5vNxdTpfNQTFPUVC/z4Z30T1ma4L+gLD5SEhLml3sGfpQuYR7h9mqSxgCTXhabWFPV+9RD9pNrmDFcOvsILFPOSt3nZWnnJUnnNngMZqt9DzHBRA+eU2VGLZYLv2Bd90uzyQhHKYe9wsVupsmT3n4xa8ZaFt7u+621kbVjuM6DCccw8nRh3c/HfPcmJ90XT7v+uNp1x87rk1ibGt5tcLqXZLAIDh6z21+djrDnFH+K7ivO1DgJwwrdXXrV8bQGG99ZLpKqEWWMdKYmllJcqHN7NeqmaIpDFNyTxMSWq4/2LahvmdaYgFtTwdnt973Kb1H9aa+KjAf+W86kzlmzHzEjeGs/xqhdn3bKqNEEojrD8B7T3BKZADxqg6PrjfwBVDQH1oJCNwcVZEIrs19MnvOF5k91CILzUfgyv/mq80y/nb82sqxsVzpnFUJ7Sq6oXnByAdT6gGnbHBQurP9a3w3QJ/qm2Hc1ZrgbXtXunT0iB77UAi2qQZGyOAgLocqOnU+27//z6vYp1cqUP9vqCi7Ksq/pqJ8QkWbWqOjW3DnkOs3h0+TS9Oc9sgw+W//h3FwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBo8Sd+c5YhACgAAA== | base64 -d | tar -xzf - -C /

echo 060: Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060: Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065: Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065: Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065: Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 070: Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd -a "$(uci get cwmpd.cwmpd_config.state)" = "1" ]
then
  CWMP=enabled
else
  CWMP=disabled
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - fon-modal.lp (Telstra Air)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|fon-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | cut -d. -f2)
  fi
  if [ "$RULE" = "cwmpconfmodal" -a "$CWMP" = "disabled" ]
  then
    echo 070: CWMP is disabled so disabling $f
    uci -q delete web.$RULE
    SRV_nginx=$(( $SRV_nginx + 1 ))
    continue
  fi
  if [ $CREATE_RULE = y ]
  then
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    echo $CARDS | grep -q "X$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070: Enabling $MODAL, but disabling card display
      uci add_list web.$RULE.roles='nobody'
    else
      echo 070: Enabling $MODAL
      uci add_list web.$RULE.roles='admin'
    fi
    SRV_nginx=$(( $SRV_nginx + 4 ))
  else
    echo $CARDS | grep -q "X$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070: Disabling card display for $MODAL 
      uci -q delete web.$RULE.roles
      uci add_list web.$RULE.roles='nobody'
      SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
    echo $CARDS | grep -q "I$MODAL"
    if [ $? -eq 0 ]
    then
      echo 070: Enabling card display for $MODAL 
      uci -q delete web.$RULE.roles
      uci add_list web.$RULE.roles='admin'
      SRV_nginx=$(( $SRV_nginx + 2 ))
    fi
  fi
done
# These were incorrectly enabled in release 2020.08.08 and earlier
uci -q delete web.mmpbxsipdevicemodal
uci -q delete web.mmpbxstatisticsmodal
uci commit web

# Modify management card to allow it to be suppressed
sed -e 's/^if assistant then/if admin and assistant then/' -i /www/cards/011_usermgr.lp

echo 070: Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

SERIAL=$(uci get env.var.serial)
echo 080: Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
sed -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" -i /www/docroot/modals/gateway-modal.lp

echo 085: Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

echo 090: Change the title in browser tabs to $TITLE
for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
do
    sed -e "s,title>.*</title,title>$TITLE</title," -i $f
done
sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua

echo 100: Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
 -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
 -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
 -e '$ a end' \
 -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
 -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
 -e '/^local mode_active = "default"/d' \
 -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
 -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
 -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
 -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
 -i /www/cards/003_internet.lp

echo 100: Hide Mobile card if no devices found
sed \
 -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
 -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
 -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
 -e '$ a end' \
 -i $(find /www/cards -type f -name '*lte.lp')

echo 100: Add DHCPv6 Server status to LAN card 
sed \
 -e '/local dhcpState$/a local dhcp6State_text = ""' \
 -e '/local dhcpState$/a local dhcp6State' \
 -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
 -e '/@lan.dhcpv4/a \    dhcpv4Proto = "uci.network.interface.@lan.proto",' \
 -e '/localdevmask = /d' \
 -e 's/localdevIP = "uci/localdevIP = "rpc/' \
 -e 's/dhcpState/dhcp4State/g' \
 -e 's/DHCP enabled/DHCPv4 enabled/' \
 -e 's/DHCP disabled/DHCPv4 disabled/' \
 -e '/getExactContent/a if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
 -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
 -e '/getExactContent/a \    dhcp6State = "1"' \
 -e '/getExactContent/a else' \
 -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
 -e '/getExactContent/a \    dhcp6State = "0"' \
 -e '/getExactContent/a end' \
 -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text),' \
 -e 's/and netmask is <strong>%s<\/strong>/\(<strong>%s<\/strong>\)/' \
 -e 's/localdevmask/dhcpv4Proto/' \
 -e '/^\\$/d' \
 -i /www/cards/005_LAN.lp

echo 100: Fix bug in relay setup card 
sed \
 -e '/getExactContent/a \ ' \
 -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
 -e 's/\r//' \
 -i /www/cards/018_relaysetup.lp

echo 100: Only show WAN Services card if WAN interface is defined 
sed \
 -e '/uci.firewall.userredirectNumberOfEntries/a \  wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = wan_services_data["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and wan_ifname ~= "" and session:hasAccess/' \
 -i /www/cards/007_wanservices.lp

echo 100: Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100: Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100: Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 100: Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 100: Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 100: Added switch to enable/disable DHCPv6 Server 
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"],switchDHCP)' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
then
  echo 105: Add DumaOS button
  sed -e '/id="basicview"/,$ d' /rom/www/docroot/gateway.lp > /www/docroot/gateway.lp.tmp
  echo "            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" >> /www/docroot/gateway.lp.tmp
  echo '            html[#html + 1] = T"DumaOS"' >> /www/docroot/gateway.lp.tmp
  echo "            html[#html + 1] = '</a>'" >> /www/docroot/gateway.lp.tmp
  sed -e '1,/if not bridged.isBridgedMode/ d' /rom/www/docroot/gateway.lp >> /www/docroot/gateway.lp.tmp
  mv /www/docroot/gateway.lp.tmp /www/docroot/gateway.lp
else
  echo 105: DumaOS button NOT added - DumaOS is disabled
fi

echo 105: Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 110: Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 120: Show the hidden Telephony tabs and fix default tab
sed \
 -e 's/--  {"mmpbx-service/    {"mmpbx-service/' \
 -e '/mmpbx-contacts/d' \
 -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
 -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
 -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
 -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
sed \
 -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
 -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
 -i /www/cards/008_telephony.lp

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 130: Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img  href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img  href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/Data Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -i /www/cards/009_diagnostics.lp

echo 130: Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130: Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135: Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140: Make device hostnames editable and sort list by host name
sed \
 -e "$(grep -n readonly /www/docroot/modals/device-modal.lp | sed -e '1d' -e '3,$d' | cut -d: -f1)d" \
 -e 's/canEdit = false/canEdit = true/' \
 -e '/basepath/a \    sorted = "FriendlyName",' \
 -i /www/docroot/modals/device-modal.lp

echo 140: Add the device host map
sed \
 -e "/modal-body/a \ ');" \
 -e '/modal-body/a \local tabs = {' \
 -e '/modal-body/a \    {' \
 -e '/modal-body/a \        desc = T"Devices List",' \
 -e '/modal-body/a \        active = "active",' \
 -e '/modal-body/a \        target = "modals/device-modal.lp",' \
 -e '/modal-body/a \    },' \
 -e '/modal-body/a \    {' \
 -e '/modal-body/a \        desc = T"Devices Map",' \
 -e '/modal-body/a \        target = "modals/hostmap-modal.lp",' \
 -e '/modal-body/a \    },' \
 -e '/modal-body/a \}' \
 -e '/modal-body/a \ngx.print(ui_helper.createModalTabs(tabs))' \
 -e "/modal-body/a \  ngx.print('\\\\" \
 -i /www/docroot/modals/device-modal.lp

echo 145: Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150: Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150: Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150: Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150: Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 160: Add a favicon
for f in $(grep -l -r '<head>\\' /www/ 2>/dev/null)
do
  sed -e '/<head>/a <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>\\' -i $f
done
echo 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 | base64 -d > /www/docroot/img/favicon.ico

  echo 165: Add or update card background icons
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(find /www/cards -type f -name '*lte.lp')
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i /www/cards/001_gateway.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0b2;"/' -i /www/cards/002_broadband.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i /www/cards/003_internet.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i /www/cards/004_wireless.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i /www/cards/005_LAN.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i /www/cards/006_Devices.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i /www/cards/007_wanservices.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i /www/cards/008_firewall.lp
  sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i /www/cards/008_telephony.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i /www/cards/009_diagnostics.lp
  [ -f /www/cards/011_usermgr.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i /www/cards/011_usermgr.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i /www/cards/012_contentsharing.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i /www/cards/012_printersharing.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i /www/cards/013_parental.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i /www/cards/015_iproutes.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i /www/cards/015_tod.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i /www/cards/018_relaysetup.lp
  sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i /www/cards/090_cwmpconf.lp
  sed -e 's/xf0ad/xf0ec;"/' -i /www/cards/092_natalghelper.lp
  sed -e 's/xf0ad/xf0b1;"/' -i /www/cards/093_xdsl.lp
else # THEME_ONLY = y
  echo 165: Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   
  
echo 165: Applying $THEME theme with $COLOR highlights and $ICONS card icons
# Common elements
sed \
 -e '$ a body{font-family:Roboto,Noto,sans-serif;}' \
 -e '$ a input,button,select,textarea{font-family:Roboto,Noto,sans-serif;}' \
 -e '$ a u{text-decoration:none;}' \
 -e '$ a .bbstats{margin:0px 0px -6px 20px;}' \
 -e '$ a .card{font-family:Roboto,Noto,sans-serif;}' \
 -e '$ a .card_bg>*{z-index:20;}' \
 -e "$ a .card_bg:after{visibility:$ICONS;}" \
 -e '$ a .card_bg.mirror:after{transform:matrix(-1,0,0,1,0,0);}' \
 -e '$ a .copyright{font-family:Roboto,Noto,sans-serif;text-shadow:none;display:none;}' \
 -e '$ a .dw{font-family:Roboto,Noto,sans-serif;}' \
 -e '$ a .header{border-bottom:0px;box-shadow:none;margin-bottom:30px;}' \
 -e '$ a .header img{width:180px;}' \
 -e '$ a .header .btn{margin-left:5px;}' \
 -e '$ a .nav-header{text-shadow:none;}' \
 -e '$ a .nav-list>li>a,.nav-list .nav-header{text-shadow:none;}' \
 -e '$ a .simple-desc{display:block;}' \
 -e '$ a .smallcard{border:0px;font-family:Roboto,Noto,sans-serif;font-size:14px;font-weight:400;}' \
 -e '$ a .smallcard .content{font-size:14px;}' \
 -e '$ a .smallcard .header{background-image:none;border-bottom:0px;font-size:20px;font-weight:400;text-shadow:none;}' \
 -e '$ a .smallcard .subinfos{font-size:14px;}' \
 -i /www/docroot/css/gw.css
sed \
 -e '$ a body{font-family:Roboto,Noto,sans-serif;background-image:none;}' \
 -e '$ a .navbar+.container{margin-top:130px;}' \
 -e '$ a .navbar-fixed-top .container{background-image:url(/img/logo.gif);background-repeat:no-repeat;background-size:180px;height:75px;margin-top:30px;}' \
 -e '$ a .navbar-fixed-top .navbar-inner{box-shadow:none;}' \
 -e '$ a .navbar-inner{box-shadow:none;}' \
 -e '$ a .navbar-inverse .navbar-inner{background-image:none;border-width:0px;}' \
 -i /www/docroot/css/gw-telstra.css

  # if you change any of these colors or CSS, recheck 001-Variables for default settings
  case "$COLOR" in 
    blue)   RGB_BTN=f36523; RGB_HDR=008fd5; RGB_NAV=008fd5; RGB_SYM=00b9f21f; RGB_GRAD_FROM=00b9f2; RGB_GRAD_TO=008fd5;;
    green)  RGB_BTN=662e91; RGB_HDR=005c32; RGB_NAV=005c32; RGB_SYM=ffec0126; RGB_GRAD_FROM=008a4c; RGB_GRAD_TO=005c32;;
    purple) RGB_BTN=005c32; RGB_HDR=662e91; RGB_NAV=008a4c; RGB_SYM=f365232b; RGB_GRAD_FROM=942977; RGB_GRAD_TO=662e91;;
    orange) RGB_BTN=662e91; RGB_HDR=f36523; RGB_NAV=f36523; RGB_SYM=008a4c3d; RGB_GRAD_FROM=f89406; RGB_GRAD_TO=f36523;;
  esac

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp ]
then
  echo 166: Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e '/<head>/a <link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico"/>\\' \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img src="/img/logo.gif" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
if [ "$THEME" = "light" ]; then # light theme
  if [ $COLOR = monochrome ]; then
    RGB_BTN=404040; RGB_HDR=eee; RGB_NAV=404040; RGB_SYM=018ed42b; RGB_GRAD_FROM=404040; RGB_GRAD_TO=404040; RGB_TXT=404040; RGB_HDR_TXT=$RGB_TXT;
  else
    RGB_TXT=fff
    RGB_HDR_TXT=$RGB_HDR
  fi
  sed \
   -e "$ a a{color:#$RGB_NAV;}" \
   -e "$ a body{background-color:#fff;}" \
   -e "$ a .btn{color:#000}" \
   -e "$ a .btn.btn-primary{color:#fff}" \
   -e "$ a .btn-primary,.button:hover,.btn:hover,.smallcard .header .settings,.smallcard .header .settings:hover{background-color:#$RGB_GRAD_TO;background-image:-moz-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-webkit-gradient(linear,00,0100%,from(#$RGB_GRAD_FROM),to(#$RGB_GRAD_TO));background-image:-webkit-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-o-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:linear-gradient(tobottom,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);border-color:#$RGB_GRAD_TO;text-shadow:unset;}" \
   -e "$ a .btn:hover{-webkit-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);-moz-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(0,0,0,1);}" \
   -e "$ a .button:hover:hover,.button:hover:focus,.button:hover:active,.button:hover.active,.button:hover.disabled,.button:hover[disabled],.btn:hover:hover,.btn:hover:focus,.btn:hover:active,.btn:hover.active,.btn:hover.disabled,.btn:hover[disabled],.smallcard .header .settings:hover:hover,.smallcard .header .settings:hover:focus,.smallcard .header .settings:hover:active,.smallcard .header .settings:hover.active,.smallcard .header .settings:hover.disabled,.smallcard .header .settings:hover[disabled]{background-color:#$RGB_GRAD_FROM;color:#fff}" \
   -e "$ a .card_bg:after{color:#$RGB_SYM;}" \
   -e "$ a .modal-backdrop{background-color:#fff;}" \
   -e "$ a .modal-header{color:#$RGB_HDR_TXT;}" \
   -e "$ a .nav-tabs>.active>a, .nav-tabs>.active>a:hover, .nav-tabs>.active>a:focus{background-color:#00B1EB;color:#fff}" \
   -e "$ a .smallcard{background-color:#eee;color:rgba(64,64,64,0.75);}" \
   -e "$ a .smallcard .header{background-color:#$RGB_HDR;color:#$RGB_TXT;}" \
   -e "$ a .smallcard .subinfos{color:rgba(64,64,64,0.75);}" \
   -e "$ a .switchOn{background-color:#00a540;}" \
   -i /www/docroot/css/gw.css
  sed \
   -e "$ a body{background-color:#fff;}" \
   -e "$ a .container>.row{background-color:#dadada;border-color:#dadada;}" \
   -e "$ a .navbar-inverse .navbar-inner{background-color:#fff;}" \
   -e "$ a .networkmap .devicelist{border-color:#094f9c;}" \
   -e "$ a .networkmap .right,.networkmap .left,.networkmap .longleft{background-color:#f89406;color:#fff}" \
   -i /www/docroot/css/gw-telstra.css
  echo 170: Deploy new and modified light theme images
  echo  | base64 -d | tar -xzf - -C /
  sed \
   -e "$ a @media screen and (max-width: 979px) body.landingpage{background-color:#f8f8f8;background-image:unset;}" \
   -e "$ a body.landingpage{background-color:#f8f8f8;background-image:unset;}" \
   -i /www/docroot/css/gw-telstra.css
else # night theme
  if [ $COLOR = monochrome ]; then
    RGB_BTN=272c30; RGB_HDR=272c30; RGB_NAV=0088cc; RGB_SYM=eeeeee0f; RGB_GRAD_FROM=272c30; RGB_GRAD_TO=272c30; RGB_TXT=fff;
  else
    RGB_TXT=$RGB_HDR
  fi
  sed \
   -e "$ a a{color:#$RGB_NAV;}" \
   -e "$ a body{background-color:#353c42;color:#fff}" \
   -e "$ a legend{color:#fff;}" \
   -e "$ a #tod-modal div:nth-child(3){background-color:#353c42;color:#fff;}" \
   -e "$ a .btn{color:#000}" \
   -e "$ a .btn.btn-primary{color:#fff}" \
   -e "$ a .btn-primary,.button:hover,.btn:hover,.smallcard .header .settings,.smallcard .header .settings:hover{background-color:#$RGB_GRAD_TO;background-image:-moz-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-webkit-gradient(linear,00,0100%,from(#$RGB_GRAD_FROM),to(#$RGB_GRAD_TO));background-image:-webkit-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:-o-linear-gradient(top,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);background-image:linear-gradient(tobottom,#$RGB_GRAD_FROM,#$RGB_GRAD_TO);border-color:#$RGB_GRAD_TO;text-shadow:unset;}" \
   -e "$ a .btn:hover{-webkit-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);-moz-box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(12,208,246,1);box-shadow:inset 0px 1px 0px rgba(255,255,255,.5),0px 0px 5px rgba(0,0,0,1);}" \
   -e "$ a .button:hover:hover,.button:hover:focus,.button:hover:active,.button:hover.active,.button:hover.disabled,.button:hover[disabled],.btn:hover:hover,.btn:hover:focus,.btn:hover:active,.btn:hover.active,.btn:hover.disabled,.btn:hover[disabled],.smallcard .header .settings:hover:hover,.smallcard .header .settings:hover:focus,.smallcard .header .settings:hover:active,.smallcard .header .settings:hover.active,.smallcard .header .settings:hover.disabled,.smallcard .header .settings:hover[disabled]{background-color:#$RGB_GRAD_FROM;color:#fff}" \
   -e "$ a .card{background-color:#272c30;}" \
   -e "$ a .card_bg:after{color:#$RGB_SYM;}" \
   -e "$ a .caret{border-top-color:#fff;}" \
   -e "$ a .dropdown-menu,.dropdown-menu>li>a{background-color:#$RGB_BTN;color:#fff;}" \
   -e "$ a .grey{background:#353c42;}" \
   -e "$ a .header .btn{background-color:#$RGB_BTN;color:#fff;}" \
   -e "$ a .header .btn:hover{background-color:#fff;color:#000;}" \
   -e "$ a .header .btn:hover .caret{border-top-color:#000;}" \
   -e "$ a .loading{background:#000000e0;}" \
   -e "$ a .loading-wrapper{background:#000000e0;}" \
   -e "$ a .login{background-color:#272c30;}" \
   -e "$ a .modal-header{color:#$RGB_TXT;}" \
   -e "$ a .modal-header,.modal-body,.modal-footer{background-color:#272c30;}" \
   -e "$ a .nav-list>.active>a,.nav-list>.active>a:hover,.nav-list>.active>a:focus{background-color:#$RGB_NAV;}" \
   -e "$ a .smallcard{background-color:#272c30;color:rgba(64,64,64,0.75);}" \
   -e "$ a .smallcard .content{background-color:#272c30;color:#fff;}" \
   -e "$ a .smallcard .header{background-color:#$RGB_HDR;}" \
   -e "$ a .smallcard .subinfos{color:#bec5cb;}" \
   -e "$ a .switchOn{background-color:#00a540;}" \
   -e "$ a .table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th {background-color:#353c42;}" \
   -i /www/docroot/css/gw.css
  sed \
   -e "$ a body{background-color:#353c42;color:#fff;}" \
   -e "$ a legend{color:#fff;}" \
   -e "$ a .btn{background-color:#005c32;background-image:none;color:#fff;text-shadow:none;}" \
   -e "$ a .btn-primary:hover,.btn-primary:focus,.btn-primary:active,.btn-primary.active,.btn-primary.disabled,.btn-primary[disabled]{background-color:#005c32;color:#fff}" \
   -e "$ a .btn:hover .caret{border-top-color:#000;}" \
   -e "$ a .caret{border-top-color:#fff;}" \
   -e "$ a .container>.row{background-color:#272c30;border-color:#272330;}" \
   -e "$ a .menubar .menu-item a .menu-icon.selected,.menubar .menu-item a:hover .menu-icon{background-color:#3d8dbb;}" \
   -e "$ a .menubar .menu-item a{color:#0088cc;}" \
   -e "$ a .navbar-inverse .navbar-inner{background-color:#353c42;color:#fff;}" \
   -e "$ a .networkmap .devicelist{border-color:#024b96;}" \
   -e "$ a .networkmap .right,.networkmap .left,.networkmap .longleft{background-color:#fff;color:#000}" \
   -e "$ a .table-striped tbody>tr:nth-child(odd)>td,.table-striped tbody>tr:nth-child(odd)>th {background-color:#353c42;}" \
   -i /www/docroot/css/gw-telstra.css
  echo 180: Deploy new and modified night theme images
  echo  | base64 -d | tar -xzf - -C /
  sed \
   -e "$ a @media screen and (max-width: 979px) body.landingpage{background-color:#353c42;background-image:unset;}" \
   -e "$ a body.landingpage{background-color:#353c42;background-image:unset;}" \
   -e "$ a body.landingpage#detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
   -i /www/docroot/css/gw-telstra.css
fi

echo 190: Applying service changes if required...
[ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
[ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
[ $SRV_system -gt 0 ] && /etc/init.d/system reload
[ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart

echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp to bypass the"
echo "++      Telstra Basic web GUI..."
echo
