#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 18.1.c.0514 - Release 2021.01.20
RELEASE='2021.01.20@16:00:49'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :c:d:f:h:i:l:p:rt:uv:yTVW option
do
 case "${option}" in
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   ?) echo "Optional parameters:"
      echo " Control Options:"
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -p y|n         : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
      echo "                    (Default is current setting i.e (n) by default)"
      echo " -v y|n         : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
      echo "                    (Default is current setting or (y) for first time installs)"
      echo " Theme Options:"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -t l|n|t|m     : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                    (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " Update Options:"
      echo " -u             : Check for and download any changes to this script (may be newer than latest release version)"
      echo "                    When specifying the -u option, it must be the ONLY parameter specifed."
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo " Miscellaneous Options:"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo "                    When specifying the -r option, it must be the ONLY parameter specifed."
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -V             : Show the release number of this script, the current installed release, and the latest available release on GitHub"
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
echo "030@$(date +%H:%M:%S):  - New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
echo "030@$(date +%H:%M:%S):  - New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified firewall GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified lte GUI code
echo H4sIAAAAAAAAA+1X+2/bNhDOz/4rCA6BZUCWX0m8tXHQIM2wAku6RzpgyAqBlmibCEVqFBUnLfK/746S/E4f62MYqgMSieTd8SPvu9N5Pp939r6wdEGGw6F7gmw+3XtvMBwe9Q6PDob9vW6ve9A/2iOHXxoYSp5ZZgjZM1rbd+m9b/1/KnOIf6wjPN0X48HHx78P+nX8v4asxj/RMZPZ56fBB8X/oNvtDQcHB90BxH8wGHTr+H8N2RF/aXlbp9wwq00WyPST98AAHx0dPRZ/SPv+RvyhDPT2SPcznO+98o3Hv91ODbeGqUwyy+MnJNZEaUuiGVNTTuxMZGQiJG80pI6YJJk1Qk3JqHwpZy0bSw6Tb4lQGTcWXt1UUA4fSj01vfOJvU+5TybaJMz6RMD9CwVbg83KcuE+qLTK4UK50Wi3ybly2zrX4g2zQqvGlFvL72yA/2KdgLbXnPNxLtqJHsM54marOkqkwZOy4YxLYDtsb/jfuTDco2AQrK/SVmmUGn13v6obM8sgcbhcqujsMacrSwv1XDyivFhYqlohs001TFe3QBcnS5lhCSq6+QDuJCymvIVKnvE4TGWiMGpVeGJ+KyKOhu6YaOjRPBJBeXeBypPnhQ5sJiYLA6ZiYjWsjrnxysnr3uvglsmct8gJ6QKTuGpAOIkA9z3/cW2/BxwsASVRBNoFCTy6n1H/MWSFm+AZJUEAW8A/GoA1bS0dVz7VJ/lU6z4X93iNWEEFFF7jCRtcxe6v3LaqqCEYCiT728Y1VSzhFNVXiIE4/kAdyMffHe1/5mpqZy/Ub5iSXs8nvf6w5YM5HhCtN81PVVx6gJTwPsL3wCeDlr/m7rZU/0Vnwopbfpknxd4q2oX8X2/d/9CtH6obneQqwl2WVwuFyiKlICUdPZfBWQs3rgc43Xpd0BInrilquyNd0T+B4E8bUBhzo6CoRUydxwKr2gQ+kFCdYOI5l9zyagoqHIfHtqdLvduRNfmGH5xBN4/QJtIyT1TmiPO2MeMsdhXjir4sNcglkslvIKdgoeCW33CJvzLG8opDLJAwZNaasnCnuXVvkWRZNqJZylQfbithd9JFakSBd5Q8AMgHfx3DhcsYcqZzZc09PONVJEjTFSDFcANHzCcslwiAHnYPdwNDkxEt6gYCE6oCNljHOXgnyktu59rcbKFU6yjVDpQfBar/QaBeKPIqW8XhyLMCpBxvIDHgQSt5X1EJ0uJhizM6xfwoOOO+x67wUEiScNHgga8xy3jK7MzttlL/Kp3gWQBawNXTOF7st0ldmAFMll9kU3cu1FV8vgADHuBuzoEfwn1hejvwYvb4yyGWgcS5W60K0JjEkl/hcX7Nubn3NlPE37oAf7NE+EQJ6W/UZPg2QgMSpFCbrNf8q9FsPSVkObP8UAfFSX9yQfSKL2vgmufQCiuxuSnKBN5Li4CbNb/HsbitksxZtcc6vid5irWOEhGPMEJukp6AOtauSh/f2zNtxBtoT5ikJOF2psECb4gS5gpi6Xa7k0d37lTlxct0q5lIsdlIg4xbZIRHO/gDIVMiTbnNOsWiUJHMY7AATmVVX1WYlo5nNpFFY7HaBno47RN6PBFcxrDFybHkUyh2J+4LuyxlmRvT40613NrlZzMejhLvYsMGvRbkWOdCybrWzj0B0wL8blT0mEHva+BrN2qGY8nUTZPMDJ+MmjNr0+xJp8NVMBc3IuWxYIE20w6OOkVxCsviFGJxykKhwhdXr0LDp4A0PLy7C72XEWdKsNZ3p/DLxQBvWbh/3t//vrv/wyA8fdU8OZMiuiEzbjg2OaRoNy7OzlyTdnF5Rlznkh13GJ5gyUyE31rPADgs8A052AHOnrw/JX6EH0mQEtucB8P/+pdOLbXUUksttdRSSy211FJLLbXUUksttXx78g/xLaWgACgAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo H4sIAAAAAAAAA+w9a1PcSJLzuSPmP1TIQyCthehuumHWNpw9mNkl1sac4Xx7wbAKIVV3a6yWdJKax7Lsb7/MeqmklmgwDd6LRRNDS1VZVfmoR2ZWVnmWZ+s/PPLThWdra4v9wlP/Ze+9ja2tza1hf2sA6b3uoLfxAxk+NmL4zPLCywj5IUuS4ja4Rfn/T58ZyD+feBl9xF5wf/n3hr3hs/yf4inlX2RenI+SbEqXPSPcX/6D7nDrWf5P8TTLf+qlaRiP8+V0hPvLfwivz/J/imeB/LPUf3gfuJf8h5sg/83BVvdZ/k/x3EH+41nopBeBA4nf1sYC+fc2+z0p/43uAOD63eGg9wPpLpfU5uffXP5R4nsR8bOrtEjINsno/87CjJpG4U+cPJymEeV5hvVjh8PO/NCd0CilGcBjR6GZaUAiT0M4Cfmn/9p3D//7vQtw1z92CEnOfqd+cXyVUplCSOxN8cuAjubIjvbWMWye6/k+zXOWT73gUxxdyZxpGO/FRRZSzO3KRO+yTJx6xcSZzMZUZKZeBm0VNMvL1jE1zy+SLNDTbmsXn4JTYOTQVDw2ZMaNALnBH/hzg5yQPHCoQmw0i/0iTGJTjDIL4TnHMprPogJxYZXAaCS5XZAwBjzDLDdL3jtjWnhR5I6yZOpCsnntJ/EoHCNe02l6dpmd52Ea08K4sSwSJBy1cESKE8NBAoxTsg2waZaMwogapJjQWFLC0Th5IdB5SXoATHKeTeMAX8RPRotZFosSP3ZYqkY1YNlAsc2FgbK3yVd6pXEg8AoPSlQJnaNyu0ajTXLKWsAqt6FGmyQpfm8bUsDAB2wFOMCa8OKAvGBvO9tkq8++uTxhnoPOb2Kebfztp5VgJWB/Vn4yLI1LgnA+OpyADxNWirVDo5xWADFH8U2wKaPjMIceaUp+QdEnHv8XFxf/Mvb/Vr8/2OhtMvu//7z+P8mD8ve9LFiSqt/43En+A1AEtjYGg+4A7f/Bs/7/NE8p/273Z7egEU0nSXzlRN+o6zU9KODNzc02+Q+7w2FN/oPBxvBZ/3uK582KUNaiUa7rf/BpWB1YLeHF8QpYGc9mBc1NY50W/jpfhdfZIgyLrzFNAgqr4z9BoSi1iQ5f+XCx63TW1she7J1FlK/z4d89XJ47sLgX9LJw8E+QTL0wNlcv6NksXDtPQp+uWh2BHugpl1clgsQ0cEHFdiPAU2immmJawkF1jspRsEBBASpZW4FqtioFikFFSZbDBUdQCSuA0ZbyUP0RegX/lrk5KJjAAciOx5eOX1w6IgWZLl5fTbz8HVNFge9AqxflnOdrYTxK1lgKjFShl4iKGYALvboA5YpmWYLUMfahKsVUdYfBiL9vx1FyBvVQJp6AS12rhNetJ2zr2Se9U+fci2a0gypPDc7oGlz8AjVE+BD08noT2wyUK2GLSOfozhGv6sZmby8hMG0vUOWuTgGdhgw9V3QQVNU7KlGRjdYM5y4ohoXMd1i+YXduOtX+hYLZu/T8Ypcnm/VmrHrzsiXep0xjJYdhWC/lVMGtOSKQThRFrVoUQ70lIKonhnWlOOBwbLzf2z0meyKZfIRBSWRv4ry+U5EgzGWZkuH5RQiD7kBYibzP8LoNCTIpppGtSgMY2q7A0WM5OndhdP75+OMHU+tyVmdlp/MmCM+JH4GFsG3kqRdvGLW0KZhYOLYxfYUN1BSGcmGq+cTxwUAsKGsBLEVQ5Y8N1S6IRHUyW6PE1vs+WGc1TIT0JC5hsF1ONGuIzZoGoWOFjOC1rUNBzOyUmatvkELZBsNrLQrjrwazTNaKZDyOqMgQaRmdJgWkVQcH9uhycHBIxLGea+zA7N3OsiPmXPgQjidad5ezlt5dLKtCxTqSgVWjJSdlDgtPl3dOHTRVcpydYU05eQDZwlBup7wCUCNeDNMDlEKRJfF4ZyUASvhrSYaoYtW+E1i+asskq3yrcStFRHA8ad2i+pP7WZgWO52fTMOZsD5MwjidFS8qg81ywHw3/IkXj2EGUwa9dQ3FXlx4YYGeEMtB3p3TXWS7aUxC1ApurNfYTRtmfDGhYI89Bx2s+BVq3X//uiNrJ7MUeEwr4xha7PzkpEkOk96697t3uV6ODax5ljvRzIORd4KzAGRNYaDsHn3+tUi+UsD31C69EcxYv0bCX7QMMMvBMcUATwx8NU6BmhvQeH7PkxiWSmfkhZGpasxoniZxTqHWcKS+HI7Y9vagu/GPfzSkDqxrP6Jetg+tZrCYmoIV1uubDrLvBnBE3nrBlamxXkBt57RQJRtYZm+Akm29vgjjILlwQgG5/z530lk+0drigoLOwucQ2TFgGhEd6Hsrq8/P0h+0/4LER+vm0TwA9/D/bGyhndjr97q9Z/v/KR5d/mw6fYQ27u//6W89+3+e5pmTf9Ny+sA2Fvh/et1uvyb/rW7/ef/vSR5uQqE2ozs2gq9Cvyk3ZZirZYED5l7ukaqnQFX23Z0UqObd2YjsVHatrjuyMGKJTiTf42YZaIy/AT/R9BdFzmajEXM8Xd8gLchvoM5HQ5jvPZFr0MMD7mMYgR0CdpEqI15urNLoyb0rkydbnEiZaFzfGNwEwBR6GRYmvvz5+PjQ/fQX61mp+7d+9Plf2LtLb+P+6//Gxsaz/vckT4P8uTsDZyJfeTse1Mbt638Pc+vrf2+48bz+P8WztpZmlIV+RbCgBa9IkJA4KQj39MDyEuYEnU2tOziQfPCntcEfu1tD8oVmzJ0LoiS9ze6g/0eRvbUx3By87tx9u6dhK6dtJwd9QS3AWtYDN35m4ZTmuTemrWhV81XBLIno/B7PK2AE5pgS7PwX3KQp0UVtJURPzi8JgHlyb+f8YO+oBfAgifemaXF1xDablJLlpYcYasOUEyg2usx7qPK8p+fAb+eIZvibO1+Q/eLL6TmHkyvmURp57POvLozRvWHXPfx0tMu2/gxb1Na/b2395tpuNIy/IEk1jJFyvU3+rUoJsdkEuTLNxzUmQWcOIvqfM5pdmZIltmpK9Tp/goj3WdPXoBbax8Z7uSlxY0NSD5P2YpWitQ+zpesn0Wwa57w8WVsDtbMjXKq454G+fyBVhrzJ0CsgS4jI2MVqIEFGmOE4gU/0/CVxhPufRTajdgc3ZLEV7qllb9o2Rt8gNwSxszkW/QoWR2ITSqIhHLwaFnsyRQW6gRLsIyJMh0b6BKc0TDjMIlQ2KqgcZmGShcVVhSkqSeGjgdUYcz8+DKqNe/5XWohpjBxSaCTQEKlkq9wSp8bs5cptWMH3l7Agn6uigySRovAqk5aLy2a1D0G/jX1KjmYpLB9sStPQymdaosJMlKkWWWoPu8FFaupdnVEC8+sXOTHOpmc0248/swUtjPMC6CDJiMiZ8zDJwyI8R0Binh8eyDl5/GV/78jv16YSreb9eC+eTY8YWqbAV03ohwctE7XWXGXyOC9nPT4xqFmOj1D4FBgBU8WIQJDDA7vT0BtllugQ8rOUjV5fbR7jsZM5N04xCDXc7tl9uwfKQacCcRKebl93fC/eC8JC9Sz4fhcEymzF7/fAJL5hzZOYgczIrQRHmAar/te/HuGGdgj28pmX05Rv0tcg77PorOTlqsPmWOdDmBcOb+JGt/45eWiAu4BFzxYJYllhaY1ryzESxBeYylpgV1kKK4JN4jASfzTJW40I9BsQqPfI+yHQb0dA6jpZKDSWcy9z4Av9E/LTy8a5HiwLY9rU8yyyI7dieT3413GI8R8G/uignO3lbiWpbxE37qgLVwj2NItUNjt/q+yi863esyS4EtuIxs5vnVXJ5Sita3AYSdKJUtDQCuxvprGOplEeh2lKi3ydZ4axH80CdG15ZznXWXnBGh7YRyUi+L42geH6d9BRcJN5SotJEmwbKEODeD6PU161XhOdF8C2Ssoqx19LIvMc+8iV0Nys66OgCqcq07JqVTPGCNcVjHh8O3mBf1+ywO/VN6OQRgFwZmd1LpNAdkTHIMudVZTwMVdiyDuYZMYx7r4SmGtw3LAOsPpmXUI3VFWnh3Xq5v48N0TnRtj8yLUaSFu/hbblEN5/HML7rSN7fsZYRHgthqTemyUgvEsaqr1VKsXkMMGOCYvrkQdfu17qnYURqm61HqeYoY1JWBh5jAxbBJUicM2WKgMHPAz/ZDTCLzYLcA284rVt6L1zgSesDZhVDpMjwhcR1UNtYgiTw7ClTXGikk5theI8Q+/eTL9spj/fTL/azO2SWddFs44zDXvBwI7aZDE/V/yaJHj0AOeCZx/wv+3T6v8LQlg+08iLH+4DXOD/2+p1t+r+v61h99n/9xTPm5XvFpv9XR163+jOuz2mG4eLK61gWN7AEPMNkRfGbE1/xyPbhCEkNWtonJ1z46ohzMkYHnf46ejY0CO7GfVMAd+ulFLpyp3ITWUWDFuJEFaQJwaObxcRNk4JWHgG31JVBVmzOj0yh2ntvBVP0qJVy9OMU6xM5LOq1OcrfrzOMI/f/fJhb81aufiDDOGuswiX/AoOWjvCgDROVX0rFy8tNmthCXHa0uB7oSUuyNejd1/2BF/RtmWnBc+ZhMQpS9UMHpxUfZyOwktxcBFQgVLVlk3npcV5yEGxqSo3RUUi4rzc4VaScN6qV9dwHF6P4xgOfmC7HR7GD+u9mbKYYkCbb+3i/zzTS9PoyixTNdsWK85dtKjd27AwKuBloHt5hqBWkaUX4EqYNh4CWnhhlKud7mq1SgyufY4SCIUIdCBdDIzsmBYXSfYVfRoOpihJLGAqCGrFsUBef7DUiJZdS6tmQS1M3isOF/YLQTQGIAMVrLZ/bnMiT3jmKZgkahDg3kq1n0Mps5qC5jVHa7ucUqxySMqK5cHca8JP0h6b+Ptqxo5kg5HHHRu6EE4Q4JSLAvMQIcFL1qh4x3M8hkJ5voITAXiqTRMtAPoEZBM+CbWDQ4/mcRoihuGuNRt6Qez0LYXP+ThaUFiOmu/iDxFHNGD+uqruJ+j+V7kFUffiV1zUZZLysjKjAhICOvL4QXPc0tBcrMr+IidsEUcN0Gcx1HhenBgRHRUGublhfuGqNx2UhUz3AqcqRWFUJn2zH19v82MYvznLdj7QeFxMtJanYexGMlE1Xkld3L6EiJn7GI9yhLHgVxU3G0R/xdyzxkUYwCyyMUwv2zD2Lpsx9i6bMNZTvxPG+9zjhVjvJQcaysIV5tKql7+avLyO51N05jZ2vc/szAFiyF39JBnhx+4EcPLxvgcNa34+weUscpOR6+tQiorbwb5dFN2HiOIQ1BJYHpA2TuHHJAhHlc0ztrWQxIjxVGaWo68p9zvR8g61FKTh1yTzaYBvh2o7VJLDVBl3xCDcht3Slvy5TreUXvYppYz1bFMB9MxxWODnMVgKmYZzAmAuO2PhMhi3EAAK61aIxxTFZre9W91tEzZdwiZspQdEUXKhC1t8l9IVCUsT502HHYJamffVLd5oqB3Ra9hc6JQnqZe8t4Btf8OGAiMUlI2VHYM0k602BG7fK2DtSz+j8gBjhRgegY5bVEYNgFNe3ZIZTAkrz48zVabcyO0wkggyNA6LJFvjYUc4yTKBtR8f3Me+JrZeNTQIj7EgmnnLFc7cLlVpu46VxZm8rlEpX9nxy1L35wffjVY2EB7QMsuYC6WFJ3HiMkvD5aKS8SKyx6vBQTT/NucZzt7oV1FFoG7Pv2JlPvBXXkiYVGndpNJNKUQXDAwMUhFKZzInqnGWzNJGSSmeEJmCViqaSo6hknpckGpi6IBKwzUaqQHU5qkezlNIwI1ym0DRx8GqytrHaUPr6nOU1knl09nj0srWmscWcn2ZqpO+ySnXSC99BBWjDT9OF00Cx7AKwRRwdAWT4aUY7YDeWi4TZG2GSAErs96rrNtOKlenmiM5ENmhdb29yghlV1JVhqyOSBX01J7vg4sxEnTvxSyYRai+JijploYUU8PLhvETWqsO9HsQf5CQjzhzEe6p0BqqzWmQU5/lNDTqwPdmgNpcUwgJOyUnzEqZR6tilzRgouef2vNj8c7yQD2RaEoiERqiQqlN/yuRaoEAtOrD985Y7UZJToNb8fIZyO2YtcLcF7cP3hmNUH7cm1MRiUhqHqbqKHvDWt2+KotbAefW48WrpHQPlqukWDc1pYB7cgCw4rwBa6Rgum71vHlH3EBX+halm0+/NIf7vpFY8c23C0rfO29DC9Rqj8JSnyoIi6eUMViIO3aBuve8En7V5BZ1GRoOTvFJxvcbNCfPTQVXfqiJv98WpasFMlW8YHaVZrvCZqvS1MPWN8GN+SW0vTvzcI1GdHWya6iXaNb40tLP+Qa/urhBs0eixAvCeLx2kbH7OAm7eWHnTTgdkzzzt411eFvP0zCOMYIxHBlkfUddEjJvGKjQAMBgbe3kRL8kIkj8GVpY8/cREH6VQu6d0zWhJ1vs6ijTCAPDNlgGkmBYr0tInuD4Ueh/1S83YPdR1OhqvmDiNbs9Qu61iCFFsIHSCLDQwWsKUGZMMQiHGXJEIoWZzP7MWfbqi7riv2qBDZeFuEdK32WZd4VV8hL8MoVrbs++qhggPJYFEis44jUSJbhcNhUs36aqAuE1mB/Z9SIa3P/sHTGw5vsuBFWFl4mrOIFUIRTRJEBgUWQ1q9vksGKrKy/vyyAgFXYbhfi/vCHi9PR7b2M/P9/4tMZ/1C7Nekgbt8d/bGz1hnPnvzaGz/f/Pcnz4PNfd44SCSv3S4dJuQM7viRsf+1fOpzkcY6HfVNrRRjDKsQ0PXbOnH9WIlRsMgNbN4znQlVs+SnyF95GqG92InI0l2EqzUEq+q1RpDVOxdHByrP8ohjfVVaxDgtvA7ArxV8J0mDxq8VEsCPxEaWp2e9aDcfhDz65u58OjvcOjq167MQsDoH2v9ArMncc5DOorckUskyr8RCbjltAbj3mVz0HdyhVkfk6FrNk7mxco7JdPRKXN5yJU6t/nkbAq0s01dMyzigF/YBpqNjRaMpCiV6BQMoYEG4O1PuhaZgnf1vJT19ahqgRbTFWFVpjl6/GPBhDFGcWGW/o5AX/5WG37L1iKLFMXXTCoHSz1FdxL3hBo0jnN2KxYyJGQ4mSe/N3NjLXAw3ErY3ErLekmHjhMYN+pB2pcW2iBbxUyzbHvSALmQz4Xz2AgYfBWLbx1rAwDtwQ0SnnDvfFoesNNFGUjpaEyqmK8oAqsqRIWOxHMPHT801+H6eevpkFooAi6OSFen0pglEQFRaFf2yKVxmKosYUrCVH+4dEWP+57E3sMvf2qIfa+ckZzHruCAxV6MhXzLGvbx815tZ2rvigJnc/Ede8fTb1MraX+Zld5555WXUrDbP1LH1LDfPcTMtcyt7ae7YOkxq/+Op8UOMTT21h0Lc1/5l60bSy6c6/te11nrCU1poEcJhkxS1CENntgoClikHUENSiF4bdze5ClHu3o0wOcXWax1Mmz+GXioxl84012MwzPasZn8W8+nZGfcB5gWFYRY7NF3WsWGILNvca6W3Y7F2moJrJXf9KBx/zvGonH7tUprYzp/fzt7NHHXDUcNkX31pETgmktXvh3X7+Vk3ri0/gEr7PDlqHfhRXHKL99GVeY/rE/GBeJA7SopopobMG6EyDqy4V+pnZ+SHeomvxGxL2cwSx5wpCIcDCvK3g/qF9W/Z7Nc9awHH1wSr+Yi6vcosd6o6mj1GxPvofu/4GUbUd3za79uZwuDFkpIsx1yLlzzLf7qhh0t5K5Si36vr6fV1KD07Qrc4OG5v+LMtQIxT/+IyL93Vd2rU7u8FwCr1aADVT32l8zqwqSA5qmopVXlgmKhE3q8xVIjLU71vxctI9lWnzteWzEYtQb6nMn+VF4iTwlYUBdUYXIt3l5Rrqm4AIvygUhaKfz85MUdImPWV4joBLZbqxZoCZJiOj5cXlle6HAdLSnDWbIPhxCYNY7Yaj/JeClNL/1nCcRvFhvH1tvTW6DvtPXKP28PoH3Z476G654t5ktoeGQSsbXWzj4fXD1Eyzwi0iFkIfU7klayynet/zsbLekiqLIsUIL0K88a7uZWKrNQDVnYc5W3xceREzo+XnR2gso/jvnVXaGfy8uZx2gE/hKPRh6nIDmmKEMOiky6l6Qv2v7v+1d6zNbePG7/4VHN10Ys1IfsV173KOJy/f1a0ddxJf78NNBkORlMSaIlg+lLq/vruLB0GKki1ndW1niA+JRRK7wAJY7AL7KMsELStFmBbQgQATaPGNiEynIC6kQSSAK5cSVlqVx4I0NhBbMJ0XBsGfciMzd/x5BE9AXBETvHFDaWonfcthN0EXGZoT/hSvzFWORWZ8GElK/FMWgo4+yPitCDJ26MTwEXrEMzBhXGjmJODx5CFqLBQe6oRpuJPlF5aLKY6vj6Z3g3wanHz/8iUzZGFO5Vl5tzofBAzCJJ9D6gc+TNiE9iFZlYzYisDPIjH3izk7ULy34QOKcfzFJJr7y1hWBBdkIJ5FBGz0HrcDbRYGiiGZKfPAxsSIfirTh4WsCkGHupiJAdBUqb+ETqnsDQyo8LKdeDRuz4AzJFUb3oNYOFE3wfi9viPgG5m5lPdiCurmvF5xPJDNfgB1BMaFwkXACX2GkZbEIgpj311aGPCSCYPWa84QLGgtPMzNghW1nSKqxmU0I+LH2fJMwD+n9qngEQVrxMqoHiQbPd5jHgToApZRdCx9dAVCQJWGMO6MswqR6Mszff6DHoaDH3igp7j0iq/Atpv7Gg90NFBaxP8G0civUJcqUcJk3X9AtVr6wUODU9H1HBP0Wrw3xotssn1rzzw9esmnBbVg//HoFGGf8MJWTgl2H0KGF2JyKx4kfrIQpDvwTRYEisO4I+m2AZ5bvMXj34kPmpScTl3uz6Xj18fL4g4EFxAyFCdgg15PmJB321VqsZIV+EVzkBFiEnHXqfpFlWVkrMqEDpOFiblMQlHKNBK1TQIbubLILwWenaEUafI3IYIzLgylc/mlXESRB70ECS+J1d6Ivsg4nXE20/ek0PKgN3LkMvb5OGoRZiKE1aEeW1NbLY4l0RL0HUmJ3bkGqomRtH6cFjTnopSCr+4Sj5YLlIYRLFnRGXnGHAQnUupzMx4UUSBxK2reKOpLVl4E7SteViQrQh+X6GFAW5nG5spkgQ76j7FPw3VegASISL4//oFHAtHeNGn0r1KPMLxFjbvKm6c+PNNJeaK8o932hEvZUkA/qBnDC/SnXbT0L7sAenes+88J80TJLbxAT81A8QBNCtjYg/xBnXEo+0di7EUiljwnf4jjPnoQeCVPTLzwSVkqI3jKhsHhekyLDYBqkYpvK6Wjz8xXL2WgjkJ1UlhuLCh8GJpX8Goap0x8VZ9iONThITlelgRJnAtlAsiuy1VFJLRZWKySSfsB4+A2wWuhjw10LmAbS7G55srYXMBj1CXvXRUnoUcee41ba/xNt9tDjnaQ6btI4kVc7kh3bWOw6mtQ8JDSvZumm8C2fgAcW8BjVBPaFzfG7DoMXdttg3Yw6kTa3ein37phGpFBo6N1S1o55QZDbzxGqH4uYcl7pfR8IGjooRW4B7uGF+W5zI3pRxktMkJlLSZaPesME6fjP9bdJovcGtZ6I/cngUN6ONBoTug5sIa8ZHn7aF+KIDh4A/98Q/vXgthVm5VOpzxBD964v4RfhbH8hr5sDfqZfSSTcG+EcSWdQJRm8v7to9smQpxKbQCAVj+DEYWpIYPxbmoBXLIRxwY9kQpdVZ7Xu5YvhWNKpVySN1hTDdt1ZpjsGl6oCJgb62QNeymgoYoeSaSiwIapE35yhfbK54DieRoWYigC3Va9ri2h0ASpszENr24DoEEV/S6NE0UkhS+Mkq3ZYM3wsLal1Nacat1gDh+Bvp53PBfi9it7PSbGNdbR6M4Ftr4xrSWh7Vldf/7aPX+gt7M17vir+3rTIb/LEwL2vw+33sdb7+37u6u/v7279D7ffrq7+vizd/vJ+/Xq+tp79+ny7V+9D5fXl3eXe3KCR7ZkxarbI7BBBwfWLWq0B1wGPwhv6Vtrai11FILabBKf2VAEDRYwwvhAlyr4ALxzE9NoAilvev3jiVEEmm4loxat3WworlXxfz0dytZByoY/bp0N5ccdhSzjyIbiUCKP26lQmrkN9p6bB8USoE4fsSEJCMUCa3hHQ78Hnfk8VpOD/Ew1vKtUKW2oyD6eFmQ1MYiNfHNZ3zM0nAMHTkaJ5osvys7WOLThrF33JRnUHmtfr62yorS77bh5Pd7f7rAaa9ZvgxU0F3OTP3QlP8kuzmHFynR28aufp7ByX50f6gfeW08dF7suat7XOCHP5Ak06YFslYnVeue+jq3weiAmsJlCL+d5NH09mJdlVrw6PJz7wf24jIJ5GkMPZE5hM4CuoQyKg1geRikgxn4e/pLCXLw//K6i/zHsBXw2Vj0bl3IMBK+ysT9WrRtDJ8ea4w8u3mP4DG8e5dH5oX+BTsDeQuaY7sxOt4Pzw6xzwNxEMCZNtE4wpHKOrCQd2ZRnZGUtmmAie32ekf/Bglw9qXz+pM9O2T7/8/Hx2Umf//n3KGb8SyNUBH4emgUMLzhwbI7/cXQGg94a/7OjPx338T9+j/JNITe8dTE3npeTxUSoSORXqtQduILeOmpBpgI/C9CHVtNaWN1If2Vd/J2K7bgAWpcFHcdUemNTYmyssu5zmGFlsbkOfhIXZQwyAdQ2ISBQaBdJnN6/ftGQ4/HRgKLIgVwwmyWRfqGfKZsU/czE89GIbEAf/W0t0jY+GLzoiP9A+jIMhMxDjLg2HsM4J+QRCoIKatXGkR//rCMd3NfKNoU0oNe/fYf/KhHk3jNBAUA8JeDOcU+8jFIYe/QRnIDaTv9mQAuYCoSWZCcSZgkriISTEYKS8DL/GheR9w9Y4gqAbabFQwKuiqKCX6AW70S82vdHk6Gnz2eoAnYfUQyxyTpJRav60IY4MKH8AGsMIpBfyrpjJigOdP/Ihq6w0c/28HmM+T2wqUSv+Ev7JAmfger3m/7zS9dR241Waiw9b/Cow2qQ74HZ//nu5npfyf84C6Ph6gp5egyM/Y4F2QEQxVLPSRSzXI2LoSbMaiNWYzNqvkDxQrx9FQoDtKI3GGDk4IvJyrNEh5MM/SpMjhZQFXSEi/Ybk/yk1WKbPaVZQ82C9d/ikUFrWBx1s+4KpfMhJ/UBanWGiRhTD5opU51jxnwb23XZwu+QyYk8Y08yO9ifDXxoY8gQ3UxtpJT+u3HoadVEPcilSjZco1qPBxrxSRu9qqTkKgUVQTBhSehXE6GpE4UNzHEayAVyhQ7kTQ5ct8DUee8nSWH3IftUuSe1SLcNSAvBwpZVOZNbttLUabYSDb+Kq5SmhfPkJi4KPVmcp7cUVOAIKWrphCNqfmCKIvd33fXOpzajUd2Irm+0k3CzXQ5KPahj0xeTk8gSCZGbH02cqkPOO40LIbRVXB0p58U5Rivw/lBcvBg5e+sTUnnGiyyJruPZvNynbCqq2XS+4eX1bOzMsoo4O9Ru26bMhlKoJrhwC2+rPb4ZtC+Rs/UbvH05uKCZ9ApI4Z0XC/j74uojtJT+ch7eXH3+fPmh48XtL3fmKR0qjMwAjtw5OLJTz2Zh27Ca0Reg+7yJdfhO1gwfot80fsTjt22ZjWumueKGQ7WNjT5tNbpKG7Ous20bAR49ArBjETmkMAm2djpQjzTxCc1zNk77J0pUdi/WohQCGdlPGq9u+hOrvvSlL33pS1/60pe+9KUvfelLX/ryf1/+A6wr46oAyAAA | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified wireless GUI code
echo H4sIAAAAAAAAA+0ZaXPbttKf+SswSPtCTiiaOj21o/RInh3Pa1pP7Wk+OB4NREISUorkI0DLruv+9u6C4CFZTuyO7bZTIYcgYO9dLBarxWKxvfXIw4exs7OjP2Gsfup5u7sz6Pn9zsBvb/ltv9f2t0j/sQXDkUvFMkK2siRRn4L73P4/dCzA/wHLQvmIUXAn//d8v73T7UEMgP/bvZ3Bxv9PMWr/+35vtBAZj7iUXpQ+IA908GAwuM3/vW5n1f+9Tr+zRfwHlOHW8S/3f6uVZlxlLJYRUzzcJWFC4kSRYMbiKSdqJiSZiIhbVqtF/huzccRJlAQsEr8yJZLYmnKl+IXy8L8wmTMR288XfJyLVpBk/LljWRqcpFlycUmGJOP/zyHKbBoyxeZJyCPqGJBcjGY8SnnWBANaXrVRgQZJrHisboFf3q2QpBThGozGcgUqUiYy6ZJ4euESqTIRTwFlzaqBnyTZnCkAKVa94rs22vEsyaOQjDkRMSkPWAs0ZxEcM0tMkJx3zjIPJeJSjeZczZKQDIeEHv14fELBCzw2jDIWimQEMas4cENMwPLACaM0AVSWTaXteBK+L8REjBrgyKmJrYlqryC4TfNAeNX5R+RWyM9FwL1vCqzOgacRqdsks5vHCnyubMe5D7H+HYmxNI0ubcficaj/lZ5E6M4BWKAAmyLPLA1qnppqQ/QEvFswoc5p+wzsHeW8Sa1/Z2r9T1NDbY9Lg1eCgi/blCRZzaxY0V6oUIhetHgk+fKiT5fUx4iNhNQBV0cvCn58fPjme9ixq4MnQQE4qCZaAnXhmRWzryPxiKkZQoioxFoIFcx+YHNulrU2BeLujMlvgwC+2HRbo8vtG4FNnUK3JvlPQFtLDOm6AC5MgEqkGQbJ8w/Wy1CckyBiUg6pTFncpa9WFucsivB+w43nzh4hNX6VVbwg40D/NYC95SzkmX1C34vWvoDorMR3GyZxayc7BIjeKpNJRAQlGI2nlGDSa42nLcyWQ/qfZxcT/yu+Z4SzIGsQ4Z5joihSjV152oHEjC4Q5OWQ9JsZgSlIOeNccQmGu7IiMZ0pPROQQsi5J0LrGv7crvexmKcR/x7x7PPiWGKgQsy5gI4SuA0mTn0Yl9XeBr1frfmUQSZSBbMvbOrNtH1BwTRXz9Y62fGS2KbF9UPdSR4HeM3YzhWgP1swoSC9AlDG58k5f41mtulMhIB47ex9sCCP6iOxD4iHb2ChpEDyFIzP35vIQ2cDUZDKw8QJgcw+sottRG2hIDnUQDkDC5yCzz1AmYMfXx//tK+SXziIc+aSSjZ0KpJC99mlAOhEvUGuCqm0Y4aoBX2BACitXlvWZZpxHpNkMqE1AAvDYhcJniLymc4fPiVfE4qwZJcUmBrrGv66hH6UCXz/YHkTJiK7EjfjMk1iyVFkMam+eoXaw2HP7/7225rVnnMVRJxlhxDTGWQ8u7azs4csDesvbHQPCy/thvdq2CG4vSJx0yluB2tCZ28h4jBZeMJAHr6RXprL2TJT5Phyu4owOEN/dT31TxtY/4dJgNXto70A7//+7/iD9ub99xSj6X+dAR+Bx/3f/52dzfv/acYN/6/cgA/B4zPvf78Pj/1l//d3AHzz/n+CUdSQWCksvc1/KWqH+z+c7/U0wXIGS9Xr+1a+ug7C0vZMl7jNmnX1qTjOJxMtNnABKqiXx+MgCTnR5ZRLroBriFX6kEzgcQLVfYVjJtfmLYMFr2SXdrHsFO+0cpFeXVOnqov5hVA2Tt6enByNfvyfY/3Vnl4/8PzDMX/U3wD+RP+3Pehu8v9TjNL/zbP6QGm/Gp/J/932oLfa/4XpJv8/xbhzc7bsfd5oht6pD1rsvivScP0mf7dyL9y8QwC8pByPgiTXadpvrJWtUN/Sl8jIJc1bpGroHf2w0tJDJh6871WWc0ffMcYURavq3MOJWdPtPbnUH9Rgnkeo7l1Q4pJqBSnTxvdmsxCvIEOt0cLR/YKh2TjtlP1E7LjBzq7Mx3bb7Trkd3jzf/e2ZbqGZlt3AvbBmO/FvihajKurrf7B8sYJ3FwqY+Rbkd26oZE0o6bp6/kL0q61Oe0aoZFKm7A4bDoHvFNTKh3WLm5qvEJNIysdhUKmEbscxUUbcI25V4Butl+LXpIhYIRbCyLhEhcXZSViaKIhSqckmRpf1l3zguTQeHzUKa3TpIatS2J3vN6BY7q4N3f7eg9UB8qrKqODDdmmRIC4Cgm2WFIDmQHBNRaTatyw0lLfeYUHPTw6+ZmuJb0Kqj9uABZKNUFN7PYdzfcAf94wvAvzItdLHMZc1eoSkShZ8Mz8ClAlh9Nn1fRF+6zueBYpx6aYVr6UcBBrOMe1jPxN8rBoQnIlll0tDmpbhMJ1VVtWNSaoW5+IV2WYP4yMJ83TSGztGIMIyexLSRCbuuVMUsetZKlnjg4Ch9ZaVoew0o/+ioMaBS2Fv/J5uFdX4Y12J3PHDtwUKs9iwjQYeUnGxQTwobo3mxVyQdasvvubVsKbsRmbsRn/rvEH1UAAEgAoAAA= | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    -e 's#/booster.lp#/modals/wireless-boosters-boosters-modal.lp#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.broadbandstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling broadband-status.lua
  uci add_list web.ruleset_main.rules='broadbandstatusajax'
  uci set web.broadbandstatusajax='rule'
  uci set web.broadbandstatusajax.target='/ajax/broadband-status.lua'
  uci set web.broadbandstatusajax.normally_hidden='1'
  uci add_list web.broadbandstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.devicesstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling devices-status.lua
  uci add_list web.ruleset_main.rules='devicesstatusajax'
  uci set web.devicesstatusajax='rule'
  uci set web.devicesstatusajax.target='/ajax/devices-status.lua'
  uci set web.devicesstatusajax.normally_hidden='1'
  uci add_list web.devicesstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway-status.lua
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci set web.gatewaystatusajax.normally_hidden='1'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.internetstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling internet-status.lua
  uci add_list web.ruleset_main.rules='internetstatusajax'
  uci set web.internetstatusajax='rule'
  uci set web.internetstatusajax.target='/ajax/internet-status.lua'
  uci set web.internetstatusajax.normally_hidden='1'
  uci add_list web.internetstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.telephonystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling telephony-status.lua
  uci add_list web.ruleset_main.rules='telephonystatusajax'
  uci set web.telephonystatusajax='rule'
  uci set web.telephonystatusajax.target='/ajax/telephony-status.lua'
  uci set web.telephonystatusajax.normally_hidden='1'
  uci add_list web.telephonystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.ssidstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling ssid-status.lua
  uci add_list web.ruleset_main.rules='ssidstatusajax'
  uci set web.ssidstatusajax='rule'
  uci set web.ssidstatusajax.target='/ajax/ssid-status.lua'
  uci set web.ssidstatusajax.normally_hidden='1'
  uci add_list web.ssidstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method may cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<a href=\"https://github.com/seud0nym/tch-gui-unhide/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"btn\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\"></i>&nbsp;<small>'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</small></a>'" \
    -e '/isBridgedMode/i\        end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management
sed \
  -e '/<title>/a \<script>\\' \
  -e '/<title>/a \window.intervalIDs=new Array();\\' \
  -e '/<title>/a \function clearRegisteredIntervals(){\\' \
  -e '/<title>/a \  for(let i=0;i<window.intervalIDs.length;i++){\\' \
  -e '/<title>/a \    clearInterval(window.intervalIDs[i]);\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \}\\' \
  -e '/<title>/a \var modalLoaded=false;\\' \
  -e '/<title>/a \$(document).bind("DOMSubtreeModified",function(){\\' \
  -e '/<title>/a \  if(!modalLoaded){\\' \
  -e '/<title>/a \    if($(".modal").length>0){\\' \
  -e '/<title>/a \      modalLoaded=true;\\' \
  -e '/<title>/a \      clearRegisteredIntervals();\\' \
  -e '/<title>/a \    }\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \});\\' \
  -e '/<title>/a \</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Add Network Operators to Mobile tabs
sed \
 -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-operators.lp", T"Network Operators"},' \
 -i /www/snippets/tabs-mobiled.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change Gateway to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua
sed -e '/local telstra_helper/,/local symbolv1/d' -e 's/symbolv1/"LAN"/' -i /www/cards/005_LAN.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix display bug on Mobile card and hide if no devices found
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix: "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask is/<br>Subnet Mask:/' \
  -e "s/IP is/IP:/" \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong style=\"letter-spacing:-1px\">%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/local disabled/d' \
  -e '/ipairs/i \  local htmlLeft = {}' \
  -e '/ipairs/i \  local htmlRight = {}' \
  -e '/ipairs/i \  local attributes = {' \
  -e '/ipairs/i \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/ipairs/i \  }' \
  -e '/if v.enable/,/end/d' \
  -e '/loopback/a \          local state = v.enable' \
  -e '/loopback/a \          local text' \
  -e '/loopback/a \          if state ~= "0" then' \
  -e '/loopback/a \              text =" enabled"' \
  -e '/loopback/a \              state = "1"' \
  -e '/loopback/a \          else' \
  -e '/loopback/a \              text = " disabled"' \
  -e '/loopback/a \          end' \
  -e '/loopback/a \          if #htmlRight >= #htmlLeft then' \
  -e '/loopback/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/loopback/a \          else' \
  -e '/loopback/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/loopback/a \          end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv4 = "rpc.network.firewall.internetpingipv4",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    wan6_ip = "rpc.network.interface.@wan6.ip6addr",' \
  -e '/"rpc.network.firewall.mode"/i \    wwan_ip = "rpc.network.interface.@wwan.ip6addr",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      local ping_ipv4_status' \
  -e '/subinfos/i \      if content.ping_ipv4 == "1" then' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping enabled"' \
  -e '/subinfos/i \      else' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping disabled"' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \      ngx.print(ui_helper.createSimpleLight(content.ping_ipv4, ping_ipv4_status))' \
  -e '/subinfos/i \      if content["wan6_ip"] ~= "" or content["wwan_ip"] ~= "" then' \
  -e '/subinfos/i \        local ping_ipv6_status' \
  -e '/subinfos/i \        if content.ping_ipv6 == "1" then' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping enabled"' \
  -e '/subinfos/i \        else' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping disabled"' \
  -e '/subinfos/i \        end' \
  -e '/subinfos/i \        ngx.print(ui_helper.createSimpleLight(content.ping_ipv6, ping_ipv6_status))' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \    end' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dial-plan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 125@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 125@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    -e '/uci.versioncusto.override.fwversion_override/a \  unhide_version = "rpc.gui.UnhideVersion",' \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         </tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:right;font-weight: 900;color:#808080;\">tch-gui-unhide</td>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:left;color:#808080;\">');  ngx.print( cui[\"unhide_version\"] ); ngx.print('</td>\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.01.20 for FW Version 18.1.c.0514\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
