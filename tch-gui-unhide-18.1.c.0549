#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0549 - Release 2021.01.01
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :Wt:s:Tryui:c:h:l:f:d: option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   r) RESTORE=y;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t|m     : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                    (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) Firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified firewall GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo H4sIAAAAAAAAA+0ZXXPbNtLP+hUYtjcmp/q2Jc3EVh7icRtP7drXpOlDmvFAJCThQoEsSFpxM/7vtwuAn5Iuts9x7qbYB4lcLBa72A9gl1kie3tfGfoAk8lE/QM0/9Xz4GAyGQzH48PJwV5/0D8cDPbI6GsLhpAlKZWE7MkoSv8T3ZfG/08hA/snSyrZV/SCh9t/MBocWPs/B5T2TyUVyTySK/bUGeHh9j/sj0bW/s8B2+2/onHMxSJ5Gkd4uP1H44mN/2eBL9hfxv5/7wMPsf8IDv7+YHw46lv7Pwfcw/6LjHfTJVuxLqAfs8YX7D8eDibK/sPhaDAejvb6Q7gAjvdI/6mV3QZ/c/uHkU9DEs4TMiWS/ZlxyVwHXh2v1dJjyvTXsWTz5HrOQwaETo+lfi/1lx3wjU4mljxg2kWc2qSAzWkWpjjj7evTi9NpysIE/OyInFyeX/46nYUZOyJnJ5e/vJne8ITPQnj9+fT06vxqKo7qvHzqL3Htzy1CUBgmmfBZ0obXkCbpRRTwOWdBm3Q6JOUrViUia5qAdnPJkiULWne5avNM+CmPBFmw9Kokdz1kqiiU2rjqXYFSzKe4ZV2appLPshSmNHepTZyVEsmnuAJuJ0HRfksYKlRTCoKOJNksge1nIlVmYEkK9HxepetWNaIiMJJMazTVvcABAWwIsEwzKXYxAxImglapIZK1zPq4RsHHbJv2Ah51o5iJbapLx1P0wEARFwyIZg6zEf9CMhq4nhlRGD+MEmZQKFT+q6URUWoYwJYZTuBcTrlAzr7mgA+SfW1kV+KsJU+ZW2NWGa0K+1i3KPYeveBjm9wQLggECaTf7mJFIcg0E5jp/mP9gzdVv45Hgkitq3i///gB1r4pme1ym6mmb1DUnGaqVGlQSBZGFMcED5G/cSjNTK3ZiKikGlHuR3YLmlEId6/uZddAl+JJA6y3BGGd5j2wUXoio1bVom3CpLxeJYv7mHbDKSuWNnnKId1uc3E95HzAISfPYFsJ1VBBqNPbVkI1VBCaxLeVUo/lpM4OH8zDXKrtgVzLqmgwHezBjxRmQWqISMxkwpM8oCpe8oIoGcyWwhx4iqRjvKti7Z9+O7tWu3JtEnM0+xfz07e3cZ6pCRFUxYUDN4lueZNw2mqQ+rBcooYhE1yK8NYMrLg4FRAEymUHBkc/beBiKoF/CpoUCxKiRKq8N9f5HU1tFlKhq+V1dNQ5Bn+XEyhzPh07ZfSnY6c946n44TF3hwdkadouxCXmaxPZrrkbtvXeo3nbBALTK7NCM5DfF5QftPdUmCeKOcqeW21jITW7rYK+bRZSQawwKv+HfLFMHTwTSpzYgjPXj+1YyMtMCqd6Vhl96rnM5IFKPquEWiPYzgQQ8cCE2L4KK70wxvG+Uz/m0AS5sz1iF/A21VBtIRkTDVwE9/xFkzDOZBw2kZIFDcwqEpG/lBFc9L68TzoNPmif/CiE9e6zT3kUPWKfzE2zoRrcYQN2H/PrpH0/tfxIJMSngkSQ2siMEcaBP2ioV9tHEfaNPNu0LIL7EWo27X57D93MMXMv5X5mLCbncA8FccgVXbBSUQxqOGD2b7WCYlM1yDCSLeD0YdIts4HX+tbl0N8O1uv1/8r3n8PJpH84Ohip7z9D2/97FkD7B5GP2n01P3i4/Yf9yaG1/3NA1f5wA6LhE/X8q3Df/u/B4WQ46gPd4OBgZOP/WWCL/dVltaNeuuGjGr4NUE3e8XiX/UfDyaRh//FgMLH93+eATgcKf9X6D2nKghckiFSXzV9ilQA3Rp6oPkOr1emQc6z6+V+qddWCKi9ln9Iu/gTRinLh7q/ZLOMdP5Jsv+gfwx04ZSK9XrIwhqtvpc0M1N36qOOZSSsoYOFKuWNSxuvjxbQ4SnYtVBkqyDO+c4EmqW7FtUkmUtAUa9Zaj66dv5rxfNa7s1OsUiqLYzn9Dosd2O4zcSqy1RsWMj+tt9uxWNYtjc+mum2Tt865eoJS/bMpbxH5S4nM61tEv9XP5JU0V3T3JKRJwn2vRmuq3u0zLtSgmnBXb8ZDnZbJXEBVeCKHV/iguOvCE3E/qSeFNJUnYi/1o0Kb2hPRV/pRobH6RNyv8K8QleIT8Rfla0U+n8rgmmPddR3F6Ke5kHnVh1PfmWfF1hR+iH+tHxW73BFpfIWllmZTGmezpWXaAq3qDm1SmaK4Vcq5SWMqzEInkEF5zKYIyr/cist4G+tXSYzZvMbymmRz57ym2fN+ZJugL+t2a9W1IWcEIftnxuStW2xcu5AfUkI9brtxliwvNMp13mSqbzXPzHImByVkzcMQi2djQnI8e0nnUDke92YvyW2UkYTeMPVFRDVDddJacxFE6y7Y1eFiHuEHGLH41I0hSlN3/4/WvndESIkpIr7rSwah+ZpR8H0X3IwKkG4FOQpYzeF8ZObP80iVAbA8DvgNiABRNnXU8dmZRcEtyWKMdeelWtPsZxg3U04YY66JsSEW03TpOj08mhPB45ilSU8PcuGHWQAzUjpLOqtCND27Lgx+ys2lwefOMpL8L0i3NHQgv6bLKJg6aD2HUNVbMEI3LwC54Lv3ylgwcZvWjeJiyPM25OMsDEBbYH8csgUTwcuGTTAnKUfQGRK/lxCgqLA57pmZ1b1dpqtQf7LDp/ffqfcfyAA/HTRFPxNxlmr2YOtXFLxHLYluU4YVvFVirL3Rna9Qfmjr9ogJkPqY92CJXkNyV/mfnKjYLeXy8/daaO+SzVDvkC4ffbh8J5A0iGpzoWRlCoG3zXyyKVxlwoZo1bGq76BwTV/qVZ2ph96uHiAe8T/xJY9x6HsXrroZBozXxdb4rVt8r3I98vmPFp8T93vX+a5iNK97Q0PX6+I1MU1+5xia+TnrqUnlBLOPeoo+Fr2jrQSxjGLXCXhCIaHhOYffbJD2rkpuBNB5cLusmOueX0TsCe7guzFNJ0s97079489xr7BKM+qbHvcj3LwhFXuN2FcTv/X12YIFCxYsWLBgwYIFCxYsWLBgwYIFCxYsWLBgwYIFCxYsWLBgwYKFbwr/BmZEzWwAUAAA | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified wireless GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    -e 's#/booster.lp#/modals/wireless-boosters-boosters-modal.lp#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status updates
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci set web.gatewaystatusajax.normally_hidden='1'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.broadbandstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling upload/download status updates
  uci add_list web.ruleset_main.rules='broadbandstatusajax'
  uci set web.broadbandstatusajax='rule'
  uci set web.broadbandstatusajax.target='/ajax/broadband-status.lua'
  uci set web.broadbandstatusajax.normally_hidden='1'
  uci add_list web.broadbandstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.ssidstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling SSID status updates
  uci add_list web.ruleset_main.rules='ssidstatusajax'
  uci set web.ssidstatusajax='rule'
  uci set web.ssidstatusajax.target='/ajax/ssid-status.lua'
  uci set web.ssidstatusajax.normally_hidden='1'
  uci add_list web.ssidstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\&nbsp;</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method may cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -i /www/docroot/modals/gateway-modal.lp

echo 080@$(date +%H:%M:%S): Add update available button
sed \
  -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
  -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
  -e "/isBridgedMode/i\          html[#html + 1] = '<a href=\"https://github.com/seud0nym/tch-gui-unhide/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"btn\">'" \
  -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\">&nbsp;</i><small>'" \
  -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
  -e "/isBridgedMode/i\          html[#html + 1] = '</small></a>'" \
  -e '/isBridgedMode/i\        end' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change the Gateway card title to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua
sed -e '/local telstra_helper/,/local symbolv1/d' -e 's/symbolv1/"LAN"/' -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
  -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
  -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
  -e '$ a end' \
  -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
  -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
  -e '/^local mode_active = "default"/d' \
  -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
  -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
  -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
  -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
  -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Add IPv6 address to Internet card if assigned
for f in $(ls /www/cards/snippets/003_internet_* | grep -E '(dhcp|pppoe|static)')
do
  prefix="$(echo $f | grep -o -E '(dhcp|ppp|static)')"
  if [ $prefix = "ppp" ]
  then
    table=content_rpc
  else
    table=cs
  fi
  sed \
    -e '/network.interface.@wan.ipaddr/a \    ip6addr = "rpc.network.interface.@wan6.ip6addr",' \
    -e "/${table}\[\"ipaddr\"\])/a \          format(T'<br><strong style=\"letter-spacing:-1px\">%s</strong>', ${table}[\"ip6addr\"])," \
    -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
    -i $f
done

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix is "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask/<br>Subnet Mask/' \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong style=\"letter-spacing:-1px\">%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv4 = "rpc.network.firewall.internetpingipv4",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    ipv6State = "uci.network.interface.@wan.ipv6",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      local ping_ipv4_status' \
  -e '/subinfos/i \      if content.ping_ipv4 == "1" then' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping enabled"' \
  -e '/subinfos/i \      else' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping disabled"' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \      ngx.print(ui_helper.createSimpleLight(content.ping_ipv4, ping_ipv4_status))' \
  -e '/subinfos/i \      if content["ipv6State"] == "1" then' \
  -e '/subinfos/i \        local ping_ipv6_status' \
  -e '/subinfos/i \        if content.ping_ipv6 == "1" then' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping enabled"' \
  -e '/subinfos/i \        else' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping disabled"' \
  -e '/subinfos/i \        end' \
  -e '/subinfos/i \        ngx.print(ui_helper.createSimpleLight(content.ping_ipv6, ping_ipv6_status))' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \    end' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dial-plan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    -e '/uci.versioncusto.override.fwversion_override/a \  unhide_version = "rpc.gui.UnhideVersion",' \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         </tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:right;font-weight: 900;color:#808080;\">tch-gui-unhide</td>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:left;color:#808080;\">');  ngx.print( cui[\"unhide_version\"] ); ngx.print('</td>\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.01.01 for FW Version 18.1.c.0549\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
