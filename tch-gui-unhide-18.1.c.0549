#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for firmware version 18.1.c.0549 - Release 2021.01.31
RELEASE='2021.01.31@19:49'
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

grep -q 'rpc.gui.pwd.@' /www/docroot/modals/mmpbx-profile-modal.lp
if [ $? -eq 0 ]; then
  SIP_PWDS=y
else
  SIP_PWDS=n
fi

INSTALLED_RELEASE="$(grep -o -m 1 -E '[0-9][0-9][0-9][0-9]\.[0-9][0-9]\.[0-9][0-9]@[0-9][0-9]:[0-9][0-9]:[0-9][0-9]' /usr/share/transformer/mappings/rpc/gui.map 2>/dev/null)"

grep -q 'rpc.gui.UpdateAvailable' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  UPDATE_BTN=y
else
  grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
  if [ $? -eq 0 ]; then
    UPDATE_BTN=n
  else
    UPDATE_BTN=y
  fi
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]; then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :c:d:f:h:i:l:p:rt:uv:yTVW option
do
 case "${option}" in
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   p) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then SIP_PWDS=y; else SIP_PWDS=n; fi;;
   r) RESTORE=y;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   u) RESULT=$(curl -m 5 -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "002@$(date +%H:%M:%S): Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "002@$(date +%H:%M:%S): Successfully updated $FILENAME."
                  return 0
                else
                  echo "002@$(date +%H:%M:%S): Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "002@$(date +%H:%M:%S): Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "002@$(date +%H:%M:%S): GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   v) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then UPDATE_BTN=y; else UPDATE_BTN=n; fi;;
   y) YES=y;;
   T) THEME_ONLY=y;;
   V) LATEST_RELEASE=$(curl -m 1 -q -s -k -L -r0-9 https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/VERSION.txt)
      echo "002@$(date +%H:%M:%S): This Release       $RELEASE"
      if [ -z "$INSTALLED_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Installed Release  NOT INSTALLED"
      else
        echo "002@$(date +%H:%M:%S): Installed Release  $INSTALLED_RELEASE"
      fi
      if [ -z "$LATEST_RELEASE" ]; then
        echo "002@$(date +%H:%M:%S): Latest Release     UNKNOWN (No internet access?)"
      else
        echo "002@$(date +%H:%M:%S): Latest Release     $LATEST_RELEASE"
      fi
      exit;;      
   W) WRAPPER=y;;
   ?) echo "Optional parameters:"
      echo " Control Options:"
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -p y|n         : Use decrypted text (y) or masked password (n) field for SIP Profile passwords"
      echo "                    (Default is current setting i.e (n) by default)"
      echo " -v y|n         : Enable (y) check for new releases and show 'Update Available' button in GUI, or Disable (n)"
      echo "                    (Default is current setting or (y) for first time installs)"
      echo " Theme Options:"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -t l|n|t|m     : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                    (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " Update Options:"
      echo " -u             : Check for and download any changes to this script (may be newer than latest release version)"
      echo "                    When specifying the -u option, it must be the ONLY parameter specifed."
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo " Miscellaneous Options:"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo "                    When specifying the -r option, it must be the ONLY parameter specifed."
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -V             : Show the release number of this script, the current installed release, and the latest available release on GitHub"
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
if [ -z "$INSTALLED_RELEASE" ]; then
echo "030@$(date +%H:%M:%S):  - Install tch-gui-unhide release $RELEASE"
else
echo "030@$(date +%H:%M:%S):  - Replace tch-gui-unhide release $INSTALLED_RELEASE with $RELEASE"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi
if [ "$SIP_PWDS" = y ]; then
echo "030@$(date +%H:%M:%S):  - SIP Profile passwords will be decrypted and displayed in text fields rather than password fields"
fi
if [ "$UPDATE_BTN" = y ]; then
echo "030@$(date +%H:%M:%S):  - New release checking is ENABLED and 'Update Available' will be shown in GUI when new version released"
else
echo "030@$(date +%H:%M:%S):  - New release checking is DISABLED! 'Update Available' will NOT be shown in GUI when new version released"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified firewall GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo H4sIAAAAAAAAA+1ZbW/bOBLOZ/0KgrtuJESW5Zc6d0mdotdsr8Whe4tt+uGQFgEtUTZ39XYiVTsX5L/fDEXJL7GdBG26tzjzgy2RD4cznOHMcDSbzToHT9x8aMfHx/of2vq/fu72j/tDv9frDQDX9Qfd3gF5/tSMYSulYgUhB0WWqV24+8b/pG0G+g9YEcontIIH6X/g+88Hw+PBsAv67z73j/f6/x5toX/f715NmOIzdu3F+bdcAxU8HA636L/r9wf9Nf0PAH9A/G/JxLb2f67/djsvuCpYKmPQfXhCwoykmSLBlKUTTtRUSBKJmFtWu01+Stk45iTOAhaL/zAlstSacKX4XHn4E2YJE6l9OOPjUrSDrOCHjmVpOMmLbH5NRqTg/y5FwW0aMsWSLOQxdQykFFdTHue8WIYBLa8ZaKBBliqeqi341VHa8BCJNHSJLMcwQapCpBPPdFUvMFIj4ywrXCJyJgoJ6ISpqbfSWQOzAsaW6On3ekHFk7x7JdK8RMjN7VL3VVaqphtmEeFGRKSGur000wGdWEtTLsVnmLUqo1dwFqKe7MilaZmMQWxX8+uQDunCMbN4Gmol/pyloJo0EpOy0OpERaxuKzJlFSy5UpmC3hGh8lp6CU+8X1+9v8A+6urxqOB8bfgNdMFokJf1AGg+8F7/8vGjZBMcurWsNebBhn6as0C9rrptM+w0wEta5koknO6SnHZwpY5Brm/DglScsfAhhBDHvkyAUqVb6pyAgdhdtztYooaKkZqcwt1E2wuYspf05RL6LOSTU0Id4nnmhWpdgMBAuwwUYSmpGDeGRKIiS+D4cVKJQbKISA7Ew8byyjTAE1h3X2QXMN2uqNTnJGTXaL6VPZsxMIi/DMHd1phpVhabQJCP+Q5pkd7AABORloojdA051Lihb3CGoXUcIhxLRBVTZ8RH8dIFox9ToZrh0Yh0q3EzgtYEj9TiseRrnZJq6wZHVhapOZL2BW2FpCUJ/E4L/AX28Q+4o65exK1Xdas9cGsJ3VoER68GPFV71PC8YaUNa9xHtN7PXWRXCG6mtGlahV/AYHf0+a8VJCVazoikk7kXqLlnenD7zePJlMlXQQAvcB7AT7NYdkx60NavkCSAQWu+a0OCA8SLV0oV2oGIQC9xYwUxk2gNFHvaIo2ythSTlIInAF+ALORg8so+/GS9CMUXovEjKnOW9unZWmfC4hgTFhw4dE4JWcxfBBAvgMOs+GvAvdVMwa78vWIetoVuE8clqYjNz0IYh8AyW7msXSbydDWeUO1O2+NJGwPiiD77YR51e3891XKgRI0gIslj3g65DOjZC1F36y0yfoCpUraxAwAdcfYsHcv8lHy4luBcCB72E/ICvEUG3kKEI1qLg5xoEvTscIXzTHrAHPi3VthpJZ3Wv0jr7Unr/UnrA3VhDKfYjrMq7ItOtQJwgNw/RopAFAGMsaLIZu0y3yrQx3yHHMabr0my6vKMCjzj+r6ZACGT03EGXGxlHaIa0WGtkeCson5HDoiH60LUbMPQHZaR0xa53EJMR7At1HBsI7nPX7ET03D7HkDMR+k3Mgo5QlvnEOvcGl912PJ60aFbR2JvkXNg0tIb3NUlMv7+b81ub9shXBiTk0esq3OZe5bF5OZr9jGCFHX7weaphDzwAjIHXgCk4PJes6qyjy2moAc3irJBhA74tE3/MihEruDpC1yTMOd4d376ydqdfJCbCh6C03/fZM7r6cdpBZpuAS3SDwNMtgDr7MPA5EaYTj4MIjwXMo8Z3kZCHXxfwv8RQdd9TeHBDqv04yV0UXICWSymbvBPa5YXBKaGwFQTgCSALgOTBTAxwEQDMaw3SBO/G7aOFgscLUgcgWQ4FUM7TLpdUkKZo183AQ6Dnu2ABn708kwqiN7sNzZvgl1lfV5cMgh3lyqYejzmCZjL6w+/vlHZ7zy1nc9uk13aGM40NZv+cDfCOPrep0GQCusMHXf5Dti4cQNfNZqfdYJraNR5PsahDXTQja6siR2bl9ROcgVbJf4bwY2/MBNWmardA0yuPYSnsjdizkO7t5nRhefbSrEafjjJ6qw73lQlcb3j1eUD4beQ1/wmwaU4nywvYiK2GxWCI8nhosFRjSJqXr3KFEajgd93biBUs+IdOI7iC6vmvjt3TmdwPc5mHuZ3SMqbFjwa0c6iTvSyGNGjc3j10mxmO6dglrdOZZ4/2o6+U10vOHFuKsIjyVWz1h3rdfG+2qwtDO7dOVwlSzlteNPrgAOrHRQ4QZ3krqRq0PlHl1j+pxvW/8IswOrWk1WAH1X/fz488Ls9f9jf13+/R1vWv44TT7DG4+v/fX9f//8+7Y7+7+YJX73G7vq/3z32u2v6Hw6O+/v6//doVeUGE4eV2vzvVSrx8Np9XTy9rxTfVFkfW2iHqF7Vq+pq03J9WmVVldTWnGI92b5bsnYuu589SCRKTuCaBZcG/F0iZorZ99DS9e1dpCAjvSqxJgC01kisVsJXiVCfPv1Hgwd+JahLsopV9Ttdy2/kWin914/uyveC5tm1zP1rae3ddXrXMviHVatcC7P6DeR3Ve9dvTPy0TV7/e2i2pxxGUX6wxMoQkT6AHk8DeBMEJ2bu+QGFBNWH1MiFkvuLuaYh1tTPsWEVbJru+o2Rd26k97cUqfJa/lcKBsf3l5c/HL1z3841h/tQPZt3/Zt3/btT9n+C2e4h7wAKAAA | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified lte GUI code
echo H4sIAAAAAAAAA+1X+2/bNhDOz/4rCA6BbUCWn7G3Ng4apBlWYEn3SAcMWSHQEm0ToUiNouKkRf733VGS3+ljfQxDdUAikbw7fuR9dzovFov2wReWDshoNHJPkO2ne+/2R6Nh92g4GPUOOt3OoDc8IEdfGhhKllpmCDkwWtt36b1v/X8qC4h/pEM83RfjwcfHvwf6Vfy/hqzHP9YRk+nnp8EHxX/Q6RwNhqPBEOPf7w8GVfy/huyJv7S8pRNumNUm9WXyyXtggIfD4WPxh7TvbcV/eNQ5OiCdz3C+98o3Hv9WKzHcGqZSySyPnpBIE6UtCedMzTixc5GSqZC8VpM6ZJKk1gg1I+PipZi1bCI5TL4lQqXcWHh1U34xfCj01OzOI/Y+4R6ZahMz6xEB9y8UbA02a8u5e7/UKoZL5Vqt1SLnym3rXIs3zAqtajNuLb+zPv6LdAzajfqCTzLRivUEzhHVm+VRQg2elA3mXALbYXvD/86E4Q0KBv7mKm0WRonRd/fruhGzDBKHy5WKTh9zura0VM/EI8rLhZWqFTLdVsN0dQt0ebKEGRajopv34U6CfKqxVMlSHgWJjBVGrQxPxG9FyNHQHRMNGzQLhV/cna+y+HmuA5uJ6dKAqYhYDasTbhrF5HX3tX/LZMab5IR0gElc1SCcRID7rve4ttcFDhaA4jAE7ZwEDXqYUu8xZLkb/xklvg9bwD/qgzVtrhyXPtUn+VSbPpf3eI1YQQUUXuMJa1xF7q/YtqyoARgKJPvb2jVVLOYU1deIgTj+QB3Ix98d7X/mambnL9RvmJKNrke6vVHTA3M8IFpvm5+qqPAAKdH4CN99j/Sb3oa720L9F50KK275ZRbne6twH/J/vXXvQ7d+KG90mqkQd1ldLRQqi5SClHT0XAVnI9y47uN083VOS5y4pqjtjnRF/wSCP61BYcyMgqIWMnUeCaxqU/hAQnWCiedccsvLKahwHB67ni71fkfWZFt+cAbdPEKbUMssVqkjztvanLPIVYwr+rLQIJdIJq+GnIKFnFtezSX+2hjLKw6xQMKQWWuKwp1k1r2FkqXpmKYJUz24rZjdSRepMQXeUfIAIB+8TQwXLmPImc6UNffwjNaRIE3XgOTDLRwRn7JMIgAK3/79wNBkTPO6gcCEKoH1N3H234nyktuFNjc7KNUmSrUH5UeB6n0QqBeKvErXcTjyrAEpxltIDHjQSt6XVIK0eNjhjE4wP3LOuO+xKzwUkiRYNnjga8JSnjA7d7ut1b9Sx3/mgxZw9TSKlvttUxdmAJPlF+nMnQt1FV8swYAHuJtz4IdwX5juHryYPd5qiGUgdu7WqwI0JpHkV3icXzNu7hvbKeLtXIC3XSI8ooT0tmoyfBuhAfETqE22Uf+rVm8+JWQ1s/pQ+/lJf3JBbORfVt81z4EVVmJzk5cJvJcmATcbfo8jcVsmmbNqTXR0T7IEax0lIhpjhNwkPQF1rF2lPr635tqIN9CeMElJzO1cgwXeECXMFcTC7W4nj+7cqYqLl8lOM5Fgs5H4KbfIiAZt4w+EVIkk4TZt54tChTKLwAI4lZZ9VW5aOJ7bWOaNxXob2MBpj9DjqeAygi1OjiWfQbE7cV/YVSlL3Zget8vl5j4/2/FwlHgXG7botSTHJhcK1jX37gmYluD3o6LHDHpfA1+7cT2YSKZu6mRu+HRcn1ubpE/aba78hbgRCY8E87WZtXHUzotTUBSnAItTGggVvLh6FRg+A6TB0d1d0HgZcqYEa353Cr9cDPCWBYfnvcPvO4c/9IPTV/WTMynCGzLnhmOTQ/J24+LszDVpF5dnxHUu6XGb4QlWzET4zc0MgMMC35CDbeDsyftT4kf4kQQpsct5MPyvf+lUUkkllVRSSSWVVFJJJZVUUkkllVRSybcn/wCx8HF2ACgAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified wireless GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    -e 's#/booster.lp#/modals/wireless-boosters-boosters-modal.lp#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

echo 067@$(date +%H:%M:%S): Creating QoS Reclassify Rules modal
sed \
  -e 's/\(classify[\.-]\)/re\1/' \
  -e 's/\("\)\(classify"..uniqueKey\)/\1re\2/' \
  -e 's/Classify/Reclassify/' \
  /www/docroot/modals/qos-classify-modal.lp > /www/docroot/modals/qos-reclassify-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.broadbandstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling broadband-status.lua
  uci add_list web.ruleset_main.rules='broadbandstatusajax'
  uci set web.broadbandstatusajax='rule'
  uci set web.broadbandstatusajax.target='/ajax/broadband-status.lua'
  uci set web.broadbandstatusajax.normally_hidden='1'
  uci add_list web.broadbandstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.devicesstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling devices-status.lua
  uci add_list web.ruleset_main.rules='devicesstatusajax'
  uci set web.devicesstatusajax='rule'
  uci set web.devicesstatusajax.target='/ajax/devices-status.lua'
  uci set web.devicesstatusajax.normally_hidden='1'
  uci add_list web.devicesstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway-status.lua
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci set web.gatewaystatusajax.normally_hidden='1'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.internetstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling internet-status.lua
  uci add_list web.ruleset_main.rules='internetstatusajax'
  uci set web.internetstatusajax='rule'
  uci set web.internetstatusajax.target='/ajax/internet-status.lua'
  uci set web.internetstatusajax.normally_hidden='1'
  uci add_list web.internetstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.telephonystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling telephony-status.lua
  uci add_list web.ruleset_main.rules='telephonystatusajax'
  uci set web.telephonystatusajax='rule'
  uci set web.telephonystatusajax.target='/ajax/telephony-status.lua'
  uci set web.telephonystatusajax.normally_hidden='1'
  uci add_list web.telephonystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.ssidstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling ssid-status.lua
  uci add_list web.ruleset_main.rules='ssidstatusajax'
  uci set web.ssidstatusajax='rule'
  uci set web.ssidstatusajax.target='/ajax/ssid-status.lua'
  uci set web.ssidstatusajax.normally_hidden='1'
  uci add_list web.ssidstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method may cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -e '/Global Information/d' \
  -i /www/docroot/modals/gateway-modal.lp

if [ "$UPDATE_BTN" = y ]; then
  echo 080@$(date +%H:%M:%S): Add update available button
  sed \
    -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
    -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
    -e "/isBridgedMode/i\          html[#html + 1] = '<a href=\"https://github.com/seud0nym/tch-gui-unhide/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"btn\">'" \
    -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\"></i>&nbsp;<small>'" \
    -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
    -e "/isBridgedMode/i\          html[#html + 1] = '</small></a>'" \
    -e '/isBridgedMode/i\        end' \
    -i /www/docroot/gateway.lp
else
  echo 080@$(date +%H:%M:%S): Update available button will NOT be shown in GUI
fi

echo 080@$(date +%H:%M:%S): Add auto-refresh management
sed \
  -e '/<title>/a \<script>\\' \
  -e '/<title>/a \window.intervalIDs=new Array();\\' \
  -e '/<title>/a \function clearRegisteredIntervals(){\\' \
  -e '/<title>/a \  for(let i=0;i<window.intervalIDs.length;i++){\\' \
  -e '/<title>/a \    clearInterval(window.intervalIDs[i]);\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \}\\' \
  -e '/<title>/a \var modalLoaded=false;\\' \
  -e '/<title>/a \$(document).bind("DOMSubtreeModified",function(){\\' \
  -e '/<title>/a \  if(!modalLoaded){\\' \
  -e '/<title>/a \    if($(".modal").length>0){\\' \
  -e '/<title>/a \      modalLoaded=true;\\' \
  -e '/<title>/a \      clearRegisteredIntervals();\\' \
  -e '/<title>/a \    }\\' \
  -e '/<title>/a \  }\\' \
  -e '/<title>/a \});\\' \
  -e '/<title>/a \</script>\\' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

echo 085@$(date +%H:%M:%S): Tidy up Mobile Configuration screen and add Device Capabilities
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/local function get_session_info_section/i \local function get_device_capabilities_section(page, html)' \
  -e '/local function get_session_info_section/i \	local section = {}' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.arfcn_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"ARFCN Selection Support" .. ":", page.device.capabilities.arfcn_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.band_selection_support ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Band Selection Support" .. ":", page.device.capabilities.band_selection_support))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.manual_plmn_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Manual PLMN Selection" .. ":", page.device.capabilities.manual_plmn_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.strongest_cell_selection ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Strongest Cell Selection" .. ":", page.device.capabilities.strongest_cell_selection))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_modes ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported Modes" .. ":", page.device.capabilities.supported_modes))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_cdma ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported CDMA Bands" .. ":", page.device.capabilities.supported_bands_cdma))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_gsm ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported GSM Bands" .. ":", page.device.capabilities.supported_bands_gsm))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.supported_bands_lte ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Supported LTE Bands" .. ":", page.device.capabilities.supported_bands_lte))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.max_data_sessions ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"Max Data Sessions" .. ":", page.device.capabilities.max_data_sessions))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_reading ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Reading" .. ":", page.device.capabilities.sms_reading))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if page.device.capabilities.sms_sending ~= "" then' \
  -e '/local function get_session_info_section/i \		tinsert(section, ui_helper.createLabel(T"SMS Sending" .. ":", page.device.capabilities.sms_sending))' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \	if utils.Len(section) > 0 then' \
  -e '/local function get_session_info_section/i \		tinsert(html, "<fieldset><legend>" .. T"Device Capabilities" .. "</legend>")' \
  -e '/local function get_session_info_section/i \		tinsert(html, section)' \
  -e '/local function get_session_info_section/i \		tinsert(html, "</fieldset>")' \
  -e '/local function get_session_info_section/i \	end' \
  -e '/local function get_session_info_section/i \end' \
  -e '/local function get_session_info_section/i \\' \
  -e '/^\s*get_device_info_section/a get_device_capabilities_section(page, html)' \
  -i /www/docroot/modals/lte-modal.lp

echo 085@$(date +%H:%M:%S): Add Network Operators to Mobile tabs
sed \
  -e '/{"lte-doctor.lp", T"Diagnostics"},/a \	{"lte-operators.lp", T"Network Operators"},' \
  -i /www/snippets/tabs-mobiled.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change Gateway to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua
sed -e '/local telstra_helper/,/local symbolv1/d' -e 's/symbolv1/"LAN"/' -i /www/cards/005_LAN.lp

echo 095@$(date +%H:%M:%S): Add forceprefix to transformer mapping for network interface
sed \
  -e 's/"reqprefix", "noslaaconly"/"reqprefix", "forceprefix", "noslaaconly"/' \
  -i /usr/share/transformer/mappings/uci/network.map
SRV_transformer=$(( $SRV_transformer + 1 ))

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix display bug on Mobile card and hide if no devices found
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix: "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask is/<br>Subnet Mask:/' \
  -e "s/IP is/IP:/" \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong style=\"letter-spacing:-1px\">%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 100@$(date +%H:%M:%S): Show individual helper status on NAT Helpers card
sed \
  -e '/local enabled/,/local disabled/d' \
  -e '/ipairs/i \  local htmlLeft = {}' \
  -e '/ipairs/i \  local htmlRight = {}' \
  -e '/ipairs/i \  local attributes = {' \
  -e '/ipairs/i \    span = { style = "display:inline-block;font-size:smaller;letter-spacing:-1px;vertical-align:unset;" },' \
  -e '/ipairs/i \  }' \
  -e '/if v.enable/,/end/d' \
  -e '/loopback/a \          local state = v.enable' \
  -e '/loopback/a \          local text' \
  -e '/loopback/a \          if state ~= "0" then' \
  -e '/loopback/a \              text =" enabled"' \
  -e '/loopback/a \              state = "1"' \
  -e '/loopback/a \          else' \
  -e '/loopback/a \              text = " disabled"' \
  -e '/loopback/a \          end' \
  -e '/loopback/a \          if #htmlRight >= #htmlLeft then' \
  -e '/loopback/a \              htmlLeft[#htmlLeft+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/loopback/a \          else' \
  -e '/loopback/a \              htmlRight[#htmlRight+1] = ui_helper.createSimpleLight(state, string.upper(v.helper), attributes) .. text' \
  -e '/loopback/a \          end' \
  -e '/divtable/,/div>/d' \
  -e '/card_bg/a \            <div style="display:flex;flex-direction:row;">\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlLeft);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \              <div style="width:50%">\\' \
  -e "/card_bg/a \                ');" \
  -e '/card_bg/a \                ngx.print(htmlRight);' \
  -e "/card_bg/a \                ngx.print('\\\\" \
  -e '/card_bg/a \              </div>\\' \
  -e '/card_bg/a \            </div>\\' \
  -i /www/cards/092_natalghelper.lp

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv4 = "rpc.network.firewall.internetpingipv4",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    wan6_ip = "rpc.network.interface.@wan6.ip6addr",' \
  -e '/"rpc.network.firewall.mode"/i \    wwan_ip = "rpc.network.interface.@wwan.ip6addr",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      local ping_ipv4_status' \
  -e '/subinfos/i \      if content.ping_ipv4 == "1" then' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping enabled"' \
  -e '/subinfos/i \      else' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping disabled"' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \      ngx.print(ui_helper.createSimpleLight(content.ping_ipv4, ping_ipv4_status))' \
  -e '/subinfos/i \      if content["wan6_ip"] ~= "" or content["wwan_ip"] ~= "" then' \
  -e '/subinfos/i \        local ping_ipv6_status' \
  -e '/subinfos/i \        if content.ping_ipv6 == "1" then' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping enabled"' \
  -e '/subinfos/i \        else' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping disabled"' \
  -e '/subinfos/i \        end' \
  -e '/subinfos/i \        ngx.print(ui_helper.createSimpleLight(content.ping_ipv6, ping_ipv6_status))' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \    end' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dial-plan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

if [ $SIP_PWDS = y ]; then
  echo 125@$(date +%H:%M:%S): Always display decrypted SIP passwords
  sed \
  -e '/local mask_password/d' \
  -e '/if password == mask_password then/,/end/d' \
  -e '/v\[scns\["password"\]\] = mask_password/d' \
  -e '/ipairs(v)/a if sip_columns[j].name == "password" then' \
  -e '/ipairs(v)/a   w = proxy.get("rpc.gui.pwd.@" .. v[scns["profile"]] .. ".password")[1].value' \
  -e '/ipairs(v)/a   sip_columns[j].type = "text"' \
  -e '/ipairs(v)/a end' \
  -i /www/docroot/modals/mmpbx-profile-modal.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  echo 125@$(date +%H:%M:%S): Remove non-existing FXS2 device CODEC config
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf109;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    -e '/uci.versioncusto.override.fwversion_override/a \  unhide_version = "rpc.gui.UnhideVersion",' \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         </tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:right;font-weight: 900;color:#808080;\">tch-gui-unhide</td>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:left;color:#808080;\">');  ngx.print( cui[\"unhide_version\"] ); ngx.print('</td>\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

grep -q swshaper /usr/share/transformer/mappings/uci/qos.map
if [ $? -eq 1 ]; then
  echo 180@$(date +%H:%M:%S): Configure transformer for QoS shaping
  sed \
    -e 's/"force_pcp" }/"force_pcp", "swshaper" }/' \
    -e '$a \\' \
    -e '$a \--uci.qos.swshaper' \
    -e '$a \local qos_swshaper = {' \
    -e '$a \  config = config_qos,' \
    -e '$a \  type = "swshaper",' \
    -e '$a \  options = { "enable", "max_bit_rate" }' \
    -e '$a \}' \
    -e '$a \mapper("uci_1to1").registerNamedMultiMap(qos_swshaper)' \
    -i /usr/share/transformer/mappings/uci/qos.map
fi

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2021.01.31 for FW Version 18.1.c.0549\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
if [ "$UPDATE_BTN" = n ]; then
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo "++ WARNING! The Update Available notification is DISABLED! +"
  echo "++          You must check for updates manually.           +"
  echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
  echo
fi
