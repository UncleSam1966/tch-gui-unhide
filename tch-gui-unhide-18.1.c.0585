#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0585 - Release 2021.01.02
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :Wt:s:Tryui:c:h:l:f:d: option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   r) RESTORE=y;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t|m     : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                    (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) Firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo H4sIAAAAAAAAA+0ba3PbuDGf9StY5FyRZ4qWZEm+sS3fKImv8UySc8+auU5j10ORkISGIlmSsuzLub+9u3gJpOVXzvG1PWFsidxdLBa7C2CxgBaLxdaLr1yaUHZ2dvg3lOo3f25t7/R63Z3WTqfzotlqdrabL6zu1xYMyzwv/MyyXmRJUtxFdx/+f7QswP6Bn4X5V/SCB9p/p9NsdXq9Nti/1W211/Z/jrK0f7PZO39DL1hAcy9Kn7INNHCv17vN/tu9Trdi/06z3XthNZ9SiNvKH9z+jUaa0SLz4zzyCxruWmFixUlhBVM/nlCrmLLcGrOI1mqNhnUY+6OIWlES+BH7xS9YEtcmtCjoZeHhR5jMfBbb9QUdzVkjSDJad2o1Tm6lWXJ5ZfWtjP5rzjJqk9Av/FkS0og4kmTOzqc0SmlmkgEvTyM0aZDEBY2LW+jLWF1pnGQzvwDivMhYPPHEu0QWvGt98a1gSTyfjTh/9cj1IIeJhV2QpKEAnSMIyD/XgPxnECiieQ7vJL/KvWmSF7k3CAp2QRXuA+f64/gwBploTlyseFhMaRbTYlVFhbtZ8bpW7rcHpjm89IPitQDbpozaLvFgUqj+9K2mhPoTqIAAbjbkZBNB5Z3QTEwSfzsfHr47Gf40OH8/jwo2OPawoSyJImhbggbIpyqqU2Nj1YIfh1q3toB9bJ15F340p451YDXBBWlcA1NZDMRpubcSuy3w3bI1DLvZwtg22QBVPa5XvA8esTwPRIAP4g3yPAkYjhdR+0YHjS6A4E3eYSUT709Z6+bbpiKs0TjU/7JfOXgMDDqsMrn0guLSkxBsQD7uTv18EACD3CZbMMD8KN8SLBv8DSZ34kgpgEkKQ6Gw66e109p+yC6sIPLzvE/y1I+3yUEFOPOjCFcLRNSdPctacliOXi/IKOjmNdC9pX5Isw/JEXimPZS6RgOQWwWzgG1JLlMA6eCyeeXBMCRMS5tu/pEYw4mcCXOoej+zH9idFdUg1RVBy6attHtKEfhXwySpqUbE92YJh4YVovD+n0cs/tSvy65yUANBhM8zjSKZTCIqERKW0VlSKNhNbQoiFvaJiSF1w/C1+n6qzTsfsXic5OSg7tbkeLE+2PV9mC+TeGJttL7JDzba34QWVROU4Lu/JSgOcF6OaQADAzjcXy9fWZGr0XFrS6VoUH1/Kz3grL9A6J9ZA0zwSInNSreJi6atyithQuCaUx5q+1vg0wc3v9Gn0SlKxAD8ius/xn9hEmB089V2AA+M/7c7zWZnBwK/Zqvd7G2v4//nKKb95Szy5G08fv+3vd3pre3/HGWF/dVa4ad6Jfltbdyz/2u1mr2K/Xeaze56//cc5dn2f1Fa3aVhuPeYnd8dsaaIM0sR5hhcmbpWkc3hs+vcGVaKWGuUhFc6skwhsi5Sv5hCEI1jJI9ZmtIi30KZU4/FQTQPQUjYLuaNUKdNKlgIdRZJ9gmGksCtjALuC6R/AM+Dzq3oQh5kLC2AxTc2eblsy/KJ4wURCz7Z43kcoJksG7Yin09rF+DrtE9//XXB4jBZePQCwum90xr18iJJj7Mk9SfcrrbDoeAcSPGGjn3YDXHgNX5AJKTaRnX93l68Ll9a7pj/n2Tux3L3/N/a6XSr+b9eu9tcz//PUf6b8n9flNSbwf7cn9Bb148yXldLk/y2hgzUl6QmRXLRxanatZJcpxs15I7kosxTRkmCYNjKTj3+slRQwBOYPEnpiddSctPFSsHUBRstOOtSqtNVr5JIvnHa+9bpuxZEM2l4Mhxg/vNamQeTaH5qZhKPPzwi6+biAs7zZ4qTzgeeu6JFi8UWS32W5bakcZaZQE4R+zNM7d6SAuQkHwn2jZzxBN8gYn4pi6cTlpzTv/sWIUIO0cirk5OjN+2/vP3lMY2oSn8vNaR8yD/2eUrpZj1QsEeWdEfxOCnlaWVdg9U7lqPTVLLD8HpBs+InmoPShsmPo3/SQNd2FWvFJqaLaor7WlkBSM8vDCvIJg0rAOT94PXSHbnH2byeB4hBGGYwTFVbCzZmrzAx3BesPa4qq983FI1oYjWstteBV4LpOXzt4ktNOeJH0e6Z0iO3HuhQNVBKsRppVh01gT6PQGnZ2A/o8CqltkidozfiCLJFpvBdWxORM9ci/1hETZVihcl1nsUW0WcBWuQahQD1fk6tOzh1H8qHFtNvFR9jXGCSSipaq0wwWBqFnJ1p79f0pkAlDBdGYdRQ0McZDQtHhWjhOMkwIStUf38PZiD1t1VVvE9eD0ipyRWVq8ZVbhwk0XwW5/yw5nOjAWOwNuXbCIAMyUnhF3N+HCPmDgKuVFB4T/3MnyHgRAIK8At8j9hkWsA7xOxhEke41vHNR80vCuT5GUZIOi/4k5FkbxHr2rp2a/CHUrRLUryFpQgFMOT4IWPQmejqgwBrcSpwJRUuy+Q+GbbLMmyXZDg6vugY7bOUv+p2JbrS3m9TQqcqQK8sQK8iQO+pBeiWBIDBYLQ/8wNfDg1DCmPAPJUs0ArDWciPzjkW6OriJADY91EOUtcS98oq0+5v6E3BsHpJgeYM99Sa3CnJ9VqlzQ25JAw6OmRll9bUEvGkgn1XEuwd9XNTWeE0SDmsKtObCuLJZLpW8xOsOX42yeUZH0RiuKqfzzN2jmBbR1s5TKAwh+HkbMs6HsLkHCnRwMZE7s7jwsf0gSOmzSVVeQIxzqaQBBdEfsSoyKv0yzaRFMMguYTavmuNHDU9i3Xf98y6fOmGmX1fYkersOYyYQrBZx9zXcPpaZh8UJH1UgzHIOA68z2szLmodQVxuBZ62spHx0JPGoN1DOWMGD8l/4z4XbF+EXsj3HQ2vBVfxLnGpl+KWn2rU1rObh5VN7dD8x8CSqwJK5V8aKuHbfXQOXOc0oLY1MvfvcYxVQf6AoOUIKO7jNCrGqE3TE54rLfSCHSWFldH4aVx40BpUkSV8IYBpQwXJ0KzIC0od/Gts4uRAASXIAcS9pfxuMGYa3mzxYXmupEAjAbterPu7GY0tTsNBDueB5+cFHhqJjeuHyjMZsv9Ttw34JwVGFlXABixY5aDaDuI7oLOIeLHcUdkGD0yImhkonqoKJed1HVH2tTiXT5AmyPdnDSuQD3YEbT5xDDpSW9YgkcCfKtLlNaU+2YHGZIeYQUxYZWjbu03o1tJRmKPJvF9RWmOr98w+RgDSjaxL1tYbh/UdCq7qKZnI/LUh8bV9wFXRmkm1zg5Nel3Y0LXsOqsbhITcW2IKOc2cEtkpQ0hD68cRaTC00AanEvB9Tm4GgvNNIAKupMUK4ugO/Djw5AVeqmEdwih0Dt46h7f38BOp6BLEM97cM7yRgNGWyOYp1OxWyZZGsjbUvjpARbtwBWhbGMstUqqMYuK8nKh93krNhRyKIJv2KuViTskUU/sEUSN6paQd4nrTtCWh8zZKievSMUXP0McDe1pqFjWVAVjWQOKG2mMYDqPP3HbrCB/8Opmv1R8YIGTXS7Lu0oa4WTlHqymM7brauEE91m1w8Pqrn7DtMcsx/XISPB5UzBWRIfoV3+d0+zKrmwP3arruhWvca2YRW7J8Z0beYScgqeE+TDBqNEu4EPNaPh8HifmNSSBRk0qJN9yy+cDWDIrjqTCBRg8G812uKs/iMuzh4rP1ne9TrPpVIDbPYBttDsVcA+AvWYZiBDH1Dzv+hD28jlD17dkRpNepnxUeHJuwAXuk2vxHBFf4KzyXURc6UqXrz6dfeTrtJlMuwCQc4Ose5Ose8a1dwEhvvRx1N8FbEVMl+foftUyygaIdRqWneQe9t2GZwO3A1HWRpmWXxDDjdeYxaygctJEVJ809OR7U4idm0Lc3qZiyisptobj8y2eCAW6/K4abCAu/Aw3EXMKPj+jxTQRc9XxjydDoRhFpNKDfEeDCDHgV6EhDvPTNGIBPwLYutxoLBaLjQaaYaMxzyIaB0kIm7xyxkmtG+a2hg9Fsa/xfL0KKlKQczh49e6wcfjmaKgms2UfwfuWGvgNp8OK5UMPia15GuK8rs5u7zwPtqwKS9SS4onPjWmSsV9Au3irT1ioT1AvROrhtut93+OK1q+XZJZRR7kff9bLVIV6GWSU6NUh+BJU1eh7caiS2+XTFS9NUo1ynOp595jRKMwpHhrvR3QCZjuonn0vbVSxxf6WrHH/eTmfzG+fx8urgp7VjVlcrxUrHGLL7MQW2u/gSU/y8YB+Gma4CodJMJ/hIQje444oPuavrob+BENT8LQpwZN4EMHGSqzf3GP7WNWD8Tcppntsc9ORR/6Ynegj7iM7A1+NaTYEyJ5AcjciRL4VrMBbpup16TrkYb4D9fIFw5kDG0UBAli6LZVQ3RWtPcBryd79bYtYtFpPduFkmiysR1UcgZU+7SmJdfJVylxKeFRoeWgj6fjzTXzPwPeqeEwxSrSRSawy0TGo4lQKGSvUy1ybpC6n0zR1KO527Co3UPDrUx6DIPhPfdwjfT6VQQlqV0GUroHKGl1ZZLMQjgW1S/72dvj+Xf+0vu9b04yO++QlUZ52Wt/kT5un9QfdahbTHtTCb6hkzG4A1C/I7gB5gzzwvL/lw9veUioYwoMC9rKjeQGDic/HeC899i/4sLrmf///11xKR7lfqY3H3/9st9f3f5+nlOxfCV6eqo377n92u1X7d1s77fX9n+coD7//89CLPiKF6epbL+qHdSvhD7kcpG4F+PE5gkqXHcg8YJ68+YhblDGbeIpQ/M4MO6Orwh5NPes7F3w/NspYOFF5MNWRgs7k8TCprEHE1ZGqhVcdCB4qkRUXpznhByGf9d5PyTVmn8y4dh6pzQAsPRb8N3AUqhBcijItZpFIp6n7SBmTOyncm8Gbud3jx0e4g1O3LWhsmzjjd3WCD35iovp7/iM3k3S5fz93zSseXDfmNRue+hLpbOMnTQhQ1wo5b9zE84MkIVk+H9nQuNtyDVE5PWyoYfsnmHBJly34ZtoRNfPxJX6KzH7pvhOoN2JKvRugVDP8KIUaSkgk2sgxWIANBzuou7JnLpccP9vyzsLShti4U7vxY7qteWT8pOf3Hufrsi7rsi7rsi7rsi7rsi7rsi7r8scu/wFE8keMAFAAAA== | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified firewall GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo H4sIAAAAAAAAA+0aa2/juDGf/SsIZVNLOFl+28Wt425ub+8B7LbbS9ArkAYGLdE2u7Kkkygne4v0t3f40NOPOLuX9IrjILElzoPkzHA4Q/r29rZ98sTQARiPx+IboP4tnrv9cW886gy7g/5Jp9sZdAcnaPjUA+OQJgzHCJ3EYcgO0T2E/z+FW7C/i2MveUIvONL+40GnOxiNuP27w25f2/85oLB/pzOY3dKY+CRJZvMwTBiJE8ePvrwPbuDRaLTP/sPRsFuz/6jXHZ+gzpd3/TD8we3fakUxYTEOEh8z4n2NvBAFIUPuCgdLgtiKJmhBfdJotFroTYDnPkF+6GKf/ooZDYPGkjBG7pjDP7xwjWlgNm/JPKWtX8KkaTUaghol4FVAjs5RsLxzXHbnqBaFd8OAkYDNVsSPSAxkMfklBW80DRDmVLGGpZhSuoc+R+SkizBeY2ajNGAwRHiAN3cF7xFQ2WiZpHMQkrCYBksnI1avOY96V6wZVkpQb1yQ6jKKw7uP5ZF5mOF16BHfyNWiJgZUnxp4yadIhI49aDFSlzrr1GcUR45AOgpp2A3OGIe+T+J9HAVFiQ2cnZHhMqPN1js8LGjLIxvqEudVjD0azobfO4IauHA0ogvskt1s0NcroHAEiaQWjIepM9m3fnfWA0/wdpMLoc4rQeVwMmC5bzSqDuGAE765wy57LZtNhQY100WmY6eqXxx4ezD/gYEYFfwOZT+AljJg+ZDMwcHw2H+P2ao8pF1WBM6uITlzHmhri5eknamnlYXoFtdkmrQEHuK10SB+QgpedJC5xBV4mVcKfVwKsTYqxihbFM0cux9WOPVlI1/X1M9QSjg0dg5YoDzTUo98vO+4D7cu3qML3o4y/5UzO0zr0SQjhgkdr2u1ZpXCvpVL4ZLE/Dtx/jm7evP28uqni5no7uK9I3pzDMXHlzbw1dwSXjckZj+RBJiuwr/N/01cZvI+bBkduOOKd8tqQNBBH8hHW2of0QDRCNM4MblsC+Iyn4wMA+8uXl94XgyGLDnrTlSn83X1T822ZKL88SvUFTrj/3WjVxT9OkfWLHMs1z4bXRtZ7DBuyitMtMvwciOMJsKBUSXJAwnQSK2Ime6RzqXkyqi78pXxjWpCBnKc3X1Au4HM4fdWeTqghXKHKtzW+ts5HmT0jC8eiYjcKFwslEG+VF5hXuUXDb57R7DTMbP5r8bEoxvk+jhJzo0kwkHfmNYa19j3eXrJEU3rJSrYi83bcWMCSngNZD8Q7JHYvDJ+pq3vKPpGuaZhF+HTQhUxtVFk+ynvczZfGmJhtubLFk9Pzo0/nd4tOuTPL+vjhEfGZ6qGWZploz7MS7qOfPKWLlf5NrMjtGyHTcs+SlQlRNrlSGw1LO7MNZMKhyqGe0QXZbeza+IgDH1O1BTGeUuDD+BhMncym0qzAtXyAadswcLl0icKodpisg4ZtJ0lqoF6YBMRguUGZTTtwgHK1mlOotzX0jkNFmFiTJt2Q43ir6YxgcQsDJborPsimZ71XnhZwJu0JWYKQ04DyCv2kyZbtBnCsvO5l9pgWO1o2mxIbVadtQ2+Nt3/zb1vi4k3PlH+z+s/L3R5dfNkJwDHnv+M+sPhsDeA+q/XGXd1/f8cULa/ShJ/8z4ef/7T7w/G2v7PATvsv79I+Mw+Hjj/GfT6/ar9e53BuK/Pf54DnvD8R2xf4D4rzE9GiqMg2NrkMdDjT3EicMg9xCVUTo4Zi+k8ZYSnvp8QT1HFg8gYeMrNWwYGukf3WSYDfg85194BVfF5R35UJ4WKGpCRkxDG6zvTaPOVlgQ0ighL2sUJ0BpH73GM18nv/wzoaU91JMv+Lqo8qp/7khr/AU7p7dRiyTecDacCZqgtfIKDPVo8yFFSxUG6yowOUt7XzgNtxCnXybLGCIvS88nfUxJ/NHPHsfPJW7X6TNZch4qu/QXXArYCYiMWp/AZUN86VHbJLH8eeh9RGvGZZfUerAyHBq6ferAuoMQqNhWxQhCqyeR5eyaUP7dWYUx/BaXwWmFN2CqEyoBrBIp/l8cf1ffBo63plh7qangnl3ViVtc3BJUoR1lbGuBp+Yqtfe5z9+Lp+pR/ftUV9fxkQYnvQQCYTnwCHulNRcl9VRyJyKJLtBqTdka0JWmrqLulzF2B0YojFTCYse3Ihl0U+DuwUP4VEdI6vltx9MV7rKyzcmdVxAP9wNRzTW1Pfr8af1YWR9mRxucr8vLyx2/3H4jY6sBJBZ06TVZKP0qXoi7/MYhS9gP1PBKYRVVu7zqwekhthWNyCqtedPK1VK0yDy2H7yDXgahgba/PxI1pxEDCC9M4LU3fcmTCYC7SQKxL04J9Fogon+J1gNfkPJvMDVBDBDR5bsEfUgKjubde8uHl8mGE/+vU6A8Blazkifp4fP3X64307z+eBSr2r2/Qv1EfD9R/UO3V6r/ucNDR9//PAkfXf6V9YJL6WY4W4A2C/xb3HJ5nyaRof03ohjEpKkF5wZXdnUOyKcrL893tj7hVp4yoeuqTcSAvtLNcrEjF7mu5uMqY8iQ+v7R7qMyyskP0ioTswqrceN292dcud8fKgbuY2vWp+JJ5wK4p1q+E+UxVbp/P9EhRu9WWFwrHipF1ZU2KLDrkXSsXVbqCLvLq7JQgpurHIxscO/DGFZy94niZCCWqX2H4kFCVcRaaoo5UoJTDP3my+BeR9JVJ5SD4ZezM3pRuYcX8xDWsOluANGcjSlWDj0SIPUdmftUuBG/AiJa64c7p5ZO6cK9ndZVfoMBS82m21M5ggU0wWsVkcW6c1m5Osl450VkyaeMppMF02rTVOG0xFP7Zu6nfSsiEsV45Ttqpr/MwDRo0aNCgQYMGDRo0aNCgQYMGDRo0aNCgQYMGDRo0aNCgQYMGDRo0aPjdwn8B7mkz3ABQAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified wireless GUI code
echo H4sIAAAAAAAAA+0Za2/bNrCf9SsIdlslVFYkx3awtO4e3ZIWa7dgCdYPaWDQEm1zkyVNpOKkQfbbd0dRDztOmwxJtqG+PkyTd8d78Xg8LxaLrUf3DD7Azs6O/gRY/dTjYHtn0PP73YEfPPIDvxf4j0j/vgVDKKRiOSGP8jRVH8P71Pr/FBbg/5DlkbzHKLih/3d6ftAbDHrg/6Af9Db+fwho/O/7vdFC5DzmUnpxdod7oIMHg8F1/u91t1f93+vuwPn371CGa+Ez93+nk+Vc5SyRMVM82iVRSpJUkXDGkiknaiYkmYiYW1anQ35M2DjmJE5DFosPTIk0saZcKX6mPPwvSudMJPaTBR8XohOmOX/iWJZGJ1menp2TIcn5nwVEmU0jptg8jXhMHYNSiNGMxxnP22jAy6sXatQwTRRP1DX4y6s1kZQiWkPRmq5RRcZELl2STM9cIlUukimQrJk1+JM0nzMFKOWsV37XRjucpUUckTEnIiHVAeuA5iyGY2aJCbLzTlnuoURcqtGcq1kakeGQ0INfDo8oeIEnZqOcRSIdQcwqDrshJVB54IRRlgIpy6fSdjwJ3xdiIkYtdNypTa2Zaq8guk2LUHj1+UfiTsRPRci9b0uq7r6nCanbZrNbJAp8rmzHuQ2z/g2ZsSyLz23H4kmk/1WeROzuPligRJvinnkWNntqri3RU/BuuQl1joMTsHdc8Da3/o259T/ODbU9rAxeCwq+DChJ82azckZ7oSYhetLiseTLkz5dUh8jNhZSB1wTvSj44eHrH97Ail0fPAkKwEE10RKqM8/MmHUdiQdMzRBDxBXVQqhw9jObczOttSkJd2dMfheG8MWmW5pcbl0JbOqUurXZfwTbWtqQrgvg0gSoRJZjkDx5bz2PxCkJYyblkMqMJdv0xcrknMUx3m+48MR5RkhDX2cVL8w58H8JaK84i3huH9F3orMnIDpr8d2WSdzGyQ4BptfKZBIRQQlG4yklmPQ642kHs+WQfvX4bOJ/zZ8Z4SzIGkS4p5goylRj1552IDGjCwR5PiT9dkZgClLOuFBcguEurFhMZ0qPBKQQcuqJyLqEP9frfSjmWczfIJ19Wh5LDFSIORfIUQK3tYnTHMZltbdA7xdrPmWYi0zB6AubejNtX1AwK9TjtU52vDSxaXn9UHdSJCFeM7ZzAeSPF0woSK+AlPN5espfopltOhMREF46z95bkEf1kdgDwtc/wETFgRQZGJ+/M5GHzgamIJWHiRMCmf3OzraQtIOCFFADFQwscAw+94BkDn58efjrnkr/4CDOiUtq2dCpyArdZ1cCoBP1ArkopdKOGaIW9CkioLR6blmXac55QtLJhDYILIrKVWR4jMQnOn/4lHxDKOKSXVJSaqpL+OsS+rtM4ft7y5swEdu1uDmXWZpIjiKLSf3VK9VGxj1/27kIY87y1xC/OWQ3u7Gp8wzZm22+sNEVLDq3W55qcIfg4prFVQe4Xaz/gCFye75VRwqchX+7LvpcAOv/KA2xur23F+Dt3/9dfxBs3n8PAW3/6wx4D3vc/v2/7W/e/w8DV/y/cgPexR6feP/7/X53xf8D3+9t3v8PAWUNiZXC0tv8j7J2uP3D+VZPEyxnsFS9vG3lq+sgLG1PdInbrllXn4rjYjLRYsMuwAX18ngSphEnupxyyQXsGmGVPiQTeJxAdV/TmMGlectgwSvZuV1OO+U7rZqkF5fUqetifiaUjYNXR0cHo19+cqx/29PrAc8/HPN7/Q3gH/R/u/7m/n8QqPzfPqt3lPZr+ET+3w7A56v93yDY5P+HgBs3Z6ve55Vm6I36oOXq2zINN2/ytyv3wtU7BNArzskoTAudpv3WXNUK9S19iYxc0r5F6obewc8rLT3cxIP3vcoL7ug7xpiibFWdejgwc7q9J5f6gxrN8wjVvQtKXFLPIGfa+t5uFuIVZLi1Wji6XzA0C8fdqp+IHTdY2ZXF2A7cbYf8BW/+7191TNfQLOtOwB4Y853YE2WLcXW2099fXjiCm0vljHwn8msXNJHeqG36ZvyUBI02x9tGaOQSEJZEbeeAdxpOlcOC8qbGK9Q0srJRJGQWs/NRUrYB15h7Belq+7XsJRkGRri1KBIucXFWVSKGJxqickqaq/F50zUvWQ6Nx0fdyjptbti6JHbX6+07pot7dbWv10B14LyqMjrYsG1LBISrmGCLJTVwM2C4xmJSjVtWWuo7r+xBXx8c/UbXsl5F1R9XEEul2qgmdvuO3ncff94we5fmxV3PEYy56tklJnG64Ln5FaBODseP6+HT4KTpeJYpx6aYVr6UcBAbPMe1jPxt9jBpQnIlll0tDmpbhsJlXVvWNSao25yIF1WY342MR+3TSGztGEMIyexLSZCautVIUsetZWlGjg4ChzZa1oew1o9+QKBGQUvhr3werjVVeKvdydyxAzeFKvKEMI1GnpNxOQB6qO7NYk1csjWzb/+jlfAGNrCBDXxe8DcApO5zACgAAA== | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    -e 's#/booster.lp#/modals/wireless-boosters-boosters-modal.lp#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status updates
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci set web.gatewaystatusajax.normally_hidden='1'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.broadbandstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling upload/download status updates
  uci add_list web.ruleset_main.rules='broadbandstatusajax'
  uci set web.broadbandstatusajax='rule'
  uci set web.broadbandstatusajax.target='/ajax/broadband-status.lua'
  uci set web.broadbandstatusajax.normally_hidden='1'
  uci add_list web.broadbandstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.internetstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling upload/download status updates
  uci add_list web.ruleset_main.rules='internetstatusajax'
  uci set web.internetstatusajax='rule'
  uci set web.internetstatusajax.target='/ajax/internet-status.lua'
  uci set web.internetstatusajax.normally_hidden='1'
  uci add_list web.internetstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.ssidstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling SSID status updates
  uci add_list web.ruleset_main.rules='ssidstatusajax'
  uci set web.ssidstatusajax='rule'
  uci set web.ssidstatusajax.target='/ajax/ssid-status.lua'
  uci set web.ssidstatusajax.normally_hidden='1'
  uci add_list web.ssidstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\&nbsp;</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method may cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -i /www/docroot/modals/gateway-modal.lp

echo 080@$(date +%H:%M:%S): Add update available button
sed \
  -e '/uci.version.version.@version\[0\].timestamp/a\    updatable = "rpc.gui.UpdateAvailable",' \
  -e '/isBridgedMode/i\        if cui.updatable == "1" then' \
  -e "/isBridgedMode/i\          html[#html + 1] = '<a href=\"https://github.com/seud0nym/tch-gui-unhide/releases/latest\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"btn\">'" \
  -e "/isBridgedMode/i\          html[#html + 1] = '<i class=\"icon-info-sign orange\">&nbsp;</i><small>'" \
  -e "/isBridgedMode/i\          html[#html + 1] = T\"Update Available\"" \
  -e "/isBridgedMode/i\          html[#html + 1] = '</small></a>'" \
  -e '/isBridgedMode/i\        end' \
  -i /www/docroot/gateway.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change Gateway to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/003_internet.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua
sed -e '/local telstra_helper/,/local symbolv1/d' -e 's/symbolv1/"LAN"/' -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix display bug on Mobile card and hide if no devices found
sed \
  -e '/<script>/a var divs = $("#mobiletab .content").children("div");if(divs.length>0){var p=$("#mobiletab .content .subinfos");divs.appendTo(p);}\\' \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix is "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask/<br>Subnet Mask/' \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong style=\"letter-spacing:-1px\">%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv4 = "rpc.network.firewall.internetpingipv4",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    ipv6State = "uci.network.interface.@wan.ipv6",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      local ping_ipv4_status' \
  -e '/subinfos/i \      if content.ping_ipv4 == "1" then' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping enabled"' \
  -e '/subinfos/i \      else' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping disabled"' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \      ngx.print(ui_helper.createSimpleLight(content.ping_ipv4, ping_ipv4_status))' \
  -e '/subinfos/i \      if content["ipv6State"] == "1" then' \
  -e '/subinfos/i \        local ping_ipv6_status' \
  -e '/subinfos/i \        if content.ping_ipv6 == "1" then' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping enabled"' \
  -e '/subinfos/i \        else' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping disabled"' \
  -e '/subinfos/i \        end' \
  -e '/subinfos/i \        ngx.print(ui_helper.createSimpleLight(content.ping_ipv6, ping_ipv6_status))' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \    end' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dial-plan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    -e '/uci.versioncusto.override.fwversion_override/a \  unhide_version = "rpc.gui.UnhideVersion",' \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         </tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <tr>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:right;font-weight: 900;color:#808080;\">tch-gui-unhide</td>\\\\" \
    -e "/ngx.print( cui\[\"firmware_version\"\] )/a \         <td style=\"text-align:left;color:#808080;\">');  ngx.print( cui[\"unhide_version\"] ); ngx.print('</td>\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\\1 \[tch-gui-unhide 2021.01.02 for FW Version 18.1.c.0585\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
