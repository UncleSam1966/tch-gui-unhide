#!/bin/sh
echo 000@$(date +%H:%M:%S): Built for version 18.1.c.0585 - Release 2020.12.29
# Make sure that we are running on Telstra firmware
if [ "$(uci -q get env.var._provisioning_code)" != "Telstra" ]
then
  echo "ERROR! This script is intended for devices with Telstra firmware. Exiting"
  exit 1
fi

# Based on various pages https://hack-technicolor.readthedocs.io/en/stable/

TARGET_VERSION=""
for x in $(basename $0 | tr '-' "$IFS")
do 
  TARGET_VERSION=$x
done
echo "$TARGET_VERSION" | grep -q '\.'
if [ $? -eq 1 ]
then
  echo "ERROR: Unable to determine Target Version!"
  echo "       Did the script get renamed??"
  echo "       Aborting..."
  exit 1
fi
SCRIPT=$(basename $0 | sed "s/-$TARGET_VERSION//")

DFLT_USR=$(uci -q get web.uidefault.defaultuser)
FW_UPGRD=$(uci -q get web.uidefault.upgradefw)
VARIANT=$(uci -q get env.var.variant_friendly_name | sed -e 's/TLS//')
MAC=$(uci -q get env.var.ssid_mac_postfix_r0)
HOSTNAME=$(uci -q get system.@system[0].hostname)
case "$(grep 'title>.*</title' /www/docroot/gateway.lp | cut -d'>' -f2 | cut -d'<' -f1)" in
  $VARIANT) TITLE="$VARIANT";;
  $HOSTNAME) TITLE="$HOSTNAME";;
  $VARIANT-$MAC) TITLE="$VARIANT-$MAC";;
  *) TITLE="";;
esac

if [ -f /usr/tch-gui-unhide.theme ]; then
  mv /usr/tch-gui-unhide.theme /etc/tch-gui-unhide.theme
fi
if [ -f /etc/tch-gui-unhide.theme ]; then
  . /etc/tch-gui-unhide.theme
fi
if [ -z "$THEME" ]; then
  KEEPLP=n
  grep -q 'body{background-color:#353c42;' /www/docroot/css/gw.css
  if [ $? -eq 0 ]; then
    THEME=night
  else
    grep -q 'body{background-color:#fff;' /www/docroot/css/gw.css
    if [ $? -eq 0 ]; then
      THEME=light
    else
      THEME=telstra
      grep -q 'body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color' /www/docroot/css/gw-telstra.css
      if [ $? -eq 1 -a -f /www/snippets/tabs-home.lp ]; then
        grep -q 'T"Boost Your Wi-Fi"' /www/snippets/tabs-home.lp
        if [ $? -eq 1 ]; then
          KEEPLP=y
        else
          KEEPLP=n
        fi
      fi
    fi
  fi
  case "$(grep '.smallcard .header{background-color:#......;}' /www/docroot/css/gw.css  | cut -d# -f2 | cut -d\; -f1)" in
    "005c32") COLOR=green;;
    "662e91") COLOR=purple;;
    "f36523") COLOR=orange;;
    "008fd5") COLOR=blue;;
    "272c30") COLOR=monochrome;;
    *) if [ $THEME = light ]; then COLOR=monochrome; else COLOR=blue; fi;;
  esac
  ICONS="$(grep '.card_bg:after{visibility:' /www/docroot/css/gw.css | cut -d: -f3 | cut -d\; -f1)"
fi

FIX_DFLT_USR=n
FIX_FW_UPGRD=n
if [ "$(uci -q get dropbear.lan.enable)" = "1" -a "$(uci -q get dropbear.lan.PasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootPasswordAuth)" = "on" -a "$(uci -q get dropbear.lan.RootLogin)" = "1" ]; then
  FIX_SSH=n
else
  FIX_SSH=y
fi
if [ "$(uci -q get system.config.export_plaintext)" = "1" -a "$(uci -q get system.config.export_unsigned)" = "1" -a "$(uci -q get system.config.import_plaintext)" = "1" -a "$(uci -q get system.config.import_unsigned)" = "1" ]; then
  FIX_CFG_PORT=n
else
  FIX_CFG_PORT=y
fi
echo "$(uci -q get web.parentalblock.roles)" | grep -q "admin"
if [ $? -eq 0 ]
then
  FIX_PARENT_BLK=n
else
  FIX_PARENT_BLK=y
fi

# Keep count of changes so we know whether to restart services
SRV_dnsmasq=0
SRV_dropbear=0
SRV_nginx=0
SRV_system=0
SRV_transformer=0

apply_service_changes() {
  if [ $SRV_transformer -gt 0 ]; then
    # Need to stop watchdog whilst we restart transformer, because if it does not find /var/run/transformer.pid, it will reboot the system!
    /etc/init.d/watchdog-tch stop
    /etc/init.d/transformer restart
    /etc/init.d/watchdog-tch start
  fi
  [ $SRV_dnsmasq -gt 0 ] && /etc/init.d/dnsmasq reload
  [ $SRV_dropbear -gt 0 ] && /etc/init.d/dropbear restart
  [ $SRV_system -gt 0 ] && /etc/init.d/system reload
  [ $SRV_nginx -gt 0 ] && /etc/init.d/nginx restart
}

RESTORE=n
WRAPPER=n
YES=n
THEME_ONLY='n'

FILENAME=$(basename $0)

while getopts :Wt:s:Tryui:c:h:l:f:d: option
do
 case "${option}" in
   W) WRAPPER=y;;
   l) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then KEEPLP=y; else KEEPLP=n; fi;;
   d) case "${OPTARG}" in y|Y) FIX_DFLT_USR=y; DFLT_USR='admin';; n|N) FIX_DFLT_USR=y; DFLT_USR='';;  *) echo 'WARNING: -d valid options are y or n';; esac;;
   f) case "${OPTARG}" in y|Y) FIX_FW_UPGRD=y; FW_UPGRD='1';;     n|N) FIX_FW_UPGRD=y; FW_UPGRD='0';; *) echo 'WARNING: -f valid options are y or n';; esac;;
   t) case "${OPTARG}" in
        g) THEME=night; COLOR=green; KEEPLP=n; echo WARNING: -tg deprecated. Use -tn -cg in future;; 
        o) THEME=night; COLOR=orange; KEEPLP=n; echo WARNING: -to deprecated. Use -tn -co in future;; 
        p) THEME=night; COLOR=purple; KEEPLP=n; echo WARNING: -tp deprecated. Use -tn -cp in future;; 
        l) THEME=light; COLOR=monochrome; KEEPLP=n;;
        m) THEME=telstramodern; COLOR=blue; KEEPLP=y;;
        n) THEME=night; COLOR=blue; KEEPLP=n;;
        *) THEME=telstra; COLOR=blue; KEEPLP=y;;
      esac;;
   c) case "$(echo ${OPTARG} | tr "BGMOPR" "bgmopr" | sed 's/\(.\)\(.*\)/\1/')" in
        b) COLOR=blue;; 
        g) COLOR=green;; 
        o) COLOR=orange;; 
        p) COLOR=purple;; 
        r) COLOR=red;; 
        *) COLOR=monochrome;;
      esac;;
   i) if [ "$(echo ${OPTARG} | tr "YN" "yn" | sed 's/\(.\)\(.*\)/\1/')" = "y" ]; then ICONS=visible; else ICONS=hidden; fi;;
   T) THEME_ONLY=y;;
   h) case "${OPTARG}" in
        d) TITLE="$VARIANT";;
        n) TITLE="$HOSTNAME";;
        s) TITLE="$VARIANT-$MAC";;
        *) TITLE="$OPTARG";;
      esac;;
   r) RESTORE=y;;
   y) YES=y;;
   u) RESULT=$(curl -s -k -L -I https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME | sed 's/\r//')
      if [ $? -ne 0 ]
      then
        echo "[tch-gui-unhide] GitHub check of $FILENAME failed with an unknown error. Do you have an internet connection?"
        return 5
      else 
        STATUS=$(echo $RESULT | grep '^HTTP' | cut -d' ' -f2)
        LENGTH=$(echo $RESULT | grep '^Content-Length' | cut -d' ' -f2)
        next=''
        for t in $(echo $RESULT | tr " " "$IFS")
        do
          case "$next" in
            s)  STATUS="$t";next='';;
            l)  LENGTH="$t";next='';;
            *)  case "$t" in
                  "HTTP/1.1") next='s';;
                  "Content-Length:") next='l';;
                  *) next='';;
                esac;;
          esac
        done
        case "$STATUS" in
          200)  if [ -f $FILENAME ]
                then
                  SIZE=$(ls -l $FILENAME | tr -s ' ' | cut -d' ' -f5)
                  if [ $SIZE -eq $LENGTH ]
                  then
                  echo "[tch-gui-unhide] Size of $FILENAME matches GitHub version - No update required"
                  return 0
                  fi
                fi
                curl -k -L https://raw.githubusercontent.com/seud0nym/tch-gui-unhide/master/$FILENAME > $FILENAME
                if [ $? -eq 0 ]
                then
                  chmod +x $FILENAME
                  echo "[tch-gui-unhide] Successfully updated $FILENAME."
                  return 0
                else
                  echo "[tch-gui-unhide] Failed to download updated version of $FILENAME."
                  return 2
                fi;;
          404)  echo "[tch-gui-unhide] Platform script $FILENAME not found!!!"
                return 4;;
          *)    echo "[tch-gui-unhide] GitHub check of $FILENAME returned $STATUS"
                return 5;;
        esac
      fi
      exit;;
   ?) echo "Optional parameters:"
      echo " -t l|n|t|m     : Set a light (l), night (n), or Telstra-branded Classic (t) or Modern (m) theme"
      echo "                    (Default is current setting, or Telstra Classic if no theme has been applied)"
      echo " -c b|o|g|p|r|m : Set the theme highlight colour"
      echo "                    b=blue o=orange g=green p=purple r=red m=monochrome"
      echo "                    (Default is current setting, or (m) for light theme or (b) for night theme)"
      echo " -i y|n         : Show (y) or hide (n) the card icons"
      echo "                    (Default is current setting, or (n) for light theme and (y) for night theme)"
      echo " -l y|n         : Keep the Telstra landing page (y) or de-brand the landing page (n)"
      echo "                    (Default is current setting, or (n) if no theme has been applied)"
      echo " -T             : Apply theme ONLY - bypass all other processing"
      echo " -h d|s|n|\"txt\" : Set the browser tabs title (Default is current setting)"
      echo "                    (d)=$VARIANT (s)=$VARIANT-$MAC (n)=$HOSTNAME (\"txt\")=Specified \"txt\""
      echo " -d y|n         : Enable (y) or Disable (n) Default user (i.e. GUI access without password)"
      echo "                    (Default is current setting)"
      echo " -f y|n         : Enable (y) or Disable (n) Firmware upgrade in the web GUI"
      echo "                    (Default is current setting)"
      echo " -y             : Bypass confirmation prompt (answers 'y')"
      echo " -r             : Restore changed GUI files to their original state (config changes are NOT restored)"
      echo " -u             : Check for and download any updates to $FILENAME"
      if [ $WRAPPER = y ]; then
      echo " -U             : Download the latest release, including utility scripts (will overwrite all existing script versions)."
      echo "                    When specifying the -U option, it must be the ONLY parameter specifed."
      fi
      echo 
      echo "NOTE #1: Theme (-t) does not need to be re-specified when re-running the script: current state will be 'remembered'"
      echo "         between executions (unless you execute with the -r option, which will remove all state information)"
      echo "NOTE #2: Use tch-gui-unhide-cards to set card order and visibility"
      echo
      exit;;
 esac
done

if [ "$ICONS" = "" ]; then
  if [ "$THEME" = "light" ]; then
    ICONS=hidden
  else
    ICONS=visible
  fi
fi

if [ $THEME_ONLY = n ]; then
restore_www() {
  for d in www/cards www/docroot www/lua www/snippets usr/share/transformer/commitapply usr/share/transformer/mappings/rpc usr/share/transformer/mappings/uci
  do
    echo 010@$(date +%H:%M:%S): Restoring directory /$d
    for s in $(find /rom/$d -type f | grep -v -E \(/rom/www/docroot/help\))
    do
      if [ "$s" = "/rom/www/cards/010_lte.lp" ]
      then
        t="/www/cards/003_lte.lp"
      else
        t=$(echo "$s" | cut -c5-)
      fi
      cmp -s "$s" "$t"
      if [ $? -ne 0 ]; then
        if [ "$1" = "V" ]; then
          echo 014@$(date +%H:%M:%S): Restoring file $t
        fi
        cp -f -p "$s" "$t"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done

    for f in $(find /$d -type f ! -path '/www/docroot/help*' ! -name '003_lte.lp')
    do
      if [ ! -f "/rom$f" -a -f "$f" ]; then
        if [ "$1" = "V" ]; then
          echo 019@$(date +%H:%M:%S): Removing file $f
        fi
        rm -f "$f"
        if [ $d = "usr/share/transformer" ]; then
          SRV_transformer=$(( $SRV_transformer + 1 ))
        fi
      fi
    done
  done
}

if [ $RESTORE = y ]; then
  restore_www V
  for d in /www/docroot/css/light /www/docroot/css/night /www/docroot/css/telstra /www/docroot/img/light /www/docroot/img/night /www/docroot/css/Telstra
  do
    if [ -d "$d" ]
    then
      if [ "$1" = "V" ]; then
        echo 019@$(date +%H:%M:%S): Removing empty directory $d
      fi
      rmdir "$d"
    fi
  done
  for s in $(uci show web | grep normally_hidden | cut -d. -f2)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry web.$s
    uci -q delete web.$s
    uci -q del_list web.ruleset_main.rules="$s"
    SRV_nginx=$(( $SRV_nginx + 2 ))
  done
  for s in $(uci show web | grep '=card' | cut -d= -f1)
  do
    echo 019@$(date +%H:%M:%S): Removing config entry $s
    uci -q delete $s
    SRV_nginx=$(( $SRV_nginx + 1 ))
  done
  RULES=$(uci get web.ruleset_main.rules)
  for s in $(echo $RULES | tr " " "\n" | grep -v dumaos | sort -u)
  do
    TARGET=$(uci -q get web.$s.target)
    if [ ! -z "$TARGET" -a ":$TARGET" != ":/" -a ! -f /www/docroot$TARGET -a ! -f /www$TARGET -a ! -f /www/docroot/ajax$TARGET ]; then
      echo 019@$(date +%H:%M:%S): Removing config entry web.$s
      uci -q delete web.$s
      uci -q del_list web.ruleset_main.rules="$s"
      SRV_nginx=$(( $SRV_nginx + 2 ))
    else
      ROLE=$(uci -q get web.$s.roles)
      if [ ! -z "$ROLE" -a "$ROLE" = "nobody" ]; then
        echo 019@$(date +%H:%M:%S): Resetting admin role on config entry web.$s.roles
        uci -q delete web.$s.roles
        uci add_list web.$s.roles="admin"
        SRV_nginx=$(( $SRV_nginx + 2 ))
      fi
    fi
  done
  uci commit web
  apply_service_changes
  echo "************************************************************"
  echo "* Restore complete. You should clear your browser cache of *"
  echo "* images and files to make sure you can see the changes.   *"
  echo "* NOTE: No config changes have been restored, except to    *"
  echo "*       remove added entries to display hidden modals.     *"
  echo "************************************************************"
  exit
fi

VERSION=$(uci get version.@version[0].version | cut -d- -f1)
if [ "$VERSION" = "$TARGET_VERSION" ]
then
  echo 020@$(date +%H:%M:%S): Current version matches target \($TARGET_VERSION\)
else
  echo 020@$(date +%H:%M:%S): WARNING: This script was developed for the $TARGET_VERSION firmware.
  echo 020@$(date +%H:%M:%S): It MAY work on your $VARIANT with $VERSION firmware, but it also may not.
  echo 020@$(date +%H:%M:%S): If you still wish to proceed, reply FORCE \(in capitals as shown\).
  read
  if [ "$REPLY" != "FORCE" ]
  then
    echo 020@$(date +%H:%M:%S): Good choice.
    exit
  fi
fi

echo "030@$(date +%H:%M:%S): This script will perform the following actions:"
if [ $FIX_SSH = y ]; then
echo "030@$(date +%H:%M:%S):  - Properly enable SSH access over LAN"
fi
if [ $FIX_CFG_PORT = y ]; then
echo "030@$(date +%H:%M:%S):  - Enable unsigned configuration export/import in the web GUI"
fi
if [ $FIX_FW_UPGRD = y ]; then
if [ "$FW_UPGRD" = "1" ]; then
echo "030@$(date +%H:%M:%S):  - Enable firmware upgrade in the web GUI"
else
echo "030@$(date +%H:%M:%S):  - DISABLE firmware upgrade in the web GUI"
fi
fi
if [ $FIX_DFLT_USR = y ]; then
if [ "$DFLT_USR" = "admin" ]; then
echo "030@$(date +%H:%M:%S):  - ENABLE the default user in the web GUI (i.e. GUI access without password)"
else
echo "030@$(date +%H:%M:%S):  - Disable the default user in the web GUI"
fi
fi
if [ $FIX_PARENT_BLK = y ]; then
echo "030@$(date +%H:%M:%S):  - Ensure admin role can administer the parental block"
fi
echo "030@$(date +%H:%M:%S):  - Allow editing of various settings that are not exposed in the stock GUI"
echo "030@$(date +%H:%M:%S):  - Unhide various cards and tabs contained in the stock GUI that are normally hidden"
echo "030@$(date +%H:%M:%S):  - Add new cards and screens, and modified cards and screens from the Ansuel tch-nginx-gui"
echo "030@$(date +%H:%M:%S):  - The GUI screens will be prettied up a bit and the $THEME theme applied with $COLOR highlights and $ICONS card icons"
if [ -f /www/docroot/landingpage.lp ]; then
echo "030@$(date +%H:%M:%S):  - The Telstra Landing Page will be $(echo $KEEPLP | sed -e 's/y/left UNCHANGED/' -e 's/n/themed and de-branded/')"
fi
if [ ! -z "$TITLE" ]; then
echo "030@$(date +%H:%M:%S):  - The browser tabs titles will be set to $TITLE"
fi

echo 030@$(date +%H:%M:%S): If you wish to proceed, enter y otherwise just press [Enter] to stop.
if [ $YES = y ]; then
  REPLY=y
else
  read
fi
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]; then
  exit
fi

echo 030@$(date +%H:%M:%S): IMPORTANT NOTE - You can restore changed GUI files to their original state by running: $0 -r

if [ $FIX_SSH = y ]; then
  echo 040@$(date +%H:%M:%S): Properly enabling SSH access over LAN
  # We need to enable this properly as you can enable/disable via the GUI, and if done
  # without allowing password auth and root login, it can accidently prevent SSH access
  uci set dropbear.lan.enable='1'
  uci set dropbear.lan.PasswordAuth='on'
  uci set dropbear.lan.RootPasswordAuth='on'
  uci set dropbear.lan.RootLogin='1'
  uci commit dropbear
  SRV_dropbear=$(( $SRV_dropbear + 4 ))
fi
  
if [ $FIX_CFG_PORT = y ]; then
  echo 040@$(date +%H:%M:%S): Enabling unsigned configuration export/import in the web GUI
  uci set system.config.export_plaintext='1'
  uci set system.config.export_unsigned='1'
  uci set system.config.import_plaintext='1'
  uci set system.config.import_unsigned='1'
  uci commit system
  SRV_system=$(( $SRV_system + 4 ))
fi

if [ $FIX_FW_UPGRD = y ]; then
  if [ $FW_UPGRD = 1 ]; then
    echo 040@$(date +%H:%M:%S): Enabling firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='1'
    uci set web.uidefault.upgradefw_role='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  else
    echo 040@$(date +%H:%M:%S): DISABLING firmware upgrade in the web GUI
    uci set web.uidefault.upgradefw='0'
    SRV_nginx=$(( $SRV_nginx + 1 ))
  fi
  uci commit web
fi

if [ $FIX_DFLT_USR = y ]; then
  if [ "$DFLT_USR" = "admin" ]; then
    echo 040@$(date +%H:%M:%S): Enabling the default user in the web GUI
    uci set web.default.default_user='usr_admin'
    uci set web.uidefault.defaultuser='admin'
  else
    echo 040@$(date +%H:%M:%S): Disabling the default user in the web GUI
    uci -q delete web.default.default_user
    uci -q delete web.uidefault.defaultuser
  fi
  uci commit web
  SRV_web=$(( $SRV_web + 2 ))
fi

if [ $FIX_PARENT_BLK = y ]; then
  echo 040@$(date +%H:%M:%S): Ensuring admin role can administer the parental block
  uci -q del_list web.parentalblock.roles='admin'
  uci add_list web.parentalblock.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 2 ))
fi

echo 050@$(date +%H:%M:%S): Ensuring card sequence and visibility is up to date
ALLCARDRULES="$(uci show web | grep =card)"
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="${CARDFILE#*_}"
  CARDRULE="card_$(basename $CARD .lp)"
  MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
  HIDDEN=$(uci -q get web.${CARDRULE}.hide)
  if [ -z "$MODAL" ]
  then
    MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
  fi
  MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
  if [ ! -z "$MODALRULE" -a "$(uci -q get web.$MODALRULE.roles)" != "admin" ]
  then
    echo "050@$(date +%H:%M:%S):  - Converting $CARD card visibility from modal-based visibility"
    HIDDEN=1
    uci -q delete web.$MODALRULE.roles
    uci add_list web.$MODALRULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
  if [ -z "$HIDDEN" -o \( "$HIDDEN" != "0" -a "$HIDDEN" != "1" \) ]
  then
    HIDDEN=0
  fi
  uci set web.${CARDRULE}=card
  uci set web.${CARDRULE}.card="$(basename $CARDFILE)"
  uci set web.${CARDRULE}.modal="$MODALRULE"
  uci set web.${CARDRULE}.hide="$HIDDEN"
  SRV_nginx=$(( $SRV_nginx + 4 ))
done
uci commit web

# Do the restore
restore_www
echo 050@$(date +%H:%M:%S): Pre-update restore completed

echo 060@$(date +%H:%M:%S): Deploy modified iperf GUI code
echo H4sIAAAAAAAAA+3VS2vCMAAH8J4L/Q4hJwXtGu3jtNPOO+0DlK6LrlCbkKSHMfzuSyJOkWHppo6x/+/SvMij/z56re6CK0usoij81Tq9+jJbFmlRLNzAIGFJmhQBya69MafXplKEBEoIc27cUP8f1dv89Wul+BWfgvH5s4wx5H8Lh/yNqjq9EmrDL/1FGJ9/mmRL5H8LX+e/qaRsurW+zIMwJn+2WNr8szzH+38TA/k3kqtVbKs/WWMo/yzJ9/mzBcts/racBiS51CHP+ef5t6KuWlKLbtWsS582uSfUF2gURuF8Tvq6iX1DFLrngqsJtU0lM4LRaaz4utGGqwc/xWMlJ8eTTU/niHe9Ubhb2LeVuza78HsUEvJZO55o5no0r00jusMOfat5k/ykSUg3Tu9nJIRKJYygM0JfuDalFMq4Cu+q55ZTN2YbhVu32TNHfGo2suXuiMfbnpIo/O0Uv2/g/bd34ef/gPH//zzN8P0HAAAAAAAAAAAAAAAAGO0D6uUv8gAoAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified broadband GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified devices GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified firewall GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified gateway GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified internet GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified iproutes GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified management GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified multiap GUI code
echo H4sIAAAAAAAAA+0aa3PbNjKf9SswdHwipxT1suybRtbFTdPHTHKX1p72ZlyPBiIhCReKZElQdprx/fZbPPiUKMtJ5fam2LElErtYALuLxe5Ct7e33WcHhh7A2dmZ+Aaof4vn/vBscHbaG/VPhs96/d5J/+QZGh16YhzShOEYoWdxGLJddA/h/0/hFvTv4thLDmgFe+r/bDAajk6HI9B/fzToaf0/BRT67/VOprc0Jj5JkuksDBNG4sTxo88fgyv49PS0Sf+j01G/pv/TwQD2f+/zh34Y/uL673SimLAYB4mPGfG+RF6IgpAhd4mDBUFsSRM0pz5ptTod9DrAM58gP3SxT3/DjIZBa0EYI3fM4R9euMI0MNu3ZJbSzq9h0rZaLUGNErAqIEfnKFjcOS67c1SLwrthwEjApkviRyQGspj8moI1mgYwc6pYw1KdUtpAnyNy0nkYrzCzURowmCI8wJu7hPcIqGy0SNIZMElYTIOFkxGr17yPelddM6zkoN44IzVkFId3H8oz8zDDq9AjvpGLRS0MqD628IIvkQgZe9BipC51VqnPKI4cgXQU0rBbvGMc+j6Jm3oUFKVuYOyMjBYZbbbf4WFOOx5ZU5c4L2Ps0XA6+tYR1NALR6d0jl2yvRuM9RIoHEEiqUXH3dQZ71u/Px2AJXjbyQVT56WgcjgZdLlvtaoG4YARvr7DLnslm02FBjHTeSZjpypfHHgNmP/CRIwKfouwH0BLHrB9SGbgoHjsv8NsWZ7SNi1Cz74he+Z9oK0rXpJuJp5O5qI7XJJp0hF48NdGi/gJKfqinZ1LvQIvs0ohj0vB1kbFHGWLoplh9/0Sp75s5Pua+hlKMYfG3g4NlFdaGpHP9y234c7FO3TB21Fmv3Jlu2k9mmTEsKD9Za32rBLY13IrXJKYfyfOv6dXr99cXv14MRXDXbxzxGiOofrxrQ39amYJr2sSsx9JAp2uwn/N/kNcZvIxbOkduOGKd8tqgdNB78kHW0of0QDRCNM4MTlvC/wyX4x0A28vXl14XgyKLBnrVlSv92X1T622pKL88QvUFzLj/3WlVwT9KkfWNLNvryYdXRuZ7zBuyjtMtEv3ciOUJtyBUSXJHQnQSKmIlTZw51xyYdRN+cr4SjUhAznO9jGg3UDm6FurvByQQnlA5W5r422dDzIGxmfPRHhuFM7nSiGfy69Qr7KLFj+9IzjpmNn+pTX26Bq5Pk6ScyOJcDA0JrXGFfZ9Hl5yRNt6gYruxeHtuDEBIbwCsu8I9khsXhk/0843FH2lTNOwC/dpoQqb2iyy85SPOZ0tDLExO7NFh4cn58bfju7mPfL3F/V5wiPjK1XTLK2yVZ/mJV1FPnlDF8v8mNniWjbdpmXvxariIu2yJ7ZaFjfmmkqFQRXT3WOIstnZNXbghj7FawrlvKHBe7AwGTuZbSVZger4gFO6YOFi4ROFUG0xWYUM2o4T1UA90IlwwfKAMtp2YQBl7bTHUW5r6YwG8zAxJm27pWbxT9MYQ2AWBgt03H+eTI4Hz73M4Y27EjOBKacBxBXNpMkGbYaw7HztpTaYVjeatFtSmlVj7YKtTZq/ufVtdOKNB4r/ef7nhS7Pbg5WAdi3/gO532gEiV+vP+id9XX+/xRQ1r8KEn/3MR5f/xkOR7r+9ySwRf/NScInjvFA/edkMBxW9T/ojQCt6z9PAAes/4jjC8xniXllpCgFwdEmy0CPr+JEYJANxCVUTo4Zi+ksZYSHvh8RD1HFg4gYeMjNW04MdI/us0gG7B5irsYJVfH5QH5UJ4WMGpCRkxDG8zvT6PKdlgQ0ighLukUFaIWjdzjGq+TPXwM6bFVHdmkeotpHjXNfEuNPYJTeVimWbMNZcyroDLmFT3DQIMWdPUqi2ElXWdFOyvtaPdBGnHKVLGodYVN6PvkhJfEHMzccO1+8VcvPZM61K+lqTrjmcBQQG7E4hc+A+tautEtG+bPQ+4DSiK8sy/dgZzg0cP3Ug30BKVZxqIgdglCNJ4/bM6b8ubMMY/obCIXnCivCliFkBlwikPy73P+osXeWtiYbcqiL4a3c1olZ3d/gVKIcZW1IgIflS7byuc3di6frI/75RV/k8+M5Jb4HDmAy9glYpDcRKfdVURKRSZdoNcbdjGiD00ZSd0uZuwSlFSUVUJixaciGXST4W7CQ/hUe0tp/WFH64iNW9ll5sCrigXFg6bmkNhffLMaflcZRVtL4dEFeXn7/dXNBxFYFJ+V06jRZKv0oWYq8/PsgStl31PNIYBZZub2tYPWQ2ArD5BRWPenke6maZe7aDt9ArANewdrcn4kb04gBh+emcVRavuXIgMGcp4HYl6YF5ywQUb7E6wCvyHm2mBugBg9o8tiCP6QEZnNvveDTy/nDDP/o0OgvAZWo5EBjPD7/Gwx0/v80UNF//YD+ncZ4IP8b9E5q+V9/JH7/o/O/w8Pe+V/pHBinfhajBXiN4L/DLYfHWTIoas4J3TAmRSYoL7iyu3MINkV6eb69/RG36pQRlU99NHbEhXYWixWh2H0tFlcRUx7E55d2D6VZVlZEr3DILqzKjdf9m6Z2eTpWCu5iaddH4kvGAduWWL8S5itVsX2+0j1ZbRdbnijsy0bmlTUuMumQd62cVekKuoirsypBTNWPR9Y4duCNCzh7xfEiEUJUv8LwIaAq4yw0QT0pQMmHf/Jg8R8i6CuTyknwy9ipvS7dwor1iWtYVVuAMGctUlWDz0SwPUdmftUuGK9BiZa64c7p5ZO6cK9HdZVfoMBW82m21Y5hg40xWsZkfm4c1W5OslE50XEy7uIJhMF00rbVPG0xFf45uKnfSsiAsZ45jrupr+MwDRo0aNCgQYMGDRo0aNCgQYMGDRo0aNCgQYMGDRo0aNCgQYMGDRo0aPjTwv8AcMeakQBQAAA= | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified qos GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified system GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified telephony GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified theme GUI code
echo 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 | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified tod GUI code
echo  | base64 -d | tar -xzf - -C /

echo 060@$(date +%H:%M:%S): Deploy modified wireless GUI code
echo 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 | base64 -d | tar -xzf - -C /

if [ -f /www/docroot/booster.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local lp = require("web.lp")/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    -e 's#/booster.lp#/modals/wireless-boosters-boosters-modal.lp#' \
    /www/docroot/booster.lp > /www/docroot/modals/wireless-boosters-boosters-modal.lp
fi
if [ -f /www/docroot/boosterstatus.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster status screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/require("web.content_helper")/a local ui_helper = require("web.ui_helper")' \
    -e '/local type_convert/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#networkmap span12#networkmap#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/boosterstatus.lp > /www/docroot/modals/wireless-boosters-status-modal.lp
fi
if [ -f /www/docroot/wifidevices.lp ]
then
  echo 065@$(date +%H:%M:%S): Importing Booster Wi-Fi devices screen into advanced view
  sed \
    -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
    -e '/local content =/i \    ngx.print(ui_helper.createHeader(T"Wi-Fi Boosters", false, false, nil, nil) )' \
    -e 's#<div class="container">#<div class="modal-body update">#' \
    -e 's#<div class="row">#<div>#' \
    -e 's#lp.include("tabs-home.lp")#lp.include("tabs-boosters.lp")#' \
    -e 's#lp.include("footer.lp")#ngx.print(ui_helper.createFooter())#' \
    /www/docroot/wifidevices.lp > /www/docroot/modals/wireless-boosters-devices-modal.lp
fi

echo 066@$(date +%H:%M:%S): Importing Traffic Monitor into Diagnostics
sed \
  -e '/lp.include("header.lp")/,/lp.include("message.lp")/d' \
  -e '/^local attributes/i \    ngx.print(ui_helper.createHeader(T"Diagnostics", false, false, nil, nil) )' \
  -e '/"tabs-services/i <div class="modal-body update">\\' \
  -e '/^<div class="container toplevel">/d' \
  -e '/^<div class="row">/d' \
  -e '/^<div class="span11">/d' \
  -e '/^<fieldset>/,/^\\/d' \
  -e '/^<\/script>/a <\/script>\\' \
  -e '/^<\/script>/a <\/div>\\' \
  -e '/^<\/script>/,/^\\/d' \
  -e 's|tabs-services|tabs-diagnostics|' \
  -e 's|lp.include("footer.lp")|ngx.print(ui_helper.createFooter())|' \
  -e 's|800px;|900px;margin:0 auto;|' \
  -e 's|traffic.lp|modals/diagnostics-traffic-modal.lp|' \
  -e 's|<a href="%s" target="_self">|<a href="#" data-remote="%s">|' \
  /www/docroot/traffic.lp > /www/docroot/modals/diagnostics-traffic-modal.lp

if [ -f /etc/init.d/cwmpd ]
then
  echo 070@$(date +%H:%M:%S): CWMP found - Leaving in GUI
else
  echo 070@$(date +%H:%M:%S): CWMP not found - Removing from GUI
  rm /www/cards/090_cwmpconf.lp
  rm /www/docroot/modals/cwmpconf-modal.lp
  uci -q delete web.cwmpconfmodal
  uci -q del_list web.ruleset_main.rules=cwmpconfmodal
  uci -q delete web.card_cwmpconf
fi

if [ $(uci show wireless | grep -E ssid=\'\(Fon\|Telstra\ Air\) | wc -l) -eq 0 ]
then
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs not found - Removing from GUI
  rm /www/cards/010_fon.lp
  rm /www/docroot/modals/fon-modal.lp
  uci -q delete web.fon
  uci -q delete web.fonmodal
  uci -q del_list web.ruleset_main.rules=fon
  uci -q del_list web.ruleset_main.rules=fonmodal
  uci -q delete web.card_fon
else
  echo 070@$(date +%H:%M:%S): Telstra Air and Fon SSIDs FOUND - Leaving in GUI
fi

# Check all modals are enabled, except:
#  - diagnostics-airiq-modal.lp (requires Flash player)
#  - mmpbx-sipdevice-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - mmpbx-statistics-modal.lp (only required for firmware 17.2.0188-820-RA and earlier)
#  - speedservice-modal.lp
#  - wireless-qrcode-modal.lp (fails with a nil password index error)
echo 070@$(date +%H:%M:%S): Checking modal visibility
for f in $(ls /www/docroot/modals | grep -E -v \(diagnostics-airiq-modal.lp\|mmpbx-sipdevice-modal.lp\|mmpbx-statistics-modal.lp\|speedservice-modal.lp\|wireless-qrcode-modal.lp\) )
do
  MODAL=$(basename $f)
  uci show web | grep -q "/modals/$MODAL"
  if [ $? -eq 1 ]
  then
    CREATE_RULE=y
    RULE=$(basename $f .lp | sed -e 's/-//g')
  else
    CREATE_RULE=n
    RULE=$(uci show web | grep "/modals/$MODAL" | grep -m 1 -v card_ | cut -d. -f2)
  fi
  if [ $CREATE_RULE = y ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL
    uci add_list web.ruleset_main.rules=$RULE
    uci set web.$RULE=rule
    uci set web.$RULE.target=/modals/$MODAL
    uci set web.$RULE.normally_hidden='1'
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  elif [ "$(uci -q get web.$RULE.roles)" != "admin" ]
  then
    echo 070@$(date +%H:%M:%S): Enabling $MODAL 
    uci -q delete web.$RULE.roles
    uci add_list web.$RULE.roles='admin'
    SRV_nginx=$(( $SRV_nginx + 2 ))
  fi
done
uci commit web

echo 070@$(date +%H:%M:%S): Processing any additional cards
for CARDFILE in $(find /www/cards/ -maxdepth 1 -type f | sort)
do
  CARD="$(basename $CARDFILE)"
  CARDRULE=$(uci show web | grep "^web\.card_.*${CARDFILE#*_}" | cut -d. -f2)
  if [ -z "$CARDRULE" -o -z "$(uci -q get web.${CARDRULE}.modal)" ]
  then
    CARDRULE="card_$(basename ${CARDFILE#*_} .lp)"
    MODAL=$(grep createCardHeader $CARDFILE | grep -o "modals/.*\.lp")
    if [ -z "$MODAL" ]
    then
      MODAL=$(grep '\(modalPath\|modal_link\)' $CARDFILE | grep -m 1 -o "modals/.*\.lp")
    fi
    MODALRULE=$(uci show web | grep $MODAL | grep -m 1 -v card_ | cut -d. -f2)
    uci set web.${CARDRULE}=card
    uci set web.${CARDRULE}.card="$CARD"
    uci set web.${CARDRULE}.modal="$MODALRULE"
    uci set web.${CARDRULE}.hide='0'
    SRV_nginx=$(( $SRV_nginx + 4 ))
  fi
done

if [ "$(uci -q get web.gatewaystatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling gateway status updates
  uci add_list web.ruleset_main.rules='gatewaystatusajax'
  uci set web.gatewaystatusajax='rule'
  uci set web.gatewaystatusajax.target='/ajax/gateway-status.lua'
  uci set web.gatewaystatusajax.normally_hidden='1'
  uci add_list web.gatewaystatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.broadbandstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling upload/download status updates
  uci add_list web.ruleset_main.rules='broadbandstatusajax'
  uci set web.broadbandstatusajax='rule'
  uci set web.broadbandstatusajax.target='/ajax/broadband-status.lua'
  uci set web.broadbandstatusajax.normally_hidden='1'
  uci add_list web.broadbandstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi
if [ "$(uci -q get web.ssidstatusajax)" != "rule" ]
then
  echo 075@$(date +%H:%M:%S): Enabling SSID status updates
  uci add_list web.ruleset_main.rules='ssidstatusajax'
  uci set web.ssidstatusajax='rule'
  uci set web.ssidstatusajax.target='/ajax/ssid-status.lua'
  uci set web.ssidstatusajax.normally_hidden='1'
  uci add_list web.ssidstatusajax.roles='admin'
  uci commit web
  SRV_nginx=$(( $SRV_nginx + 4 ))
fi

SERIAL=$(uci get env.var.serial)
echo 080@$(date +%H:%M:%S): Change config export filename from config.bin to $VARIANT-$SERIAL-$VERSION@YYMMDD.bin
echo 080@$(date +%H:%M:%S): Add reset/upgrade warnings
sed \
  -e "s/=config.bin/=$VARIANT-$SERIAL-$VERSION@\" .. os.date(\"%Y%m%d\") .. \".bin/" \
  -e '/local basic =/i local lose_root_warning = { alert = { class = "alert-info", style = "margin-bottom:5px;" }, }' \
  -e '/T"Reset"/i \    html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Using the <b><i class=\\"icon-bolt\\" style=\\"width:auto;\\">\&nbsp;</i> Reset</b> button will cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script from the command line to factory reset and still retain root access.", lose_root_warning)' \
  -e '/T"Upgrade"/i \          html[#html + 1] = ui_helper.createAlertBlock(T"<b>WARNING!</b> Upgrading firmware using this method may cause loss of root access! Use the <i>reset-to-factory-defaults-with-root</i> utility script with the -f option from the command line to upgrade to the firmware and still retain root access.", lose_root_warning)' \
  -e '/"uci.versioncusto.override.fwversion_override"/a \   unhide_version = "rpc.gui.UnhideVersion",' \
  -e '/"Serial Number"/i \    html[#html + 1] = ui_helper.createLabel(T"tch-gui-unhide Version", content["unhide_version"], basic)' \
  -i /www/docroot/modals/gateway-modal.lp

echo 080@$(date +%H:%M:%S): Fix uptime on basic Broadband tab
sed -e 's/days > 1/days > 0/' -i /www/docroot/broadband.lp

echo 085@$(date +%H:%M:%S): Decrease LOW and MEDIUM LED levels
sed -e 's/LOW = "2"/LOW = "1"/' -e 's/MID = "5"/MID = "4"/' -i /www/docroot/modals/gateway-modal.lp

if [ -z "$TITLE" ]
then
  echo 090@$(date +%H:%M:%S): Leaving browser tabs title unchanged
else
  echo 090@$(date +%H:%M:%S): Change the title in browser tabs to $TITLE
  for f in /www/docroot/gateway.lp /www/lua/hni_helper.lua /www/snippets/header.lp
  do
      sed -e "s,title>.*</title,title>$TITLE</title," -i $f
  done
  sed -e "s,<title>');  ngx.print( T\"Change password\" ); ngx.print('</title>,<title>$TITLE - Change Password</title>," -i /www/docroot/password.lp
fi

echo 090@$(date +%H:%M:%S): Change the Gateway card title to $VARIANT
sed -e "s/Gateway/$VARIANT/g" -i /www/cards/001_gateway.lp

sed -e "s/\(Modem\|Gateway\)/$VARIANT/g" -i /www/lua/telstra_helper.lua
sed -e '/local telstra_helper/,/local symbolv1/d' -e 's/symbolv1/"LAN"/' -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix card visibility check
sed \
  -e '/local access/,/end/d' \
  -e 's/access and/session:hasAccess(card.modal) or/' \
  -i /www/lua/cards.lua

echo 100@$(date +%H:%M:%S): Remove obsolete help links
for m in $(grep -l 'local help_link = ' /www/docroot/modals/*)
do
  sed -e 's/\(local help_link = \)\(.*\)/\1nil/' -i "$m"
done

echo 100@$(date +%H:%M:%S): Update gateway card and status ajax with hardware temperature monitors
elements=""
for m in $(find /sys/devices/i2c-*/ -name temp1_input)
do
  elements="$elements\"$m\","
done
for f in /www/cards/001_gateway.lp /www/docroot/ajax/gateway-status.lua
do
  sed -e "s|\(^local temp1_input = {\)|\1$elements|" -i $f
done

echo 100@$(date +%H:%M:%S): Fix Internet card bug and bridge detection, and hide if no WAN interface defined
sed \
  -e '/local proxy = require("datamodel")/a local wan_ifname = proxy.get("uci.network.interface.@wan.ifname")' \
  -e '/local proxy = require("datamodel")/a if wan_ifname and wan_ifname ~= "" then' \
  -e '$ a end' \
  -e '/^local untaint_mt/a local dyntab_helper = require("web.dyntab_helper")' \
  -e 's/\(^local mode_active =\)\( "".*\)/\1 dyntab_helper.process(imh).current.name/' \
  -e '/^local mode_active = "default"/d' \
  -e '/mode_active = "uci.network.config.wan_mode"/,/wan_proto = "uci.network.interface.@wan.proto"/d' \
  -e 's/if content_mode.mode_active ~= "" then/if mode_active == "" then/' \
  -e "/-- Get current mode by 'wan_mode'/,/--'wan_mode' not there, then get @wan.proto/d" \
  -e 's/mode_active = content_mode.wan_proto/mode_active = mode_default/' \
  -i /www/cards/003_internet.lp

echo 100@$(date +%H:%M:%S): Add IPv6 address to Internet card if assigned
for f in $(ls /www/cards/snippets/003_internet_* | grep -E '(dhcp|pppoe|static)')
do
  prefix="$(echo $f | grep -o -E '(dhcp|ppp|static)')"
  if [ $prefix = "ppp" ]
  then
    table=content_rpc
  else
    table=cs
  fi
  sed \
    -e '/network.interface.@wan.ipaddr/a \    ip6addr = "rpc.network.interface.@wan6.ip6addr",' \
    -e "/${table}\[\"ipaddr\"\])/a \          format(T'<br><strong style=\"letter-spacing:-1px\">%s</strong>', ${table}[\"ip6addr\"])," \
    -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
    -i $f
done

echo 100@$(date +%H:%M:%S): Hide Mobile card if no devices found
sed \
  -e '/require("web.lte-utils")/a local result = utils.getContent("rpc.mobiled.DeviceNumberOfEntries")' \
  -e '/require("web.lte-utils")/a local devices = tonumber(result.DeviceNumberOfEntries)' \
  -e '/require("web.lte-utils")/a if devices and devices > 0 then' \
  -e '$ a end' \
  -i $(find /www/cards -type f -name '*lte.lp')

echo 100@$(date +%H:%M:%S): Add DHCPv6 Server status and prefix to LAN card 
sed \
  -e '/local dhcpState$/a local dhcp6State_text = ""' \
  -e '/local dhcpState$/a local dhcp6State' \
  -e '/local dhcpState$/a local slaacState_text = ""' \
  -e '/local dhcpState$/a local slaacState' \
  -e '/local dhcpState$/a local ipv6State_text' \
  -e '/@lan.dhcpv4/a \    ipv6State = "uci.network.interface.@lan.ipv6",' \
  -e '/@lan.dhcpv4/a \    dhcpv6State = "uci.dhcp.dhcp.@lan.dhcpv6",' \
  -e '/@lan.dhcpv4/a \    slaacState = "uci.dhcp.dhcp.@lan.ra",' \
  -e '/@lan.netmask/a \    ipv6prefix = "rpc.network.interface.@wan6.ip6prefix",' \
  -e 's/localdevIP = "uci/localdevIP = "rpc/' \
  -e 's/dhcpState/dhcp4State/g' \
  -e 's/DHCP enabled/DHCPv4 enabled/' \
  -e 's/DHCP disabled/DHCPv4 disabled/' \
  -e '/getExactContent/a \if mapParams["ipv6State"] == "" or mapParams["ipv6State"] == "1" then' \
  -e '/getExactContent/a \  if mapParams["dhcpv6State"] == "" or mapParams["dhcpv6State"] == "server" then' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 enabled"' \
  -e '/getExactContent/a \    dhcp6State = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    dhcp6State_text = T"DHCPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \  if mapParams["slaacState"] == "" or mapParams["slaacState"] == "server" then' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA enabled"' \
  -e '/getExactContent/a \    slaacState = "1"' \
  -e '/getExactContent/a \  else' \
  -e '/getExactContent/a \    slaacState_text = T"SLAAC + RA disabled"' \
  -e '/getExactContent/a \    slaacState = "0"' \
  -e '/getExactContent/a \  end' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    dhcp6State_text = T"IPv6 disabled"' \
  -e '/getExactContent/a \    dhcp6State = "0"' \
  -e '/getExactContent/a \end' \
  -e '/getExactContent/a \if mapParams["ipv6prefix"] == "" then' \
  -e '/getExactContent/a \    ipv6State_text = T""' \
  -e '/getExactContent/a \else' \
  -e '/getExactContent/a \    ipv6State_text = T"Prefix is "' \
  -e '/getExactContent/a \end' \
  -e '/createSimpleLight/a \            ui_helper.createSimpleLight(dhcp6State, dhcp6State_text)' \
  -e '/createSimpleLight/a \        )' \
  -e '/createSimpleLight/a \        if mapParams["ipv6State"] == "1" then' \
  -e '/createSimpleLight/a \            ngx.print(ui_helper.createSimpleLight(slaacState, slaacState_text))' \
  -e '/createSimpleLight/a \        end' \
  -e '/createSimpleLight/a \        ngx.print(' \
  -e 's/and netmask/<br>Subnet Mask/' \
  -e "/<\/p>/i \            '<br>'," \
  -e "/<\/p>/i \            format(T'%s <nobr><strong style=\"letter-spacing:-1px\">%s</strong></nobr>', ipv6State_text, mapParams[\"ipv6prefix\"])," \
  -e '/^\\$/d' \
  -e "s/<strong>/<strong style=\"letter-spacing:-1px\">/g" \
  -i /www/cards/005_LAN.lp

echo 100@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
  -e '/getExactContent/a \ ' \
  -e '/getExactContent/a local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
  -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\)\(.*\)\( then\)/if not server_addr or \(server_addr\2\)\3/' \
  -e 's/\r//' \
  -i /www/cards/018_relaysetup.lp

echo 100@$(date +%H:%M:%S): Add SAMBA and DLNA server names to the Content Sharing card
sed \
  -e 's/\t/  /g' \
  -e '/Light(content\["dlna/i\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["samba_name"]))' \
  -e '/Light(content\["dlna/a\        tinsert(html, format(T"<p class=\\"subinfos\\">%s</p>", content["dlna_name"]))' \
  -i /www/cards/012_contentsharing.lp

echo 100@$(date +%H:%M:%S): Only show xDSL Config card if WAN interface is DSL 
sed \
 -e '/uci.xdsl.xdsl.@dsl0.enabled/a \      wan_ifname = "uci.network.interface.@wan.ifname",' \
 -e '/if session:hasAccess/i \local wan_ifname = content["wan_ifname"]' \
 -e 's/if session:hasAccess/if wan_ifname and (wan_ifname == "ptm0" or wan_ifname == "atmwan") and session:hasAccess/' \
 -i /www/cards/093_xdsl.lp

echo 100@$(date +%H:%M:%S): Enable cards in Bridge Mode
# https://www.crc.id.au/hacking-the-technicolor-tg799vac-and-unlocking-features/#mozTocId685948
sed -e '/if info.bridged then/,/end/d' -i /www/lua/cards_limiter.lua

echo 105@$(date +%H:%M:%S): Changing description of router DNS Server from Telstra to $VARIANT 
sed -e "s/Telstra/$VARIANT/" -i /www/docroot/modals/ethernet-modal.lp

if [ -f ipv4-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv4 DNS Servers
  sed -e 's/\r//g' ipv4-DNS-Servers | sort -r | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      sed -e "/127.0.0.1/a \    {\"$ip\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

if [ -f ipv6-DNS-Servers ]
then
  echo 105@$(date +%H:%M:%S): Adding custom IPv6 DNS Servers
  sed -e 's/\r//g' ipv6-DNS-Servers | sort | while read -r host ip
  do 
    if [ ! -z "$ip" ]
    then 
      ipv6=$(echo $ip  | tr ':' '-')
      sed -e "/2001-4860-4860--8888/i \    {\"$ipv6\", T\"$host ($ip)\"}," -i /www/docroot/modals/ethernet-modal.lp
    fi
  done
fi

echo 105@$(date +%H:%M:%S): Added switch to enable/disable DHCPv6 Server and SLAAC
sed \
 -e '/"\.dhcpv4"/a \    dhcpv6State = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".dhcpv6",' \
 -e '/"\.dhcpv4"/a \    slaacState = "uci.dhcp.dhcp.@" .. cur_dhcp_intf .. ".ra",' \
 -e 's/dhcpv4Stateselect/dhcpStateselect/' \
 -e 's/DHCP Server/DHCPv4 Server/' \
 -e 's/\(ui_helper.createSwitch(T"IPv6 state", "localIPv6", content\["localIPv6"\]\)/\1, switch_class_enable/' \
 -e '/local stdattributes/i \              local switch_class_enable = {' \
 -e '/local stdattributes/i \                input = {' \
 -e '/local stdattributes/i \                  class = "monitor-changes",' \
 -e '/local stdattributes/i \                }' \
 -e '/local stdattributes/i \              }' \
 -e '/Lease time/a \                 ,[[<div class="monitor-localIPv6 monitor-1 monitor-hidden-localIPv6">]]' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"DHCPv6 Server", "dhcpv6State", content["dhcpv6State"], switchDHCP)' \
 -e '/Lease time/a \                 ,ui_helper.createSwitch(T"SLAAC + RA", "slaacState", content["slaacState"], switchDHCP)' \
 -e '/Lease time/a \                 ,[[</div>]]' \
 -e '/gVIES(/a \    dhcpv6State = gVIES(dhcpStateselect),' \
 -e '/gVIES(/a \    slaacState = gVIES(dhcpStateselect),' \
 -i /www/docroot/modals/ethernet-modal.lp

 if [ "$VERSION" != "18.1.c.0462" ]
then
  if [ "$(uci get dumaos.tr69.dumaos_enabled)" = '1' ]
  then
    echo 105@$(date +%H:%M:%S): Add DumaOS button
    sed \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '<a href=\"desktop/index.html#com.netdumasoftware.desktop\" class=\"btn\" id=\"dumaos\">'" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = T\"DumaOS\"" \
      -e "/id=\"basicview\"/i\            html[#html + 1] = '</a>'" \
      -e '/<div class="header span12">/a <script>if(window.self !== window.top){$("div.header").hide();}</script>\\' \
      -i /www/docroot/gateway.lp
  else
    echo 105@$(date +%H:%M:%S): DumaOS button NOT added - DumaOS is disabled
  fi
fi

echo 105@$(date +%H:%M:%S): Fix bug in relay setup card 
sed \
 -e '/local function getRelayBackUpValues/i local server_addr = proxy.get\("uci.dhcp.relay.@relay.server_addr"\)' \
 -e '/local function getRelayBackUpValues/i \ ' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value\)\( ==.*\)\( then\)/if not server_addr or \(server_addr\[1\].value\2\)\3/' \
 -e 's/\(if proxy.get."uci.dhcp.relay.@relay.server_addr".\[1\].value ~= ""\)\(.*\)\( then\)/if server_addr and server_addr\[1\].value ~= ""\2\3/' \
 -i /www/docroot/modals/relay-modal.lp

echo 106@$(date +%H:%M:%S): Fix setting of firewall forwarding rule when NAT enabled/disabled
sed \
  -e '/^local firewall_value/i \local function validateNat(value, object, key)' \
  -e '/^local firewall_value/i \  local valid, msg = post_helper.validateBoolean(value, object, key)' \
  -e '/^local firewall_value/i \  if valid and zonenum ~= "" and value ~= proxy.get("uci.firewall.zone."..zonenum..".masq")[1].value then' \
  -e '/^local firewall_value/i \    proxy.set("uci.firewall.zone."..zonenum..".conntrack", "1")' \
  -e '/^local firewall_value/i \    local fwd_enabled' \
  -e '/^local firewall_value/i \    if value == "1" then' \
  -e '/^local firewall_value/i \      fwd_enabled = "0"' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      fwd_enabled = "1"' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    if forwdnum == "" then' \
  -e '/^local firewall_value/i \      forwdnum = proxy.add("uci.firewall.forwarding.")' \
  -e '/^local firewall_value/i \      local count = 0' \
  -e '/^local firewall_value/i \      firewall_forwarding_path = content_helper.convertResultToObject("uci.firewall.forwarding.",firewall_forwarding)' \
  -e '/^local firewall_value/i \      for _ in ipairs(firewall_forwarding_path) do' \
  -e '/^local firewall_value/i \        count = count + 1' \
  -e '/^local firewall_value/i \      end' \
  -e '/^local firewall_value/i \      forwdnum = "@forwarding[" .. count .. "]"' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".src", "wan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".dest", "lan")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".name", "for_w2l")' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    else' \
  -e '/^local firewall_value/i \      proxy.set("uci.firewall.forwarding."..forwdnum..".enabled", fwd_enabled)' \
  -e '/^local firewall_value/i \    end' \
  -e '/^local firewall_value/i \    proxy.apply()' \
  -e '/^local firewall_value/i \  end' \
  -e '/^local firewall_value/i \  return valid, msg' \
  -e '/^local firewall_value/i \end' \
  -e '/^local firewall_value/,/^end/d' \
  -i /www/docroot/modals/wanservices-modal.lp

for r in dhcp pppoa pppoe static
do
  sed -e '/-- 106-BEGIN/d' -e '/-- 106-END/d' -i /www/snippets/internet-${r}-routed.lp
done

echo 110@$(date +%H:%M:%S): Enable various things that only the guest role\(!!!\) was allowed to do or see
for f in $(ls /www/docroot/modals/gateway-modal.lp /www/docroot/modals/internet-modal.lp /www/docroot/modals/wireless-modal.lp /www/docroot/modals/wanservices-modal.lp /www/snippets/tabs-diagnostics.lp /www/snippets/tabs-voice.lp)
do
  sed -e 's/\(if [^ ]*role[^=]*==[^"]*"\)\(guest\)\("\)/\1admin\3/g' -i $f
done
sed \
  -e 's/if role ~= "admin"/if role == "admin"/' \
  -e 's/if w\["provisioned"\] == "1"/if role == "admin" or w\["provisioned"\] == "1"/' \
  -i /www/docroot/modals/mmpbx-service-modal.lp

echo 115@$(date +%H:%M:%S): Show firewall status on card
sed \
  -e '/"rpc.network.firewall.mode"/i \    enabled = "rpc.network.firewall.enable",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv4 = "rpc.network.firewall.internetpingipv4",' \
  -e '/"rpc.network.firewall.mode"/i \    ping_ipv6 = "rpc.network.firewall.internetpingipv6",' \
  -e '/"rpc.network.firewall.mode"/i \    ipv6State = "uci.network.interface.@wan.ipv6",' \
  -e 's/T"low"/T"Low"/' \
  -e 's/T"normal"/T"Normal"/' \
  -e 's/T"high"/T"High"/' \
  -e 's/T"user"/T"User defined"/' \
  -e "/subinfos/i \    ');" \
  -e '/subinfos/i \    local fw_status' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      fw_status = "Firewall enabled"' \
  -e '/subinfos/i \    else' \
  -e '/subinfos/i \      fw_status = "Firewall disabled"' \
  -e '/subinfos/i \      content["enabled"] = "4"' \
  -e '/subinfos/i \    end' \
  -e '/subinfos/i \    ngx.print(ui_helper.createSimpleLight(content.enabled, fw_status))' \
  -e '/subinfos/i \    if content.enabled == "1" then' \
  -e '/subinfos/i \      local ping_ipv4_status' \
  -e '/subinfos/i \      if content.ping_ipv4 == "1" then' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping enabled"' \
  -e '/subinfos/i \      else' \
  -e '/subinfos/i \        ping_ipv4_status = "Answer IPv4 Ping disabled"' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \      ngx.print(ui_helper.createSimpleLight(content.ping_ipv4, ping_ipv4_status))' \
  -e '/subinfos/i \      if content["ipv6State"] == "1" then' \
  -e '/subinfos/i \        local ping_ipv6_status' \
  -e '/subinfos/i \        if content.ping_ipv6 == "1" then' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping enabled"' \
  -e '/subinfos/i \        else' \
  -e '/subinfos/i \          ping_ipv6_status = "Answer IPv6 Ping disabled"' \
  -e '/subinfos/i \        end' \
  -e '/subinfos/i \        ngx.print(ui_helper.createSimpleLight(content.ping_ipv6, ping_ipv6_status))' \
  -e '/subinfos/i \      end' \
  -e '/subinfos/i \    end' \
  -e "/subinfos/i \    ngx.print('\\\\" \
  -i /www/cards/008_firewall.lp

echo 115@$(date +%H:%M:%S): Fix NAT ALG modal errors
sed \
  -e 's/T"Enable"/T"Enabled"/' \
  -e 's/, readonly="true"/ /' \
  -e 's/unique/readonly/' \
  -e 's/string.upper/string.lower/' \
  -e '/attr = { input = { class="span1"/i \    readonly = true,' \
  -e '/^local hlp_attributes/i \table.insert(hlp_columns, table.remove(hlp_columns, 1))' \
  -e '/return true/i \  if object["enable"] == "" then' \
  -e '/return true/i \    object["enable"] = "1"' \
  -e '/return true/i \  end' \
  -e '/return true/i \  object["helper"] = string.lower(object["helper"])' \
  -e '/--Look for the enable set to nothing/,/^end/d' \
  -i /www/docroot/modals/nat-alg-helper-modal.lp

echo 120@$(date +%H:%M:%S): Show the hidden Telephony tabs and fix default tab
sed \
  -e 's/\(--\)\( *{"mmpbx-service-modal.lp\)/  \2/' \
  -e '/mmpbx-contacts/d' \
  -e '/T"Service"/i \    {"mmpbx-inoutgoingmap-modal.lp", T"In\/Outgoing Map"},' \
  -e '/T"Service"/a \    {"mmpbx-codec-modal.lp", T"Codecs"},' \
  -e '/T"Service"/a \    {"mmpbx-dial-plan-modal.lp", T"Dial Plans"},' \
  -e '/T"DECT"/a    \    {"mmpbx-contacts-modal.lp", T"Phone Book"},' \
  -i /www/snippets/tabs-voice.lp
# Default telephony tab is DECT!!! 
if [ "$VERSION" != "18.1.c.0462" ]
then
  sed \
    -e 's/if emission_state == "1"/if mmpbx_state == "1"/' \
    -e 's/modalPath = "\/modals\/mmpbx-dect-modal.lp"/modalPath = "\/modals\/mmpbx-info-modal.lp"/' \
    -i /www/cards/008_telephony.lp
else
  sed \
    -e 's/if mmpbx_state == "1" and (emission_state == "1" or emission_state == "0")/if mmpbx_state == "0"/' \
    -e '/modalPath = "\/modals\/mmpbx-dect-modal.lp"/,/elseif session:hasAccess("\/modals\/mmpbx-global-modal.lp") then/d' \
    -i /www/cards/008_telephony.lp
fi

if [ "$(uci -q get mmpbxbrcmfxsdev.@device[1])" != "device" ]
then
  # only 1 FXS device
  sed -e '/fxs2/d' -e '/FXS2/d' -i /www/docroot/modals/mmpbx-codec-modal.lp
fi

echo 125@$(date +%H:%M:%S): Display Telephony tabs even when mmpbx disabled
sed \
 -e '/if mmpbx_state == "1" then/d' \
 -e '/elseif session:hasAccess/,/end/d' \
 -i /www/snippets/tabs-voice.lp

echo 130@$(date +%H:%M:%S): Add missing icons on Diagnostics card and change default tab to Traffic Monitor
sed \
 -e 's^"Diagnostics", "modals/diagnostics-xdsl-modal.lp"^"Diagnostics", "modals/diagnostics-traffic-modal.lp"^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-xdsl\)^<td><div data-toggle="modal" data-remote="modals/diagnostics-traffic-modal.lp" data-id="diagnostics-traffic-modal"><img href="#" rel="tooltip" data-original-title="TRAFFIC" src="/img/light/Profit-01-WF.png" alt="traffic"></div></td>\\\n\1^' \
 -e 's^\(alt="ping/trace"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/logviewer-modal.lp" data-id="logviewer-modal"><img href="#" rel="tooltip" data-original-title="LOGVIEWER" src="/img/light/log-viewer.png" alt="logviewer"></div></td>\2^' \
 -e 's^\(<td><div data-toggle="modal" data-remote="modals/diagnostics-connection\)^<td><div data-toggle="modal" data-remote="modals/log-connections-modal.lp" data-id="log-connections-modal"><img href="#" rel="tooltip" data-original-title="CONNECTIONS" src="/img/light/Data-Sync-WF.png" alt="connections"></div></td>\\\n\1^' \
 -e 's^\(alt="network"></div></td>\)\(</tr>\\\)^\1\\\n <td><div data-toggle="modal" data-remote="modals/diagnostics-tcpdump-modal.lp" data-id="diagnostics-tcpdump-modal"><img href="#" rel="tooltip" data-original-title="TCPDUMP" src="/img/light/tcp-dump.png" alt="tcpdump"></div></td>\2^' \
 -e 's|\(alt="\)\([^/"]*\)|class="diag-\2" \1\2|g' \
 -i /www/cards/009_diagnostics.lp

echo 130@$(date +%H:%M:%S): Rename Diagnostics tabs and add Connections and Traffic Monitor tabs
sed \
 -e 's/"Connection"/"Connection Check"/' \
 -e 's/Log viewer/Log Viewer/' \
 -e 's/"Network"/"Ports"/' \
 -e 's/Tcpdump/TCP Dump/' \
 -e '/xdsl-modal/i       \    {"diagnostics-traffic-modal.lp", T"Traffic Monitor"},'  \
 -e '/connection-modal/a \    {"log-connections-modal.lp", T"Network Connections"},'  \
 -e '/string.len(ngx.var.args)/,/^end/d' \
 -e '/airiq/,/^[ ]*$/d' \
 -i /www/snippets/tabs-diagnostics.lp
sed \
 -e 's/tabs-management/tabs-diagnostics/' \
 -e 's/"Management"/"Diagnostics"/' \
 -i /www/docroot/modals/log-connections-modal.lp

echo 130@$(date +%H:%M:%S): Fix headings on Diagnostics tabs
for m in $(grep -L 'createHeader(T"Diagnostics"' /www/docroot/modals/diagnostics-*)
do 
    sed -e 's/\(createHeader(\)\([T]*\)\("Diagnostics\)\([^"]*\)\("\)/\1T\3\5/' -i $m
done

echo 135@$(date +%H:%M:%S): Add missing DHCP Relay configuration
sed \
 -e '/local format/a \local exists = proxy.get("uci.dhcp.relay.@relay.server_addr")' \
 -e '/local format/a \if not exists then' \
 -e '/local format/a \  proxy.add("uci.dhcp.relay.","relay")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.server_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.local_addr","")' \
 -e '/local format/a \  proxy.set("uci.dhcp.relay.@relay.interface","")' \
 -e '/local format/a \  proxy.apply();' \
 -e '/local format/a \end' \
 -i /www/docroot/modals/relay-modal.lp


echo 140@$(date +%H:%M:%S): Sort the device map hosts by name
sed \
 -e 's/loadTableData("rpc.hosts.host.", dcols)/loadTableData("rpc.hosts.host.", dcols, nil, "FriendlyName")/' \
 -i /www/snippets/networkmap.lp

echo 145@$(date +%H:%M:%S): Allow increase in WiFi output power to +6dBm
sed \
 -e '/{"-6", T"25%"}/a \    {"-5", T"&nbsp;-5 dBm"},' \
 -e '/{"-6", T"25%"}/a \    {"-4", T"&nbsp;-4 dBm"},' \
 -e '/{"-2", T"75%"}/a \    {"-1", T"&nbsp;-1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+1", T"&nbsp;+1 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+2", T"&nbsp;+2 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+3", T"&nbsp;+3 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+4", T"&nbsp;+4 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+5", T"&nbsp;+5 dBm"},' \
 -e '/{"0", T"100%"}/a \    {"+6", T"&nbsp;+6 dBm"},' \
 -e 's/-6", T"25%/-6", T"\&nbsp;-6 dBm/' \
 -e 's/-3", T"50%/-3", T"\&nbsp;-3 dBm/' \
 -e 's/-2", T"75%/-2", T"\&nbsp;-2 dBm/' \
 -e 's/0", T"100%/0", T"\&nbsp;0 dBm/' \
 -e 's/T"Output Power"/T"Output Power Adjustment"/' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Add cogs to card headers
for f in $(grep -l createCardHeaderNoIcon /www/cards/*)
do
  sed -e 's/createCardHeaderNoIcon/createCardHeader/' -i $f
done
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/switchName, content\["cwmp_state"\], {input = {id = "cwmp_card_state"}}/nil, nil, nil/' -i /www/cards/090_cwmpconf.lp

echo 150@$(date +%H:%M:%S): Fix mobile signal placement
sed \
 -e '/^<\/script>/i var div = document.querySelector("#mobiletab").querySelector(".header-title");\\' \
 -e '/^<\/script>/i var signal = document.querySelector("#signal-strength-indicator-small");\\' \
 -e '/^<\/script>/i div.parentNode.insertBefore(signal, div.nextSibling);\\' \
 -i $(find /www/cards -type f -name '*lte.lp')
sed \
 -e '$ a #signal-strength-indicator-small .absolute{float:right;margin-top:unset;margin-left:unset;height:unset;padding-left:10px;width:unset;position:relative;}' \
 -i /www/docroot/css/mobiled.css

echo 150@$(date +%H:%M:%S): Handle Wi-Fi switch
sed \
 -e '/Take the input/i \if ngx.var.request_method == "POST" then' \
 -e '/Take the input/i \  local radio_state = ngx.req.get_post_args().set_wifi_radio_state' \
 -e '/Take the input/i \  if radio_state then' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_2G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.set("uci.wireless.wifi-device.@radio_5G.state", radio_state:untaint())' \
 -e '/Take the input/i \     proxy.apply()' \
 -e '/Take the input/i \     ngx.exit(ngx.HTTP_NO_CONTENT)' \
 -e '/Take the input/i \  end' \
 -e '/Take the input/i \end' \
 -i /www/docroot/modals/wireless-modal.lp

echo 150@$(date +%H:%M:%S): Handle Telephony switch
 sed \
  -e '/local sipnet_options/i \if ngx.var.request_method == "POST" then' \
  -e '/local sipnet_options/i \  local mmpbx_enable = ngx.req.get_post_args().mmpbx_enable' \
  -e '/local sipnet_options/i \  if mmpbx_enable then' \
  -e '/local sipnet_options/i \    proxy.set("uci.mmpbx.mmpbx.@global.enabled", mmpbx_enable:untaint())' \
  -e '/local sipnet_options/i \    proxy.apply()' \
  -e '/local sipnet_options/i \    ngx.sleep(20)' \
  -e '/local sipnet_options/i \    ngx.exit(ngx.HTTP_NO_CONTENT)' \
  -e '/local sipnet_options/i \  end' \
  -e '/local sipnet_options/i \end' \
  -i /www/docroot/modals/mmpbx-info-modal.lp

echo 155@$(date +%H:%M:%S): Make Content Sharing Screen nicer
sed \
  -e 's/getValidateCheckboxSwitch()/validateBoolean/' \
  -e 's/<form class/<form id="content-sharing-modal" class/' \
  -e 's/createCheckboxSwitch/createSwitch/' \
  -e '/T"General status"/d' \
  -e '/"File Server Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"File Server Status" .. "<\/legend>")' \
  -e '/"File Server descript/a\                tinsert(html, "<\/fieldset>")' \
  -e '/DLNA Enabled"/i\                tinsert(html, "<fieldset><legend>" .. T"DLNA Server Status" .. "<\/legend>")' \
  -i /www/docroot/modals/contentsharing-modal.lp

else # THEME_ONLY = y
  echo 160@$(date +%H:%M:%S): Restoring CSS files to apply theme change
  cp -p /rom/www/docroot/css/gw.css /rom/www/docroot/css/gw-telstra.css /rom/www/docroot/css/responsive.css /www/docroot/css/
fi # End of if [ THEME_ONLY = n ]   

echo 160@$(date +%H:%M:%S): Adding or updating card background icons
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf012;"/' -i $(ls /www/cards/*_lte.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf129;"/' -i $(ls /www/cards/*_gateway.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0c1;"/' -i $(ls /www/cards/*_broadband.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0ac;"/' -i $(ls /www/cards/*_internet.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf09e;"/' -i $(ls /www/cards/*_wireless.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf015;"/' -i $(ls /www/cards/*_LAN.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf10b;"/' -i $(ls /www/cards/*_Devices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c2;"/' -i $(ls /www/cards/*_wanservices.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf132;"/' -i $(ls /www/cards/*_firewall.lp)
sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf095;"/' -i $(ls /www/cards/*_telephony.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf188;"/' -i $(ls /www/cards/*_diagnostics.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf0c0;"/' -i $(ls /www/cards/*_usermgr.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf115;"/' -i $(ls /www/cards/*_contentsharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf02f;"/' -i $(ls /www/cards/*_printersharing.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf023;"/' -i $(ls /www/cards/*_parental.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf074;"/' -i $(ls /www/cards/*_iproutes.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf017;"/' -i $(ls /www/cards/*_tod.lp)
sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf079;"/' -i $(ls /www/cards/*_relaysetup.lp)
[ -f /www/cards/*_cwmpconf.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf019;"/' -i $(ls /www/cards/*_cwmpconf.lp)
sed -e 's/xf0ad/xf0ec;"/' -i $(ls /www/cards/*_natalghelper.lp)
sed -e 's/xf0ad/xf0b1;"/' -i $(ls /www/cards/*_xdsl.lp)
[ -f /www/cards/*_nfc.lp ] && sed -e 's/class="content"/class="content card_bg mirror" data-bg-text="\&#xf0b2;"/' -i $(ls /www/cards/*_nfc.lp)
[ -f /www/cards/*_fon.lp ] && sed -e 's/class="content"/class="content card_bg" data-bg-text="\&#xf143;"/' -i $(ls /www/cards/*_fon.lp)

sed \
  -e 's/:56px/:80px/' \
  -e 's/:170px/:150px/' \
  -i /www/docroot/css/responsive.css

for f in $(grep -l -r '</head>\\' /www 2>/dev/null | grep -v '\(airiq\|help\|landingpage\)')
do
  grep -q 'lp.include("../snippets/theme' $f
  if [ $? -eq 1 ]; then
    grep -q "/css/gw.css" $f
    if [ $? -eq 0 ]; then
      LP="advanced"
    else
      LP="basic"
    fi
    req=$(grep -n 'local lp = require("web.lp")' $f | cut -d: -f1)
    if [ -z "$req" ]; then
      sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
    else
      head=$(grep -n '</head>\\' $f | cut -d: -f1)
      if [ $head -lt $req ]; then
        sed -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -e "${req}d" -i $f
      else
        sed -e "/<\/head>\\\/i '); lp.include(\"../snippets/theme-$LP.lp\"); ngx.print('\\\\" -i $f
      fi
    fi
  fi
done

echo 165@$(date +%H:%M:%S): Deploy theme files
echo  | base64 -d | tar -xzf - -C /

# Fix directory permissions after tar extracts
chmod +x /www /www/docroot /www/docroot/css /www/docroot/css/telstra /www/docroot/css/light /www/docroot/css/night /www/docroot/img /www/docroot/img/telstra /www/docroot/img/light /www/docroot/img/night /www/snippets

echo 165@$(date +%H:%M:%S): Persisting theme settings
echo -n "THEME=$THEME COLOR=$COLOR ICONS=$ICONS KEEPLP=$KEEPLP" > /etc/tch-gui-unhide.theme

sed \
  -e '$ a .card_bg:after{font-size:110px;bottom:-5px;z-index:-20;}' \
  -i /www/docroot/css/gw.css
if [ -f /www/docroot/landingpage.lp -a "$KEEPLP" = "n" ]
then
  echo 166@$(date +%H:%M:%S): Theming and de-branding landing page
  sed \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(5)>form>center>div{background-color:#f8f8f8;}" \
    -e "$ a body.landingpage #login_part_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #icon_down{display:none !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile{display:block !important;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(1){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(2){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(3)>table>tbody>tr>td{padding:0px 5px;width:50%;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(4){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(6){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(7){display:none;}" \
    -e "$ a body.landingpage #detailed_info_mobile>div:nth-child(8){display:none;}" \
    -e "$ a body.landingpage #footer_picture_mobile{display:none !important;}" \
    -i /www/docroot/css/gw-telstra.css
  sed \
    -e 's/.hidden-desktop{display:none/.hidden-desktop{display:inherit/' \
    -e 's/.visible-desktop{display:inherit/.visible-desktop{display:none/' \
    -i /www/docroot/css/responsive.css
  sed \
    -e "s,<title>');  ngx.print( T\"Login\" ); ngx.print('</title>,<title>$TITLE Login</title>," \
    -e 's,<img src="/img/TELSTRA_LOGO.png" style="width:57px;height:65px;">,<img class="lp-logo" style="width:240px;margin-bottom:60px;">,' \
    -e 's/Firmware Number/Firmware Version/' \
    -e 's/Modem Make Model/Model/' \
    -e 's/height:60%;min-height:400px;/height:30%;min-height:350px;width:100%;/' \
    -e 's/"-webkit-border-radius: 20px;-moz-border-radius: 20px;border-radius: 20px;width:50%;"/"display:block;margin-bottom:2px;width:220px;"/' \
    -e 's/"erroruserpass alert alert-error hide"/"erroruserpass alert alert-error hide" style="width:212px;margin:auto;padding:10px;"/' \
    -e 's/buttonborder linear-mobile" style="width:50%/linear-mobile" style="width:65px/' \
    -e "/<\/head>\\\/i '); local lp = require(\"web.lp\"); lp.include(\"../snippets/theme-basic.lp\"); ngx.print('\\\\" \
    /rom/www/docroot/landingpage.lp>/www/docroot/landingpage.lp
  # Have to restart if changing landing page
  SRV_nginx=$(( $SRV_nginx + 1 ))
fi
if [ -f /www/snippets/tabs-home.lp ]
then
  sed -e '/^else/,/T"Boost Your Wi-Fi"/d' -i /www/snippets/tabs-home.lp
fi
for f in /www/docroot/modals/assistance-modal.lp /www/docroot/modals/usermgr-modal.lp
do
  sed \
    -e '/^if not bridged.isBridgedMode/i \  local lp = require("web.lp")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.setpath("/www/snippets/")' \
    -e '/^if not bridged.isBridgedMode/i \  lp.include("tabs-management.lp")' \
    -e '/^if not bridged.isBridgedMode/,/^end/d' \
    -i $f
done

SRV_transformer=$(( $SRV_transformer + 2 ))

echo 175@$(date +%H:%M:%S): Fix Time of Day tabs
sed \
  -e 's/T"Time of day access control"/T"Device Access Control"/' \
  -e "/update\">\\\/a ');" \
  -e '/update">\\/a local lp = require("web.lp")' \
  -e '/update">\\/a lp.setpath("/www/snippets/")' \
  -e '/update">\\/a lp.include("tabs-tod.lp")' \
  -e "/update\">\\\/a ngx.print('\\\\" \
  -i /www/docroot/modals/tod-modal.lp

echo 175@$(date +%H:%M:%S): Restart Time of Day processing after updates applied 
sed -e 's|reload$|reload; /etc/init.d/tod restart;|' -i /usr/share/transformer/commitapply/uci_tod.ca
SRV_transformer=$(( $SRV_transformer + 1 ))

if [ $THEME_ONLY = n ]; then
  # Run any extra feature scripts
  for s in $(ls tch-gui-unhide-xtra.* 2>/dev/null)
  do
    echo -n 190@$(date +%H:%M:%S): Executing extra feature script for $(echo $s | cut -d. -f2-):
    . $s
  done
fi

echo 195@$(date +%H:%M:%S): Sequencing cards
for RULE in $(uci show web | grep '=card' | cut -d= -f1)
do
  CARD=$(uci -q get ${RULE}.card)
  FILE=$(ls /www/cards/ | grep "..._${CARD#*_}")
  if [ "$CARD" != "$FILE" ]
  then
    echo "195@$(date +%H:%M:%S):  - Renaming $FILE to $CARD"
    mv /www/cards/$FILE /www/cards/$CARD
  fi
done

if [ -z "$ALLCARDRULES" -a -f tch-gui-unhide-cards ]
then
  ./tch-gui-unhide-cards -s -a -q
fi

if [ $THEME_ONLY = n ]; then
  for l in $(grep -l -r 'current_year); ngx.print(' /www 2>/dev/null)
  do
    echo 200@$(date +%H:%M:%S): Adding tch-gui-unhide version to copyright in $l
    sed -e "s/\(current_year); ngx.print('\)/\1 \[tch-gui-unhide 2020.12.29 for FW Version 18.1.c.0585\]/" -i $l
  done
fi

echo 200@$(date +%H:%M:%S): Applying service changes if required...
apply_service_changes

chmod 644 /usr/share/transformer/mappings/rpc/gui.*
echo "************************************************************"
echo "* Done!! You should clear your browser cache of images and *"
echo "* files, otherwise you won't see the theme changes.        *"
echo "************************************************************"
echo
echo "++ TIP #1: Bookmark http://$(uci get network.lan.ipaddr)/gateway.lp"
echo "++         to bypass the Telstra Basic web GUI..."
echo
echo "++ TIP #2: Use the tch-gui-unhide-cards script to"
echo "++         change card order and visibility"
echo
