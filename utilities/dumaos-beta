ENABLED="$(uci -q get dumaos.tr69.dumaos_enabled)"
if [ -f /etc/init.d/dumaos -a ! -z "$ENABLED" ]
then
  while getopts onff option
  do
   case "${option}" in
     o) SETTING="";;
     n) SETTING=on;;
     f) SETTING=off;;
     ?) echo "Parameters: -on|-off";;
   esac
  done
  if [ -z "$SETTING" ]
  then
    if [ "$ENABLED" = "0" ]
    then
      echo "Currently DISABLED - re-run script with -on option to enable"
	else 
      echo "Currently ENABLED - re-run script with -off option to disable"
	fi
  else
    case "$SETTING" in
     on) # Enable DumaOS
         if [ "$ENABLED" = "0" ]
         then
           uci set dumaos.tr69.dumaos_enabled='1'
           # Turn off reboot on core dump, because if DumaOS gets into trouble, the router will just continally reboot
           uci set system.@coredump[0].reboot='0'
           # Commit config changes and start service
           uci commit
           /etc/init.d/dumaos start
         else
           echo Already enabled!!
         fi;;
     off) # Disable DumaOS
         if [ "$ENABLED" = "1" ]
         then
           uci set dumaos.tr69.dumaos_enabled='0'
           # Reset reboot on core dump
           uci set system.@coredump[0].reboot='1'
           # Commit config changes and stop service
           uci commit
           /etc/init.d/dumaos stop
         else
           echo Already disabled!!
         fi;;
    esac
  fi
 else
  echo "DumaOS beta not found?"
 fi