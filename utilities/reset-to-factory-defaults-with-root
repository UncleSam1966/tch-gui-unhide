#!/bin/sh

usage() {
cat <<EOH
Resets the device to factory defaults, and prepares a run-once root access setup script to be executed on the next boot.
Effectively the same as the procedure from https://hack-technicolor.readthedocs.io/en/stable/Upgrade/#preserving-root-access, 
but with some additional options.

Usage: $0 [options]

Options:
 -b           Make a full backup of your booted bank configuration (requires attached USB device).
 -c           Disable CWMPD configuration during first boot after reset.
 -f filename  Flash 'filename' into the mounted bank ($BOOTED) after reset and before reboot,
                If 'filename' ends with .rbi, it will be unpacked first, either to an attached USB device, or /tmp if no USB detected.
 -I n.n.n.n   Use IP address n.n.n.n after reset and reboot.
 -i           Keep existing IP address [$(ip address show dev br-lan | grep "inet " | tr -s " " | cut -d" " -f3 | cut -d/ -f1)] after reset and reboot.
 -n           Do NOT reboot.

EOH
exit
}

ACTIVE="$(cat /proc/banktable/active)"
BOOTED="$(cat /proc/banktable/booted)"
BKUP=""
FIRMWARE=""
REBOOT="Y"
IPADDR=""
CWMP=""
while getopts :bf:I:inc option
do
 case "${option}" in
  b)  BKUP="Y";;
  f)  FIRMWARE="${OPTARG}";;
  I)  echo "${OPTARG}" | grep -q -E "([^.]|^)([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]).([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]).([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5]).([0-9]{1,2}|1[0-9]{2}|2[0-4][0-9]|25[0-5])([^.]|$)"
      if [ $? -eq 1 ]
      then 
        echo ERROR! Invalid IP address: $OPTARG
        exit
      else 
        IPADDR="${OPTARG}"
      fi;;
  i)  IPADDR="$(ip address show dev br-lan | grep "inet " | tr -s " " | cut -d" " -f3 | cut -d/ -f1)";;
  n)  REBOOT="N";;
  c)  CWMP="uci delete cwmpd.cwmpd_config.acs_url;uci set cwmpd.cwmpd_config.state='0';uci commit cwmpd;/etc/init.d/cwmpd stop;";;
  *)  usage;;
 esac
done

USB="$(ls /mnt/usb | head -n1)"

if [ ! -z "$BKUP" ]
then
  if [ -z "$USB" ]
  then
    echo "WARNING: Backup requested, but no attached USB device found!"
    echo "         Are you REALLY sure you wish to proceed?"
  else
    SOURCE="$(cat /proc/banktable/booted)"
    TARGET="/mnt/usb/$USB/${SOURCE}_Backup-$(date +%Y-%m-%d@%H%M).tar.gz"
    echo "NOTE:    $SOURCE will be backed up to $TARGET"
  fi
else
  echo "NOTE:    NO backup requested"
fi

RBI=n
if [ ! -z "$FIRMWARE" ]
then
  if [ -f "$FIRMWARE" ]
  then
    if [ "$ACTIVE" = "bank_1" -a "$BOOTED" = "bank_2" ]
    then
      echo "$FIRMWARE" | grep -q -E '\.rbi$'
      if [ $? -eq 0 ]
      then
        RBI=y
        if [ -z "$USB" ]
        then
          echo "NOTE:    $FIRMWARE will be unpacked to /tmp before flashing. Do you have enough space?"
        else
          echo "NOTE:    $FIRMWARE will be unpacked to /mnt/usb/$USB before flashing. Do you have enough space?"
        fi
        echo "NOTE:    $(basename $FIRMWARE .rbi).bin will be flashed into $BOOTED after reset"
      else
        echo "$FIRMWARE" | grep -q -E '\.bin$'
        if [ $? -eq 1 ]
        then
          echo "WARNING: Flash image files normally end with '.bin'."
          echo "         Are you REALLY sure you wish to proceed?"
        fi
        echo "NOTE:    $FIRMWARE will be flashed into $BOOTED after reset"
      fi
    else 
      echo "WARNING: Bank plan is NOT optimal! Active bank is $ACTIVE and booted bank is $BOOTED!"
      echo "         Are you REALLY sure you wish to proceed?"
    fi
  else 
    echo "ABORTING: $FIRMWARE does not exist!"
    exit
  fi
fi

echo "NOTE:    root access will be preserved. root password will be reset to root"
if [ -z "$IPADDR" ]
then
  LANCONFIG=""
else
  echo "NOTE:    IP address will be set to '$IPADDR'"
  LANCONFIG="uci set network.lan.ipaddr='$IPADDR';uci commit network;/etc/init.d/network reload;"
fi
if [ ! -z "$CWMP" ]
then
  echo "NOTE:    CWMP will be STOPPED during the reboot (first boot only)"
fi
if [ "$REBOOT" = "Y" ]
then
  echo "WARNING: Device will attempt to reboot!"
fi
echo 
echo "WARNING: You are resetting to factory defaults!"
echo "         Any customisation or settings you have changed will be lost!"
echo
grep -q 'tch-gui-unhide' /www/docroot/gateway.lp
if [ $? -eq 0 ]; then
  echo "NOTE:    You will also need to re-run tch-gui-unhide after rebooting!"
  echo
fi
echo -n "ACTION:  Enter y to continue, or anything else to exit now "
read
if [ "$REPLY" != "y" -a "$REPLY" != "Y" ]
then
  exit
fi

if [ $RBI = y ]
then
  if [ -z "$USB" ]
  then
    target="/tmp/$(basename $FIRMWARE .rbi).bin"
  else
    target="/mnt/usb/$USB/$(basename $FIRMWARE .rbi).bin"
  fi
  echo "About to unpack $FIRMWARE to $target"
  echo -n "Enter y to continue, or anything else to abort: "
  read CONFIRM

  if [ "$CONFIRM" = "y" ]
  then
    if [ -f "$target" ]
    then
      echo "Removing existing $target before extracting $FIRMWARE"
      rm $target
    fi
    cat "$FIRMWARE" | (bli_parser && echo "Unpacking $FIRMWARE. Please wait... (This will take a while)" && (bli_unseal | dd bs=4 skip=1 seek=1 of="$target"))
    FIRMWARE="$target"
  else
    exit
  fi
fi

if [ ! -z "$USB" -a ! -z "$SOURCE" -a ! -z "$TARGET" ]
then
  echo "Backing up $SOURCE to $TARGET ..."
  tar -C /overlay -czf $TARGET $SOURCE
fi

echo "Resetting..."
rm -rf /overlay/`cat /proc/banktable/booted`
mkdir -p /overlay/`cat /proc/banktable/booted`/etc
chmod 755 /overlay/`cat /proc/banktable/booted` /overlay/`cat /proc/banktable/booted`/etc
echo -e "echo root:root | chpasswd
sed -i 's#/root:.*\$#/root:/bin/ash#' /etc/passwd
sed -i -e 's/#//' -e 's#askconsole:.*\$#askconsole:/bin/ash#' /etc/inittab
uci -q set \$(uci show firewall | grep -m 1 \$(fw3 -q print | \
egrep 'iptables -t filter -A zone_lan_input -p tcp -m tcp --dport 22 -m comment --comment \"!fw3: .+\" -j DROP' | \
sed -n -e 's/^iptables.\+fw3: \(.\+\)\".\+/\1/p') | \
sed -n -e \"s/\(.\+\).name='.\+'$/\1/p\").target='ACCEPT'
uci add dropbear dropbear
uci rename dropbear.@dropbear[-1]=afg
uci set dropbear.afg.enable='1'
uci set dropbear.afg.Interface='lan'
uci set dropbear.afg.Port='22'
uci set dropbear.afg.IdleTimeout='600'
uci set dropbear.afg.PasswordAuth='on'
uci set dropbear.afg.RootPasswordAuth='on'
uci set dropbear.afg.RootLogin='1'
uci set dropbear.lan.enable='0'
uci commit dropbear
/etc/init.d/dropbear enable
/etc/init.d/dropbear restart
$CWMP$LANCONFIG
rm /overlay/\$(cat /proc/banktable/booted)/etc/rc.local
" > /overlay/`cat /proc/banktable/booted`/etc/rc.local
chmod +x /overlay/`cat /proc/banktable/booted`/etc/rc.local
sync

if [ ! -z "$FIRMWARE" ]
then
  mtd write "$FIRMWARE" $(cat /proc/banktable/booted)
fi

if [ "$REBOOT" = "Y" ]
then
  echo Attempting to reboot...
  echo "######################################################"
  echo "# NOTE: If the reboot fails with an error message,   #" 
  echo "#       you can just manually power cycle the device #"
  echo "######################################################"
  reboot
fi
